{"version":3,"file":"index.js","sources":["../src/EasybaseProvider/types.ts","../src/EasybaseProvider/g.ts","../src/EasybaseProvider/object-observer.js","../src/EasybaseProvider/utils.ts","../src/EasybaseProvider/auth.ts","../src/EasybaseProvider/table.ts","../node_modules/EasyQB/src/builder-sq/context.js","../node_modules/EasyQB/src/builder-sq/index.js","../node_modules/EasyQB/src/lib-util/tagged_template.js","../node_modules/EasyQB/src/lib-util/build_utils.js","../node_modules/EasyQB/src/lib-util/change_case.js","../node_modules/EasyQB/src/lib-util/index.js","../node_modules/EasyQB/src/builder-expression/compile.js","../node_modules/EasyQB/src/builder-expression/index.js","../node_modules/EasyQB/src/lib-core/index.js","../node_modules/EasyQB/src/lib-sq/methods.js","../node_modules/EasyQB/src/lib-sq/common/values_array.js","../node_modules/EasyQB/src/lib-sq/clauses/with.js","../node_modules/EasyQB/src/lib-sq/common/expressions.js","../node_modules/EasyQB/src/lib-sq/clauses/select.js","../node_modules/EasyQB/src/lib-sq/common/conditions.js","../node_modules/EasyQB/src/lib-sq/common/from_items.js","../node_modules/EasyQB/src/lib-sq/clauses/from.js","../node_modules/EasyQB/src/lib-sq/clauses/where.js","../node_modules/EasyQB/src/lib-sq/clauses/group.js","../node_modules/EasyQB/src/lib-sq/clauses/having.js","../node_modules/EasyQB/src/lib-sq/clauses/setop.js","../node_modules/EasyQB/src/lib-sq/clauses/order.js","../node_modules/EasyQB/src/lib-sq/common/limit_offset.js","../node_modules/EasyQB/src/lib-sq/clauses/limit.js","../node_modules/EasyQB/src/lib-sq/clauses/offset.js","../node_modules/EasyQB/src/lib-sq/clauses/delete.js","../node_modules/EasyQB/src/lib-sq/clauses/returning.js","../node_modules/EasyQB/src/lib-sq/clauses/insert.js","../node_modules/EasyQB/src/lib-sq/clauses/update.js","../node_modules/EasyQB/src/lib-sq/clauses/set.js","../node_modules/EasyQB/src/lib-sq/clauses/index.js","../node_modules/EasyQB/src/lib-sq/query.js","../node_modules/EasyQB/src/lib-sq/common/index.js","../node_modules/EasyQB/src/lib-sq/index.js","../node_modules/EasyQB/src/dialect-postgres/query.js","../node_modules/EasyQB/src/lib-expression/util.js","../node_modules/EasyQB/src/lib-expression/index.js","../node_modules/EasyQB/src/dialect-postgres/expression.js","../node_modules/EasyQB/src/dialect-postgres/parameterize.js","../node_modules/EasyQB/src/dialect-postgres/index.js","../node_modules/EasyQB/src/index.js","../src/EasybaseProvider/db.ts","../src/EasybaseProvider/EasybaseProvider.ts","../src/index.ts"],"sourcesContent":["import { SQW } from \"EasyQB/types/sq\";\nimport { NewExpression } from \"EasyQB/types/expression\";\n\nexport interface ConfigureFrameOptions {\n    /** Edit starting index from which records will be retrieved from. Useful for paging. */\n    offset?: number;\n    /** Limit the amount of records to be retrieved. Set to -1 or null to return all records. Can be used in combination with offset. */\n    limit?: number | null;\n    /** Table to sync frame with. (Projects only) */\n    tableName?: string;\n}\n\nexport interface EasybaseProviderPropsOptions {\n    /** Custom authentication string. Can be set in integration menu. If it is set, it is required to access integration. This acts as an extra layer of security and extensibility. */\n    authentication?: string;\n    /** Log Easybase react status and events to console. */\n    logging?: boolean;\n}\n\nexport interface EasybaseProviderProps {\n    /** EasyBase ebconfig object. Can be downloaded in the integration drawer next to 'React Token'. This is automatically generated.  */\n    ebconfig: Ebconfig;\n    /** Optional configuration parameters. */\n    options?: EasybaseProviderPropsOptions\n}\n\nexport interface FrameConfiguration {\n    /** Edit starting index from which records will be retrieved from. Useful for paging. */\n    offset: number;\n    /** Limit the amount of records to be retrieved. Set to -1 or null to return all records. Can be used in combination with offset. */\n    limit: number | null;\n    /** Table to sync frame with. (Projects only) */\n    tableName?: string;\n}\n\nexport interface Ebconfig {\n    tt?: string,\n    integration: string,\n    version: string\n}\n\nexport interface AddRecordOptions {\n    /** If true, record will be inserted at the end of the collection rather than the front. Overwrites absoluteIndex. */\n    insertAtEnd?: boolean;\n    /** Values to post to EasyBase collection. Format is { column name: value } */\n    newRecord: Record<string, any>;\n    /** Table to post new record to. (Projects only) */\n    tableName?: string;\n}\n\nexport interface DeleteRecordOptions {\n    record: Record<string, any>;\n    /** Table to delete record from. (Projects only) */\n    tableName?: string;\n}\n\nexport interface QueryOptions {\n    /** Name of the query saved in Easybase's Visual Query Builder */\n    queryName: string;\n    /** If you would like to sort the order of your query by a column. Pass the name of that column here */\n    sortBy?: string;\n    /** By default, columnToSortBy will sort your query by ascending value (1, 2, 3...). To sort by descending set this to true */\n    descending?: boolean;\n    /** Edit starting index from which records will be retrieved from. Useful for paging. */\n    offset?: number;\n    /** Limit the amount of records to be retrieved. Can be used in combination with offset. */\n    limit?: number;\n    /** This object can be set to overwrite the query values as set in the integration menu. If your query is setup to find records where 'age' >= 0, passing in { age: 50 } will query where 'age' >= 50. Read more: https://easybase.io/about/2020/09/15/Customizing-query-values/ */\n    customQuery?: Record<string, any>;\n    /** Table to query. (Projects only) */\n    tableName?: string;\n}\n\nexport interface FileFromURI {\n    /** Path on local device to the attachment. Usually received from react-native-image-picker or react-native-document-picker */\n    uri: string,\n    /** Name of the file with proper extension */\n    name: string,\n    /** File MIME type */\n    type: string\n}\n\nexport interface UpdateRecordAttachmentOptions {\n    /** EasyBase Record to attach this attachment to */\n    record: Record<string, any>;\n    /** The name of the column that is of type file/image/video */\n    columnName: string;\n    /** Either an HTML File element containing the correct type of attachment or a FileFromURI object for React Native instances.\n     * For React Native use libraries such as react-native-image-picker and react-native-document-picker.\n     * The file name must have a proper file extension corresponding to the attachment. \n     */\n    attachment: File | FileFromURI;\n    /** Table to post attachment to. (Projects only) */\n    tableName?: string;\n}\n\nexport interface StatusResponse {\n    /** Returns true if the operation was successful */\n    success: boolean;\n    /** Readable description of the the operation's status */\n    message: string;\n    /** Will represent a corresponding error if an error was thrown during the operation. */\n    errorCode?: string;\n}\n\nexport interface EmailTemplate {\n    /** Optional header of email that will be sent to user with verification code */\n    greeting?: string;\n    /** Optional name of application for placement within email */\n    appName?: string;\n    /** Optional footer of verification email often used for disclaimers. Can be a valid HTML string */\n    footer?: string;\n}\n\nexport enum POST_TYPES {\n    UPLOAD_ATTACHMENT = \"upload_attachment\",\n    HANDSHAKE = \"handshake\",\n    VALID_TOKEN = \"valid_token\",\n    GET_FRAME = \"get_frame\",\n    TABLE_SIZE = \"table_size\",\n    COLUMN_TYPES = \"column_types\",\n    SYNC_STACK = \"sync_stack\",\n    SYNC_DELETE = \"sync_delete\",\n    SYNC_INSERT = \"sync_insert\",\n    GET_QUERY = \"get_query\",\n    USER_ATTRIBUTES = \"user_attributes\",\n    SET_ATTRIBUTE = \"set_attribute\",\n    SIGN_UP = \"sign_up\",\n    REQUEST_TOKEN = \"request_token\",\n    EASY_QB = \"easyqb\",\n    RESET_PASSWORD = \"reset_password\",\n    FORGOT_PASSWORD_SEND = \"forgot_password_send\",\n    FORGOT_PASSWORD_CONFIRM = \"forgot_password_confirm\"\n}\n\nexport enum DB_STATUS {\n    ERROR = \"error\",\n    PENDING = \"pending\",\n    SUCCESS = \"success\"\n}\n\nexport enum EXECUTE_COUNT {\n    ALL = \"all\",\n    ONE = \"one\"\n}\n\nexport interface AuthPostResponse {\n    success: boolean;\n    data: any;\n}\n\nexport interface ContextValue {\n    /**\n     * Check if a user is currently signed in.\n     */\n    isUserSignedIn(): boolean;\n    /**\n     * Signs out the current user.\n     */\n    signOut(): void;\n    /**\n     * Retrieve the currently signed in users attribute object.\n     * @async\n     * @return {Promise<Record<string, string>>} Promise<Record<string, string>>\n     */\n    getUserAttributes(): Promise<Record<string, string>>;\n    /**\n     * Set a single attribute of the currently signed in user. Can also be updated visually in the Easybase 'Users' tab.\n     * @async\n     * @abstract\n     * @param key Object key. Can be a new key or existing key.\n     * @param value attribute value.\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    setUserAttribute(key: string, value: string): Promise<StatusResponse>;\n    /**\n     * Reset the currently signed-in user's password to a new string.\n     * @async\n     * @param {string} newPassword New user password\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    resetUserPassword(newPassword: string): Promise<StatusResponse>;\n    /**\n     * Sign in a user that already exists for a project.\n     * @abstract\n     * @async\n     * @param userID unique identifier for new user. Usually an email or phone number.\n     * @param password user password.\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    signIn(userID: string, password: string): Promise<StatusResponse>;\n    /**\n     * Create a new user for your project. You must still call signIn() after signing up.\n     * @abstract\n     * @async\n     * @param newUserID unique identifier for new user. Usually an email or phone number.\n     * @param password user password. Must be at least 8 characters long.\n     * @param userAttributes Optional object to store user attributes. Can also be edited visually in the Easybase 'Users' tab.\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    signUp(newUserID: string, password: string, userAttributes?: Record<string, string>): Promise<StatusResponse>;\n    /**\n     * Configure the current frame size. Set the offset and amount of records to retreive assume you don't want to receive\n     * your entire collection. This is useful for paging.\n     * @abstract\n     * @param {ConfigureFrameOptions} options ConfigureFrameOptions\n     * @return {StatusResponse} StatusResponse\n     */\n    configureFrame(options: ConfigureFrameOptions): StatusResponse;\n    /**\n     * Manually add a record to your collection regardless of your current frame. You must call sync() after this to see updated response.\n     * @abstract\n     * @async\n     * @param {AddRecordOptions} options AddRecordOptions\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    addRecord(options: AddRecordOptions): Promise<StatusResponse>;\n    /**\n     * Manually delete a record from your collection regardless of your current frame. You must call sync() after this to see updated response.\n     * @abstract\n     * @async\n     * @param {Record<string, any>} record \n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    deleteRecord(options: DeleteRecordOptions): Promise<StatusResponse>;\n    /**\n     * Call this method to syncronize your current changes with your database. Delections, additions, and changes will all be reflected by your \n     * backend after calling this method. Call Frame() after this to get a normalized array of the freshest data.\n     * @abstract\n     * @async\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    sync(): Promise<StatusResponse>;\n    /**\n     * Upload an image to your backend and attach it to a specific record. columnName must reference a column of type 'image'.\n     * The file must have an extension of an image. \n     * Call sync() for fresh data with propery attachment links to cloud hosting.\n     * @abstract\n     * @async\n     * @param {UpdateRecordAttachmentOptions} options UpdateRecordAttachmentOptions\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    updateRecordImage(options: UpdateRecordAttachmentOptions): Promise<StatusResponse>;\n    /**\n     * Upload a video to your backend and attach it to a specific record. columnName must reference a column of type 'video'. \n     * The file must have an extension of a video.\n     * Call sync() for fresh data with propery attachment links to cloud hosting.\n     * @abstract\n     * @async\n     * @param {UpdateRecordAttachmentOptions} options UpdateRecordAttachmentOptions\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    updateRecordVideo(options: UpdateRecordAttachmentOptions): Promise<StatusResponse>;\n    /**\n     * Upload a file to your backend and attach it to a specific record. columnName must reference a column of type 'file'. \n     * Call sync() for fresh data with propery attachment links to cloud hosting.\n     * @abstract\n     * @async\n     * @param {UpdateRecordAttachmentOptions} options UpdateRecordAttachmentOptions\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    updateRecordFile(options: UpdateRecordAttachmentOptions): Promise<StatusResponse>;\n    /**\n     * This function is how you access your current frame. This function does not get new data or push changes to EasyBase. If you \n     * want to syncronize your frame and EasyBase, call sync() then Frame().\n     * @abstract\n     * @return {Record<string, any>[]} Array of records corresponding to the current frame. Call sync() to push changes that you have made to this array.\n     * \n     */\n    Frame(): Record<string, any>[];\n    /**\n     * This function is how you access a single object your current frame. This function does not get new data or push changes to EasyBase. If you \n     * want to syncronize your frame and EasyBase, call sync() then Frame().\n     * @abstract\n     * @param {number} [index] Passing an index will only return the object at that index in your Frame, rather than the entire array. This is useful for editing single objects based on an index.\n     * @return {Record<string, any>} Single record corresponding to that object within the current frame. Call sync() to push changes that you have made to this object.\n     * \n     */\n    Frame(index: number): Record<string, any>;\n    /**\n     * Gets the number of records in your table.\n     * @async\n     * @returns {Promise<number>} The the number of records in your table.\n     */\n    fullTableSize(): Promise<number>;\n    /**\n     * Gets the number of records in your table.\n     * @async\n     * @param {string} [tableName] Name of table to get the sizes of. (Projects only)\n     * @returns {Promise<number>} The the number of records in your table.\n     */\n    fullTableSize(tableName: string): Promise<number>;\n    /**\n     * Retrieve an object detailing the columns in your table mapped to their corresponding type.\n     * @async\n     * @returns {Promise<Record<string, any>>} Object detailing the columns in your table mapped to their corresponding type.\n     */\n    tableTypes(): Promise<Record<string, any>>;\n    /**\n     * Retrieve an object detailing the columns in your table mapped to their corresponding type.\n     * @async\n     * @param {string} [tableName] Name of table to get the types of. (Projects only)\n     * @returns {Promise<Record<string, any>>} Object detailing the columns in your table mapped to their corresponding type.\n     */\n    tableTypes(tableName: string): Promise<Record<string, any>>;\n    /**\n     * View your frames current configuration\n     * @returns {Record<string, any>} Object contains the `offset` and `length` of your current frame.\n     */\n    currentConfiguration(): FrameConfiguration;\n    /**\n     * @async\n     * View a query by name. This returns an isolated array that has no effect on your frame or frame configuration. sync() and Frame() have no \n     * relationship with a Query(). An edited Query cannot be synced with your database, use Frame() for realtime \n     * database array features.\n     * @param {QueryOptions} options QueryOptions\n     * @return {Promise<Record<string, any>[]>} Isolated array of records in the same form as Frame(). Editing this array has no effect and cannot be synced with your database. Use Frame() for realtime database features.\n     */\n    Query(options: QueryOptions): Promise<Record<string, any>[]>;\n    /**\n     * Instantiate EasyQB instance for dynamic CRUD query building: https://easybase.github.io/EasyQB/\n     * @param {string} [tableName] Name of your table.\n     * @param {boolean} [userAssociatedRecordsOnly] **PROJECTS ONLY** Operations will only be performed on records already associated to the currently signed-in user. Inserted records will automatically be associate to the user.\n     * @returns {SQW} EasyQB object for dynamic querying: https://easybase.github.io/EasyQB/\n     */\n    db(tableName?: string, userAssociatedRecordsOnly?: boolean): SQW;\n    /**\n     * Subscribe to db events, invoked by calling `.all` or `.one`: https://easybase.github.io/EasyQB/\n     * @param {function(status?: DB_STATUS, queryType?: string, executeCount?: EXECUTE_COUNT, tableName?: string | null, returned?: any):void} [callback] Callback function to execute on db operations.\n     * @returns {function():void} Calling this function unsubscribes your callback function from events.\n     */\n    dbEventListener(callback: (status?: DB_STATUS, queryType?: string, executeCount?: EXECUTE_COUNT, tableName?: string | null, returned?: any) => void): () => void;\n    /**\n     * Expressions and operations builder for `.db()`, used to create complex conditions, aggregators, and clauses. https://easybase.github.io/EasyQB/docs/operations.html\n     */\n    e: NewExpression;\n    /**\n     * @async\n     * Trigger an email to the given username with a verification code to reset the user's password. This verification \n     * code is used in the `forgotPasswordConfirm` function, along with a new password. **The username must be the user's email address**.\n     * @param {string} username A username which must also be a valid email address\n     * @param {EmailTemplate} emailTemplate Optional details for the formatting & content of the verification email\n     * @return {Promise<StatusResponse>} A StatusResponse corresponding to the successful sending of a verification code email\n     */\n    forgotPassword(username: string, emailTemplate?: EmailTemplate): Promise<StatusResponse>\n    /**\n     * @async\n     * Confirm the resetting of an unauthenticated users password. This function is invoked after `forgotpassword` is used to trigger\n     * an email containing a verification code to the given username [*which must also be an email*]. The user's randomly generated\n     * verification code from their email is passed in the first parameter. \n     * @param {string} code Verification code found in the email sent from the `forgotPassword` function\n     * @param {string} username The same username (email) used in the `forgotPassword` function\n     * @param {string} newPassword The new password for the corresponding verified user\n     * @return {Promise<StatusResponse>} A StatusResponse corresponding to the successful setting of a new password\n     */\n    forgotPasswordConfirm(code: string, username: string, newPassword: string): Promise<StatusResponse>\n}\n\nexport interface Globals {\n    ebconfig: Ebconfig;\n    token: string;\n    refreshToken: string;\n    integrationID: string;\n    session: number;\n    options: EasybaseProviderPropsOptions;\n    instance: string;\n    mounted: boolean;\n    newTokenCallback(): void;\n}\n","import { Ebconfig, EasybaseProviderPropsOptions, Globals } from \"./types\";\n\nnamespace GlobalNamespace {\n    export let ebconfig: Ebconfig;\n    export let token: string;\n    export let refreshToken: string;\n    export let integrationID: string;\n    export let session: number;\n    export let options: EasybaseProviderPropsOptions;\n    export let instance: string;\n    export let mounted: boolean;\n    export let newTokenCallback: () => {};\n}\n\nconst _g: Globals = { ...GlobalNamespace };\n\nexport default _g;\n \nexport function gFactory(): Globals {\n    return { ...GlobalNamespace } as Globals;\n}\n","const\n\tINSERT = 'insert',\n\tUPDATE = 'update',\n\tDELETE = 'delete',\n\tREVERSE = 'reverse',\n\tSHUFFLE = 'shuffle',\n\toMetaKey = Symbol('observable-meta-key'),\n\tvalidObservableOptionKeys = { async: 1 },\n\tvalidObserverOptionKeys = { path: 1, pathsOf: 1, pathsFrom: 1 },\n\tprocessObserveOptions = function processObserveOptions(options) {\n\t\tconst result = {};\n\t\tif (options.path !== undefined) {\n\t\t\tif (typeof options.path !== 'string' || options.path === '') {\n\t\t\t\tthrow new Error('\"path\" option, if/when provided, MUST be a non-empty string');\n\t\t\t}\n\t\t\tresult.path = options.path;\n\t\t}\n\t\tif (options.pathsOf !== undefined) {\n\t\t\tif (options.path) {\n\t\t\t\tthrow new Error('\"pathsOf\" option MAY NOT be specified together with \"path\" option');\n\t\t\t}\n\t\t\tif (typeof options.pathsOf !== 'string') {\n\t\t\t\tthrow new Error('\"pathsOf\" option, if/when provided, MUST be a string (MAY be empty)');\n\t\t\t}\n\t\t\tresult.pathsOf = options.pathsOf.split('.').filter(n => n);\n\t\t}\n\t\tif (options.pathsFrom !== undefined) {\n\t\t\tif (options.path || options.pathsOf) {\n\t\t\t\tthrow new Error('\"pathsFrom\" option MAY NOT be specified together with \"path\"/\"pathsOf\"  option/s');\n\t\t\t}\n\t\t\tif (typeof options.pathsFrom !== 'string' || options.pathsFrom === '') {\n\t\t\t\tthrow new Error('\"pathsFrom\" option, if/when provided, MUST be a non-empty string');\n\t\t\t}\n\t\t\tresult.pathsFrom = options.pathsFrom;\n\t\t}\n\t\tconst invalidOptions = Object.keys(options).filter(option => !validObserverOptionKeys.hasOwnProperty(option));\n\t\tif (invalidOptions.length) {\n\t\t\tthrow new Error(`'${invalidOptions.join(', ')}' is/are not a valid observer option/s`);\n\t\t}\n\t\treturn result;\n\t},\n\tobserve = function observe(observer, options) {\n\t\tif (typeof observer !== 'function') {\n\t\t\tthrow new Error(`observer MUST be a function, got '${observer}'`);\n\t\t}\n\n\t\tconst\n\t\t\toMeta = this[oMetaKey],\n\t\t\tobservers = oMeta.observers;\n\t\tif (!observers.some(o => o[0] === observer)) {\n\t\t\tlet opts;\n\t\t\tif (options) {\n\t\t\t\topts = processObserveOptions(options);\n\t\t\t} else {\n\t\t\t\topts = {};\n\t\t\t}\n\t\t\tobservers.push([observer, opts]);\n\t\t} else {\n\t\t\tconsole.warn('observer may be bound to an observable only once; will NOT rebind');\n\t\t}\n\t},\n\tunobserve = function unobserve() {\n\t\tconst oMeta = this[oMetaKey];\n\t\tconst observers = oMeta.observers;\n\t\tlet ol = observers.length;\n\t\tif (ol) {\n\t\t\tlet al = arguments.length;\n\t\t\tif (al) {\n\t\t\t\twhile (al--) {\n\t\t\t\t\tlet i = ol;\n\t\t\t\t\twhile (i--) {\n\t\t\t\t\t\tif (observers[i][0] === arguments[al]) {\n\t\t\t\t\t\t\tobservers.splice(i, 1);\n\t\t\t\t\t\t\tol--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tobservers.splice(0);\n\t\t\t}\n\t\t}\n\t},\n\tpropertiesBluePrint = { [oMetaKey]: { value: null }, observe: { value: observe }, unobserve: { value: unobserve } },\n\tprepareObject = function prepareObject(source, oMeta) {\n\t\tpropertiesBluePrint[oMetaKey].value = oMeta;\n\t\tconst target = Object.defineProperties({}, propertiesBluePrint);\n\t\tfor (const key of Object.keys(source)) {\n\t\t\ttarget[key] = getObservedOf(source[key], key, oMeta);\n\t\t}\n\t\treturn target;\n\t},\n\tprepareArray = function prepareArray(source, oMeta) {\n\t\tlet i = 0, l = source.length;\n\t\tpropertiesBluePrint[oMetaKey].value = oMeta;\n\t\tconst target = Object.defineProperties(new Array(l), propertiesBluePrint);\n\t\tfor (; i < l; i++) {\n\t\t\ttarget[i] = getObservedOf(source[i], i, oMeta);\n\t\t}\n\t\treturn target;\n\t},\n\tprepareTypedArray = function prepareTypedArray(source, oMeta) {\n\t\tpropertiesBluePrint[oMetaKey].value = oMeta;\n\t\tObject.defineProperties(source, propertiesBluePrint);\n\t\treturn source;\n\t},\n\tfilterChanges = function filterChanges(options, changes) {\n\t\tlet result = changes;\n\t\tif (options.path) {\n\t\t\tconst oPath = options.path;\n\t\t\tresult = changes.filter(change =>\n\t\t\t\tchange.path.join('.') === oPath\n\t\t\t);\n\t\t} else if (options.pathsOf) {\n\t\t\tconst oPathsOf = options.pathsOf;\n\t\t\tresult = changes.filter(change =>\n\t\t\t\tchange.path.length === oPathsOf.length + 1 ||\n\t\t\t\t(change.path.length === oPathsOf.length && (change.type === REVERSE || change.type === SHUFFLE))\n\t\t\t);\n\t\t} else if (options.pathsFrom) {\n\t\t\tconst oPathsFrom = options.pathsFrom;\n\t\t\tresult = changes.filter(change =>\n\t\t\t\tchange.path.join('.').startsWith(oPathsFrom)\n\t\t\t);\n\t\t}\n\t\treturn result;\n\t},\n\tcallObserverSafe = function callObserverSafe(listener, changes) {\n\t\ttry {\n\t\t\tlistener(changes);\n\t\t} catch (e) {\n\t\t\tconsole.error(`failed to notify listener ${listener} with ${changes}`, e);\n\t\t}\n\t},\n\tcallObserversFromMT = function callObserversFromMT() {\n\t\tconst batches = this.batches;\n\t\tthis.batches = null;\n\t\tfor (const [listener, options] of batches) {\n\t\t\tcallObserverSafe(listener, options);\n\t\t}\n\t},\n\tcallObservers = function callObservers(oMeta, changes) {\n\t\tlet currentObservable = oMeta;\n\t\tlet observers, target, options, relevantChanges, i, newPath, tmp;\n\t\tconst l = changes.length;\n\t\tdo {\n\t\t\tobservers = currentObservable.observers;\n\t\t\ti = observers.length;\n\t\t\twhile (i--) {\n\t\t\t\t[target, options] = observers[i];\n\t\t\t\trelevantChanges = filterChanges(options, changes);\n\n\t\t\t\tif (relevantChanges.length) {\n\t\t\t\t\tif (currentObservable.options.async) {\n\t\t\t\t\t\t//\tthis is the async dispatch handling\n\t\t\t\t\t\tif (!currentObservable.batches) {\n\t\t\t\t\t\t\tcurrentObservable.batches = [];\n\t\t\t\t\t\t\tqueueMicrotask(callObserversFromMT.bind(currentObservable));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet rb = currentObservable.batches.find(b => b[0] === target);\n\t\t\t\t\t\tif (!rb) {\n\t\t\t\t\t\t\trb = [target, []];\n\t\t\t\t\t\t\tcurrentObservable.batches.push(rb);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tArray.prototype.push.apply(rb[1], relevantChanges);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//\tthis is the naive straight forward synchronous dispatch\n\t\t\t\t\t\tcallObserverSafe(target, relevantChanges);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet tmpa;\n\t\t\tif (currentObservable.parent) {\n\t\t\t\ttmpa = new Array(l);\n\t\t\t\tfor (let i = 0; i < l; i++) {\n\t\t\t\t\ttmp = changes[i];\n\t\t\t\t\tnewPath = [currentObservable.ownKey, ...tmp.path];\n\t\t\t\t\ttmpa[i] = {\n\t\t\t\t\t\ttype: tmp.type,\n\t\t\t\t\t\tpath: newPath,\n\t\t\t\t\t\tvalue: tmp.value,\n\t\t\t\t\t\toldValue: tmp.oldValue,\n\t\t\t\t\t\tobject: tmp.object\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tchanges = tmpa;\n\t\t\t\tcurrentObservable = currentObservable.parent;\n\t\t\t} else {\n\t\t\t\tcurrentObservable = null;\n\t\t\t}\n\t\t} while (currentObservable);\n\t},\n\tgetObservedOf = function getObservedOf(item, key, parent) {\n\t\tif (!item || typeof item !== 'object') {\n\t\t\treturn item;\n\t\t} else if (Array.isArray(item)) {\n\t\t\treturn new ArrayOMeta({ target: item, ownKey: key, parent: parent }).proxy;\n\t\t} else if (ArrayBuffer.isView(item)) {\n\t\t\treturn new TypedArrayOMeta({ target: item, ownKey: key, parent: parent }).proxy;\n\t\t} else if (item instanceof Date || item instanceof Error) {\n\t\t\treturn item;\n\t\t} else {\n\t\t\treturn new ObjectOMeta({ target: item, ownKey: key, parent: parent }).proxy;\n\t\t}\n\t},\n\tproxiedPop = function proxiedPop() {\n\t\tconst oMeta = this[oMetaKey],\n\t\t\ttarget = oMeta.target,\n\t\t\tpoppedIndex = target.length - 1;\n\n\t\tlet popResult = target.pop();\n\t\tif (popResult && typeof popResult === 'object') {\n\t\t\tconst tmpObserved = popResult[oMetaKey];\n\t\t\tif (tmpObserved) {\n\t\t\t\tpopResult = tmpObserved.detach();\n\t\t\t}\n\t\t}\n\n\t\tconst changes = [{ type: DELETE, path: [poppedIndex], oldValue: popResult, object: this }];\n\t\tcallObservers(oMeta, changes);\n\n\t\treturn popResult;\n\t},\n\tproxiedPush = function proxiedPush() {\n\t\tconst\n\t\t\toMeta = this[oMetaKey],\n\t\t\ttarget = oMeta.target,\n\t\t\tl = arguments.length,\n\t\t\tpushContent = new Array(l),\n\t\t\tinitialLength = target.length;\n\n\t\tfor (let i = 0; i < l; i++) {\n\t\t\tpushContent[i] = getObservedOf(arguments[i], initialLength + i, oMeta);\n\t\t}\n\t\tconst pushResult = Reflect.apply(target.push, target, pushContent);\n\n\t\tconst changes = [];\n\t\tfor (let i = initialLength, l = target.length; i < l; i++) {\n\t\t\tchanges[i - initialLength] = { type: INSERT, path: [i], value: target[i], object: this };\n\t\t}\n\t\tcallObservers(oMeta, changes);\n\n\t\treturn pushResult;\n\t},\n\tproxiedShift = function proxiedShift() {\n\t\tconst\n\t\t\toMeta = this[oMetaKey],\n\t\t\ttarget = oMeta.target;\n\t\tlet shiftResult, i, l, item, tmpObserved;\n\n\t\tshiftResult = target.shift();\n\t\tif (shiftResult && typeof shiftResult === 'object') {\n\t\t\ttmpObserved = shiftResult[oMetaKey];\n\t\t\tif (tmpObserved) {\n\t\t\t\tshiftResult = tmpObserved.detach();\n\t\t\t}\n\t\t}\n\n\t\t//\tupdate indices of the remaining items\n\t\tfor (i = 0, l = target.length; i < l; i++) {\n\t\t\titem = target[i];\n\t\t\tif (item && typeof item === 'object') {\n\t\t\t\ttmpObserved = item[oMetaKey];\n\t\t\t\tif (tmpObserved) {\n\t\t\t\t\ttmpObserved.ownKey = i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst changes = [{ type: DELETE, path: [0], oldValue: shiftResult, object: this }];\n\t\tcallObservers(oMeta, changes);\n\n\t\treturn shiftResult;\n\t},\n\tproxiedUnshift = function proxiedUnshift() {\n\t\tconst\n\t\t\toMeta = this[oMetaKey],\n\t\t\ttarget = oMeta.target,\n\t\t\tal = arguments.length,\n\t\t\tunshiftContent = new Array(al);\n\n\t\tfor (let i = 0; i < al; i++) {\n\t\t\tunshiftContent[i] = getObservedOf(arguments[i], i, oMeta);\n\t\t}\n\t\tconst unshiftResult = Reflect.apply(target.unshift, target, unshiftContent);\n\n\t\tfor (let i = 0, l = target.length, item; i < l; i++) {\n\t\t\titem = target[i];\n\t\t\tif (item && typeof item === 'object') {\n\t\t\t\tconst tmpObserved = item[oMetaKey];\n\t\t\t\tif (tmpObserved) {\n\t\t\t\t\ttmpObserved.ownKey = i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//\tpublish changes\n\t\tconst l = unshiftContent.length;\n\t\tconst changes = new Array(l);\n\t\tfor (let i = 0; i < l; i++) {\n\t\t\tchanges[i] = { type: INSERT, path: [i], value: target[i], object: this };\n\t\t}\n\t\tcallObservers(oMeta, changes);\n\n\t\treturn unshiftResult;\n\t},\n\tproxiedReverse = function proxiedReverse() {\n\t\tconst\n\t\t\toMeta = this[oMetaKey],\n\t\t\ttarget = oMeta.target;\n\t\tlet i, l, item;\n\n\t\ttarget.reverse();\n\t\tfor (i = 0, l = target.length; i < l; i++) {\n\t\t\titem = target[i];\n\t\t\tif (item && typeof item === 'object') {\n\t\t\t\tconst tmpObserved = item[oMetaKey];\n\t\t\t\tif (tmpObserved) {\n\t\t\t\t\ttmpObserved.ownKey = i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst changes = [{ type: REVERSE, path: [], object: this }];\n\t\tcallObservers(oMeta, changes);\n\n\t\treturn this;\n\t},\n\tproxiedSort = function proxiedSort(comparator) {\n\t\tconst\n\t\t\toMeta = this[oMetaKey],\n\t\t\ttarget = oMeta.target;\n\t\tlet i, l, item;\n\n\t\ttarget.sort(comparator);\n\t\tfor (i = 0, l = target.length; i < l; i++) {\n\t\t\titem = target[i];\n\t\t\tif (item && typeof item === 'object') {\n\t\t\t\tconst tmpObserved = item[oMetaKey];\n\t\t\t\tif (tmpObserved) {\n\t\t\t\t\ttmpObserved.ownKey = i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst changes = [{ type: SHUFFLE, path: [], object: this }];\n\t\tcallObservers(oMeta, changes);\n\n\t\treturn this;\n\t},\n\tproxiedFill = function proxiedFill(filVal, start, end) {\n\t\tconst\n\t\t\toMeta = this[oMetaKey],\n\t\t\ttarget = oMeta.target,\n\t\t\tchanges = [],\n\t\t\ttarLen = target.length,\n\t\t\tprev = target.slice(0);\n\t\tstart = start === undefined ? 0 : (start < 0 ? Math.max(tarLen + start, 0) : Math.min(start, tarLen));\n\t\tend = end === undefined ? tarLen : (end < 0 ? Math.max(tarLen + end, 0) : Math.min(end, tarLen));\n\n\t\tif (start < tarLen && end > start) {\n\t\t\ttarget.fill(filVal, start, end);\n\n\t\t\tlet tmpObserved;\n\t\t\tfor (let i = start, item, tmpTarget; i < end; i++) {\n\t\t\t\titem = target[i];\n\t\t\t\ttarget[i] = getObservedOf(item, i, oMeta);\n\t\t\t\tif (prev.hasOwnProperty(i)) {\n\t\t\t\t\ttmpTarget = prev[i];\n\t\t\t\t\tif (tmpTarget && typeof tmpTarget === 'object') {\n\t\t\t\t\t\ttmpObserved = tmpTarget[oMetaKey];\n\t\t\t\t\t\tif (tmpObserved) {\n\t\t\t\t\t\t\ttmpTarget = tmpObserved.detach();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tchanges.push({ type: UPDATE, path: [i], value: target[i], oldValue: tmpTarget, object: this });\n\t\t\t\t} else {\n\t\t\t\t\tchanges.push({ type: INSERT, path: [i], value: target[i], object: this });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcallObservers(oMeta, changes);\n\t\t}\n\n\t\treturn this;\n\t},\n\tproxiedCopyWithin = function proxiedCopyWithin(dest, start, end) {\n\t\tconst\n\t\t\toMeta = this[oMetaKey],\n\t\t\ttarget = oMeta.target,\n\t\t\ttarLen = target.length;\n\t\tdest = dest < 0 ? Math.max(tarLen + dest, 0) : dest;\n\t\tstart = start === undefined ? 0 : (start < 0 ? Math.max(tarLen + start, 0) : Math.min(start, tarLen));\n\t\tend = end === undefined ? tarLen : (end < 0 ? Math.max(tarLen + end, 0) : Math.min(end, tarLen));\n\t\tconst len = Math.min(end - start, tarLen - dest);\n\n\t\tif (dest < tarLen && dest !== start && len > 0) {\n\t\t\tconst\n\t\t\t\tprev = target.slice(0),\n\t\t\t\tchanges = [];\n\n\t\t\ttarget.copyWithin(dest, start, end);\n\n\t\t\tfor (let i = dest, nItem, oItem, tmpObserved; i < dest + len; i++) {\n\t\t\t\t//\tupdate newly placed observables, if any\n\t\t\t\tnItem = target[i];\n\t\t\t\tif (nItem && typeof nItem === 'object') {\n\t\t\t\t\tnItem = getObservedOf(nItem, i, oMeta);\n\t\t\t\t\ttarget[i] = nItem;\n\t\t\t\t}\n\n\t\t\t\t//\tdetach overridden observables, if any\n\t\t\t\toItem = prev[i];\n\t\t\t\tif (oItem && typeof oItem === 'object') {\n\t\t\t\t\ttmpObserved = oItem[oMetaKey];\n\t\t\t\t\tif (tmpObserved) {\n\t\t\t\t\t\toItem = tmpObserved.detach();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (typeof nItem !== 'object' && nItem === oItem) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tchanges.push({ type: UPDATE, path: [i], value: nItem, oldValue: oItem, object: this });\n\t\t\t}\n\n\t\t\tcallObservers(oMeta, changes);\n\t\t}\n\n\t\treturn this;\n\t},\n\tproxiedSplice = function proxiedSplice() {\n\t\tconst\n\t\t\toMeta = this[oMetaKey],\n\t\t\ttarget = oMeta.target,\n\t\t\tsplLen = arguments.length,\n\t\t\tspliceContent = new Array(splLen),\n\t\t\ttarLen = target.length;\n\n\t\t//\tobservify the newcomers\n\t\tfor (let i = 0; i < splLen; i++) {\n\t\t\tspliceContent[i] = getObservedOf(arguments[i], i, oMeta);\n\t\t}\n\n\t\t//\tcalculate pointers\n\t\tconst\n\t\t\tstartIndex = splLen === 0 ? 0 : (spliceContent[0] < 0 ? tarLen + spliceContent[0] : spliceContent[0]),\n\t\t\tremoved = splLen < 2 ? tarLen - startIndex : spliceContent[1],\n\t\t\tinserted = Math.max(splLen - 2, 0),\n\t\t\tspliceResult = Reflect.apply(target.splice, target, spliceContent),\n\t\t\tnewTarLen = target.length;\n\n\t\t//\treindex the paths\n\t\tlet tmpObserved;\n\t\tfor (let i = 0, item; i < newTarLen; i++) {\n\t\t\titem = target[i];\n\t\t\tif (item && typeof item === 'object') {\n\t\t\t\ttmpObserved = item[oMetaKey];\n\t\t\t\tif (tmpObserved) {\n\t\t\t\t\ttmpObserved.ownKey = i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//\tdetach removed objects\n\t\tlet i, l, item;\n\t\tfor (i = 0, l = spliceResult.length; i < l; i++) {\n\t\t\titem = spliceResult[i];\n\t\t\tif (item && typeof item === 'object') {\n\t\t\t\ttmpObserved = item[oMetaKey];\n\t\t\t\tif (tmpObserved) {\n\t\t\t\t\tspliceResult[i] = tmpObserved.detach();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst changes = [];\n\t\tlet index;\n\t\tfor (index = 0; index < removed; index++) {\n\t\t\tif (index < inserted) {\n\t\t\t\tchanges.push({ type: UPDATE, path: [startIndex + index], value: target[startIndex + index], oldValue: spliceResult[index], object: this });\n\t\t\t} else {\n\t\t\t\tchanges.push({ type: DELETE, path: [startIndex + index], oldValue: spliceResult[index], object: this });\n\t\t\t}\n\t\t}\n\t\tfor (; index < inserted; index++) {\n\t\t\tchanges.push({ type: INSERT, path: [startIndex + index], value: target[startIndex + index], object: this });\n\t\t}\n\t\tcallObservers(oMeta, changes);\n\n\t\treturn spliceResult;\n\t},\n\tproxiedTypedArraySet = function proxiedTypedArraySet(source, offset) {\n\t\tconst\n\t\t\toMeta = this[oMetaKey],\n\t\t\ttarget = oMeta.target,\n\t\t\tsouLen = source.length,\n\t\t\tprev = target.slice(0);\n\t\toffset = offset || 0;\n\n\t\ttarget.set(source, offset);\n\t\tconst changes = new Array(souLen);\n\t\tfor (let i = offset; i < (souLen + offset); i++) {\n\t\t\tchanges[i - offset] = { type: UPDATE, path: [i], value: target[i], oldValue: prev[i], object: this };\n\t\t}\n\n\t\tcallObservers(oMeta, changes);\n\t},\n\tproxiedArrayMethods = {\n\t\tpop: proxiedPop,\n\t\tpush: proxiedPush,\n\t\tshift: proxiedShift,\n\t\tunshift: proxiedUnshift,\n\t\treverse: proxiedReverse,\n\t\tsort: proxiedSort,\n\t\tfill: proxiedFill,\n\t\tcopyWithin: proxiedCopyWithin,\n\t\tsplice: proxiedSplice\n\t},\n\tproxiedTypedArrayMethods = {\n\t\treverse: proxiedReverse,\n\t\tsort: proxiedSort,\n\t\tfill: proxiedFill,\n\t\tcopyWithin: proxiedCopyWithin,\n\t\tset: proxiedTypedArraySet\n\t};\n\nclass OMetaBase {\n\tconstructor(properties, cloningFunction) {\n\t\tconst { target, parent, ownKey } = properties;\n\t\tif (parent && ownKey !== undefined) {\n\t\t\tthis.parent = parent;\n\t\t\tthis.ownKey = ownKey;\n\t\t} else {\n\t\t\tthis.parent = null;\n\t\t\tthis.ownKey = null;\n\t\t}\n\t\tconst targetClone = cloningFunction(target, this);\n\t\tthis.observers = [];\n\t\tthis.revocable = Proxy.revocable(targetClone, this);\n\t\tthis.proxy = this.revocable.proxy;\n\t\tthis.target = targetClone;\n\t\tthis.options = this.processOptions(properties.options);\n\t}\n\n\tprocessOptions(options) {\n\t\tif (options) {\n\t\t\tif (typeof options !== 'object') {\n\t\t\t\tthrow new Error(`Observable options if/when provided, MAY only be an object, got '${options}'`);\n\t\t\t}\n\t\t\tconst invalidOptions = Object.keys(options).filter(option => !validObservableOptionKeys.hasOwnProperty(option));\n\t\t\tif (invalidOptions.length) {\n\t\t\t\tthrow new Error(`'${invalidOptions.join(', ')}' is/are not a valid Observable option/s`);\n\t\t\t}\n\t\t\treturn Object.assign({}, options);\n\t\t} else {\n\t\t\treturn {};\n\t\t}\n\t}\n\n\tdetach() {\n\t\tthis.parent = null;\n\t\treturn this.target;\n\t}\n\n\tset(target, key, value) {\n\t\tlet oldValue = target[key];\n\n\t\tif (value !== oldValue) {\n\t\t\tconst newValue = getObservedOf(value, key, this);\n\t\t\ttarget[key] = newValue;\n\n\t\t\tif (oldValue && typeof oldValue === 'object') {\n\t\t\t\tconst tmpObserved = oldValue[oMetaKey];\n\t\t\t\tif (tmpObserved) {\n\t\t\t\t\toldValue = tmpObserved.detach();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst changes = oldValue === undefined\n\t\t\t\t? [{ type: INSERT, path: [key], value: newValue, object: this.proxy }]\n\t\t\t\t: [{ type: UPDATE, path: [key], value: newValue, oldValue: oldValue, object: this.proxy }];\n\t\t\tcallObservers(this, changes);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tdeleteProperty(target, key) {\n\t\tlet oldValue = target[key];\n\n\t\tdelete target[key];\n\n\t\tif (oldValue && typeof oldValue === 'object') {\n\t\t\tconst tmpObserved = oldValue[oMetaKey];\n\t\t\tif (tmpObserved) {\n\t\t\t\toldValue = tmpObserved.detach();\n\t\t\t}\n\t\t}\n\n\t\tconst changes = [{ type: DELETE, path: [key], oldValue: oldValue, object: this.proxy }];\n\t\tcallObservers(this, changes);\n\n\t\treturn true;\n\t}\n}\n\nclass ObjectOMeta extends OMetaBase {\n\tconstructor(properties) {\n\t\tsuper(properties, prepareObject);\n\t}\n}\n\nclass ArrayOMeta extends OMetaBase {\n\tconstructor(properties) {\n\t\tsuper(properties, prepareArray);\n\t}\n\n\tget(target, key) {\n\t\tif (proxiedArrayMethods.hasOwnProperty(key)) {\n\t\t\treturn proxiedArrayMethods[key];\n\t\t} else {\n\t\t\treturn target[key];\n\t\t}\n\t}\n}\n\nclass TypedArrayOMeta extends OMetaBase {\n\tconstructor(properties) {\n\t\tsuper(properties, prepareTypedArray);\n\t}\n\n\tget(target, key) {\n\t\tif (proxiedTypedArrayMethods.hasOwnProperty(key)) {\n\t\t\treturn proxiedTypedArrayMethods[key];\n\t\t} else {\n\t\t\treturn target[key];\n\t\t}\n\t}\n}\n\nclass Observable {\n\tconstructor() {\n\t\tthrow new Error('Observable MAY NOT be created via constructor, see \"Observable.from\" API');\n\t}\n\n\tstatic from(target, options) {\n\t\tif (!target || typeof target !== 'object') {\n\t\t\tthrow new Error('observable MAY ONLY be created from a non-null object');\n\t\t} else if (target[oMetaKey]) {\n\t\t\treturn target;\n\t\t} else if (Array.isArray(target)) {\n\t\t\treturn new ArrayOMeta({ target: target, ownKey: null, parent: null, options: options }).proxy;\n\t\t} else if (ArrayBuffer.isView(target)) {\n\t\t\treturn new TypedArrayOMeta({ target: target, ownKey: null, parent: null, options: options }).proxy;\n\t\t} else if (target instanceof Date || target instanceof Error) {\n\t\t\tthrow new Error(`${target} found to be one of a on-observable types`);\n\t\t} else {\n\t\t\treturn new ObjectOMeta({ target: target, ownKey: null, parent: null, options: options }).proxy;\n\t\t}\n\t}\n\n\tstatic isObservable(input) {\n\t\treturn !!(input && input[oMetaKey]);\n\t}\n}\n\nObject.freeze(Observable);\n\nexport { Observable };","import _g from \"./g\";\nimport { Globals } from \"./types\";\n\nexport default function utilsFactory(globals?: Globals): any {\n    const g = globals || _g;\n\n    const generateBareUrl = (type: string, integrationID: string): string => `https://api.easybase.io/${type}/${integrationID}`;\n\n    const generateAuthBody = (): any => {\n        const stamp = Date.now();\n        return {\n            token: g.token,\n            token_time: ~~(g.session / (stamp % 64)),\n            now: stamp\n        }\n    }\n    \n    function log(...params: any): void {\n        if (g.options.logging) {\n            console.log(\"EASYBASE — \", ...params);\n        }\n    }\n\n    return {\n        generateAuthBody,\n        generateBareUrl,\n        log\n    }\n}\n","import { POST_TYPES, AuthPostResponse, Globals, StatusResponse, EmailTemplate } from \"./types\";\nimport _g from \"./g\";\nimport utilsFactory from \"./utils\";\nimport fetch from 'cross-fetch';\n\nexport default function authFactory(globals?: Globals): any {\n    const g = globals || _g;\n\n    const { generateBareUrl, generateAuthBody, log } = utilsFactory(g);\n\n    function _clearTokens() {\n        g.token = \"\";\n        g.refreshToken = \"\";\n        g.newTokenCallback();\n    }\n\n    const getUserAttributes = async (): Promise<Record<string, string>> => {\n        try {\n            const attrsRes = await tokenPost(POST_TYPES.USER_ATTRIBUTES);\n            return attrsRes.data;\n        } catch (error) {\n            log(error)\n            return error;\n        }\n    }\n\n    const setUserAttribute = async (key: string, value: string): Promise<StatusResponse> => {\n        try {\n            const setAttrsRes = await tokenPost(POST_TYPES.SET_ATTRIBUTE, {\n                key,\n                value\n            });\n\n            return {\n                success: setAttrsRes.success,\n                message: JSON.stringify(setAttrsRes.data)\n            };\n        } catch (error) {\n            return {\n                success: false,\n                message: error.message || \"Error\",\n                errorCode: error.errorCode || undefined\n            };\n        }\n    }\n\n    const forgotPassword = async (username: string, emailTemplate?: EmailTemplate): Promise<StatusResponse> => {\n        try {\n            const setAttrsRes = await tokenPost(POST_TYPES.FORGOT_PASSWORD_SEND, {\n                username,\n                emailTemplate\n            });\n\n            return {\n                success: setAttrsRes.success,\n                message: setAttrsRes.data\n            };\n        } catch (error) {\n            return {\n                success: false,\n                message: error.message || \"Error\",\n                errorCode: error.errorCode || undefined\n            };\n        }\n    }\n\n    const forgotPasswordConfirm = async (code: string, username: string, newPassword: string): Promise<StatusResponse> => {\n        try {\n            const setAttrsRes = await tokenPost(POST_TYPES.FORGOT_PASSWORD_CONFIRM, {\n                username,\n                code,\n                newPassword\n            });\n\n            return {\n                success: setAttrsRes.success,\n                message: setAttrsRes.data\n            };\n        } catch (error) {\n            return {\n                success: false,\n                message: error.message || \"Error\",\n                errorCode: error.errorCode || undefined\n            };\n        }\n    }\n\n    const signUp = async (newUserID: string, password: string, userAttributes?: Record<string, string>): Promise<StatusResponse> => {\n        try {\n            const signUpRes = await tokenPost(POST_TYPES.SIGN_UP, {\n                newUserID,\n                password,\n                userAttributes\n            });\n            return {\n                success: signUpRes.success,\n                message: signUpRes.data\n            }\n        } catch (error) {\n            return {\n                success: false,\n                message: error.message || \"Error\",\n                errorCode: error.errorCode || undefined\n            }\n        }\n    }\n\n    const signIn = async (userID: string, password: string): Promise<StatusResponse> => {\n        const t1 = Date.now();\n        g.session = Math.floor(100000000 + Math.random() * 900000000);\n\n        const integrationType = g.ebconfig.integration.split(\"-\")[0].toUpperCase() === \"PROJECT\" ? \"PROJECT\" : \"REACT\";\n\n        try {\n            const res = await fetch(generateBareUrl(integrationType, g.integrationID), {\n                method: \"POST\",\n                headers: {\n                    'Eb-Post-Req': POST_TYPES.HANDSHAKE,\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    version: g.ebconfig.version,\n                    session: g.session,\n                    instance: g.instance,\n                    userID,\n                    password\n                })\n            });\n\n            const resData = await res.json();\n\n            if (resData.token) {\n                g.token = resData.token;\n                g.refreshToken = resData.refreshToken;\n                g.newTokenCallback();\n                g.mounted = true;\n                const validTokenRes = await tokenPost(POST_TYPES.VALID_TOKEN);\n                const elapsed = Date.now() - t1;\n                if (validTokenRes.success) {\n                    log(\"Valid auth initiation in \" + elapsed + \"ms\");\n                    return {\n                        success: true,\n                        message: \"Successfully signed in user\"\n                    };\n                } else {\n                    return {\n                        success: false,\n                        message: \"Could not sign in user\"\n                    };\n                }\n            } else {\n                return {\n                    success: false,\n                    message: \"Could not sign in user\",\n                    errorCode: resData.ErrorCode || undefined\n                };\n            }\n        } catch (error) {\n            return {\n                success: false,\n                message: error.message || \"Could not sign in user\",\n                errorCode: error.errorCode || undefined\n            };\n        }\n    }\n\n    const resetUserPassword = async (newPassword: string): Promise<StatusResponse> => {\n        if (typeof newPassword !== \"string\" || newPassword.length > 100) {\n            return {\n                success: false,\n                message: \"newPassword must be of type string\"\n            };\n        }\n\n        try {\n            const setAttrsRes = await tokenPost(POST_TYPES.RESET_PASSWORD, { newPassword });\n\n            return {\n                success: setAttrsRes.success,\n                message: JSON.stringify(setAttrsRes.data)\n            };\n        } catch (error) {\n            return {\n                success: false,\n                message: error.message || \"Error\",\n                errorCode: error.errorCode || undefined\n            };\n        }\n    }\n\n    const isUserSignedIn = (): boolean => g.token.length > 0;\n\n    const signOut = (): void => {\n        g.token = \"\";\n        g.newTokenCallback();\n    }\n\n    const initAuth = async (): Promise<boolean> => {\n        const t1 = Date.now();\n        g.session = Math.floor(100000000 + Math.random() * 900000000);\n\n        log(`Handshaking on${g.instance} instance`);\n\n        const integrationType = g.ebconfig.integration.split(\"-\")[0].toUpperCase() === \"PROJECT\" ? \"PROJECT\" : \"REACT\";\n\n        try {\n\n            const res = await fetch(generateBareUrl(integrationType, g.integrationID), {\n                method: \"POST\",\n                headers: {\n                    'Eb-Post-Req': POST_TYPES.HANDSHAKE,\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    version: g.ebconfig.version,\n                    tt: g.ebconfig.tt,\n                    session: g.session,\n                    instance: g.instance\n                })\n            });\n\n            const resData = await res.json();\n\n            if (resData.token) {\n                g.token = resData.token;\n                g.mounted = true;\n                const validTokenRes = await tokenPost(POST_TYPES.VALID_TOKEN);\n                const elapsed = Date.now() - t1;\n                if (validTokenRes.success) {\n                    log(\"Valid auth initiation in \" + elapsed + \"ms\");\n                    return true;\n                } else {\n                    return false;\n                }\n            } else {\n                return false;\n            }\n        } catch (error) {\n            console.error(error);\n            return false;\n        }\n    }\n\n    const tokenPost = async (postType: POST_TYPES, body?: {}): Promise<AuthPostResponse> => {\n        if (!g.mounted) {\n            await initAuth();\n        }\n\n        const integrationType = g.ebconfig.integration.split(\"-\")[0].toUpperCase() === \"PROJECT\" ? \"PROJECT\" : \"REACT\";\n\n        const res = await fetch(generateBareUrl(integrationType, g.integrationID), {\n            method: \"POST\",\n            headers: {\n                'Eb-Post-Req': postType,\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                _auth: generateAuthBody(),\n                ...body\n            })\n        });\n\n        const resData = await res.json();\n\n        if ({}.hasOwnProperty.call(resData, 'ErrorCode') || {}.hasOwnProperty.call(resData, 'code')) {\n            if (resData.ErrorCode === \"TokenExpired\") {\n                if (integrationType === \"PROJECT\") {\n                    try {\n                        const req_res = await tokenPost(POST_TYPES.REQUEST_TOKEN, {\n                            refreshToken: g.refreshToken,\n                            token: g.token\n                        });\n                        if (req_res.success) {\n                            g.token = req_res.data.token\n                            g.newTokenCallback();\n                            return tokenPost(postType, body);\n                        } else {\n                            throw new Error(req_res.data || \"Error\");\n                        }\n                    } catch (error) {\n                        _clearTokens();\n                        return {\n                            success: false,\n                            data: error.message || error\n                        }\n                    }\n                } else {\n                    await initAuth();\n                }\n                return tokenPost(postType, body);\n            } else {\n                const err = new Error(resData.body || resData.ErrorCode || resData.code || \"Error\");\n                (err as any).errorCode = resData.ErrorCode || resData.code;\n                throw err;\n            }\n        } else {\n            return {\n                success: resData.success,\n                data: resData.body\n            }\n        }\n    }\n\n    const tokenPostAttachment = async (formData: FormData, customHeaders: {}): Promise<AuthPostResponse> => {\n        if (!g.mounted) {\n            await initAuth();\n        }\n\n        const regularAuthbody = generateAuthBody();\n\n        const attachmentAuth = {\n            'Eb-token': regularAuthbody.token,\n            'Eb-token-time': regularAuthbody.token_time,\n            'Eb-now': regularAuthbody.now\n        };\n\n        const integrationType = g.ebconfig.integration.split(\"-\")[0].toUpperCase() === \"PROJECT\" ? \"PROJECT\" : \"REACT\";\n\n        const res = await fetch(generateBareUrl(integrationType, g.integrationID), {\n            method: \"POST\",\n            headers: {\n                'Eb-Post-Req': POST_TYPES.UPLOAD_ATTACHMENT,\n                ...customHeaders,\n                ...attachmentAuth\n            },\n            body: formData\n        });\n\n        const resData = await res.json();\n\n        if ({}.hasOwnProperty.call(resData, 'ErrorCode') || {}.hasOwnProperty.call(resData, 'code')) {\n            if (resData.ErrorCode === \"TokenExpired\") {\n                if (integrationType === \"PROJECT\") {\n                    try {\n                        const req_res = await tokenPost(POST_TYPES.REQUEST_TOKEN, {\n                            refreshToken: g.refreshToken,\n                            token: g.token\n                        });\n    \n                        if (req_res.success) {\n                            g.token = req_res.data.token\n                            g.newTokenCallback();\n                            return tokenPostAttachment(formData, customHeaders);\n                        } else {\n                            throw new Error(req_res.data || \"Error\");\n                        }   \n                    } catch (error) {\n                        _clearTokens();\n                        return {\n                            success: false,\n                            data: error.message || error\n                        }\n                    }\n                } else {\n                    await initAuth();\n                }\n                return tokenPostAttachment(formData, customHeaders);\n            } else {\n                const err = new Error(resData.body || resData.ErrorCode || resData.code || \"Error\");\n                (err as any).errorCode = resData.ErrorCode || resData.code;\n                throw err;\n            }\n        } else {\n            return {\n                success: resData.success,\n                data: resData.body\n            }\n        }\n    }\n\n    return {\n        initAuth,\n        tokenPost,\n        tokenPostAttachment,\n        signUp,\n        setUserAttribute,\n        getUserAttributes,\n        isUserSignedIn,\n        signIn,\n        signOut,\n        resetUserPassword,\n        forgotPassword,\n        forgotPasswordConfirm\n    }\n}\n","import {\n    POST_TYPES,\n    QueryOptions,\n    Globals\n} from \"./types\";\nimport _g from \"./g\";\n\nimport authFactory from \"./auth\";\n\nexport default function tableFactory(globals?: Globals): any {\n\n    const g = globals || _g;\n\n    const { tokenPost } = authFactory(g);\n\n    const Query = async (options: QueryOptions): Promise<Record<string, any>[]> => {\n        const defaultOptions: QueryOptions = {\n            queryName: \"\"\n        }\n    \n        const fullOptions: QueryOptions = { ...defaultOptions, ...options };\n\n        const res = await tokenPost(POST_TYPES.GET_QUERY, fullOptions);\n        if (res.success) {\n            return res.data\n        } else {\n            return [];\n        }\n    }\n\n    async function fullTableSize(): Promise<number>;\n    async function fullTableSize(tableName: string): Promise<number>;\n    async function fullTableSize(tableName?: string): Promise<number> {\n        const res = await tokenPost(POST_TYPES.TABLE_SIZE, tableName ? { tableName } : {});\n        if (res.success) {\n            return res.data;\n        } else {\n            return 0;\n        }\n    }\n\n    async function tableTypes(): Promise<Record<string, any>>;\n    async function tableTypes(tableName: string): Promise<Record<string, any>>\n    async function tableTypes(tableName?: string): Promise<Record<string, any>> {\n        const res = await tokenPost(POST_TYPES.COLUMN_TYPES, tableName ? { tableName } : {});\n        if (res.success) {\n            return res.data;\n        } else {\n            return {};\n        }\n    }\n\n    return {\n        Query,\n        fullTableSize,\n        tableTypes\n    };\n}","/** Returns a function the creates a new context */\nconst createNewContext = defaultContext => {\n    const { parameterize, escape, mapKey, build } = defaultContext\n\n    return (inherit = {}) => {\n        const { params = [], unparameterized = false } = inherit\n\n        const whr = []\n        return {\n            // properties set by the EasyQB instance\n            parameterize,\n            escape,\n            mapKey,\n            build,\n\n            // properties inherited from the parent query\n            params,\n            unparameterized,\n\n            // properties of the current query\n            type: 'select',\n            // | sql' | 'select' | 'delete' | 'insert' | 'update'\n            target: whr,\n            join: undefined,\n            separator: ' ',\n            sql: [],\n            ret: [],\n            frm: [],\n            whr,\n            grp: [],\n            hav: [],\n            setop: [],\n            ord: [],\n            with: [],\n            set: []\n\n            // properties that may be added dynamically:\n            // userType\n            // distinct\n        }\n    }\n}\n\nmodule.exports = createNewContext\n","const createNewContext = require('./context')\nconst createQueryBuilder = ({ defaultContext, query, e, config }) => {\n    const { queries, methods, properties } = query\n    const newContext = createNewContext(defaultContext)\n    const reducers = createReducers(methods)\n    const updateContext = applyReducers(reducers)\n    reducers.extend = (ctx, args) => {\n        const arr = Array.isArray(args[0]) ? args[0] : args\n        for (let i = 0; i < arr.length; ++i) {\n            updateContext(arr[i].method, ctx)\n        }\n    }\n    const builder = () => { } // must not be object literal\n    const chain = createChain(builder)\n\n    const executeProperties = {\n        one: {\n            value: async function () {\n                const ret = await config.oneCallback(this.query, config.tableName, config.userAssociatedRecordsOnly)\n                return ret;\n            }\n        },\n        all: {\n            value: async function () {\n                const ret = await config.allCallback(this.query, config.tableName, config.userAssociatedRecordsOnly)\n                return ret;\n            }\n        },\n        _tableName: {\n            get: function () {\n                return config.tableName\n            }\n        }\n    }\n\n    // EasyQB no access to from\n    const _methodProperties = methodProperties({ methods, chain });\n    delete _methodProperties.from;\n\n    Object.defineProperties(builder, {\n        ...builderProperties({ chain, newContext, updateContext, queries }),\n        ..._methodProperties,\n        ...executeProperties,\n        ...properties,\n        e: {\n            value: e\n        }\n    })\n    return chain()\n}\n\n/** Creates a new builder instance */\nconst createChain = prototype => {\n    const chain = method => {\n        const fn = (...args) => chain({ name: 'express', args, prev: method })\n        fn.method = method\n        Object.setPrototypeOf(fn, prototype)\n        return fn\n    }\n    return chain\n}\n\n/** Creates an object containing all method reducers */\nconst createReducers = methods => {\n    const reducers = {}\n    for (const name in methods) {\n        const { updateContext, properties = {} } = methods[name]\n        reducers[name] = updateContext\n        // some methods have subproperties, e.g. .unionAll\n        for (const key in properties) {\n            reducers[`${name}.${key}`] = properties[key]\n        }\n    }\n    return reducers\n}\n\n/** Follows a method chain, applying each method's reducer, to ctx */\nconst applyReducers = reducers => (method, ctx) => {\n    // follow method links to construct methods array (in reverse)\n    const methods = []\n    for (; method !== undefined; method = method.prev) {\n        methods.push(method)\n    }\n    // build methods object by processing methods in call order\n    const express = { id: 0 }\n    for (let i = methods.length - 1; i >= 0; --i) {\n        const method = methods[i]\n        reducers[method.name](ctx, method.args, express)\n    }\n    return ctx\n}\n\n/** Default properties of all SQL Query Builders */\nconst builderProperties = ({ newContext, updateContext, queries }) => ({\n    _build: {\n        value: function (inheritedContext) {\n            const ctx = updateContext(this.method, newContext(inheritedContext))\n            return queries[ctx.type](ctx)\n        }\n    },\n    query: {\n        get: function () {\n            return this._build()\n        }\n    },\n    unparameterized: {\n        get: function () {\n            return this._build({ unparameterized: true }).text\n        }\n    }\n})\n\n/** Builds object containing a property for every query building method */\nconst methodProperties = ({ methods, chain }) => {\n    const properties = {}\n    for (const name in methods) {\n        const { getter } = methods[name]\n        if (getter) {\n            // add getter methods\n            properties[name] = {\n                get: function () {\n                    return chain({ name, prev: this.method })\n                }\n            }\n        } else {\n            // add function call methods\n            properties[name] = {\n                value: function (...args) {\n                    return chain({ name, args, prev: this.method })\n                }\n            }\n        }\n    }\n    return properties\n}\n\nmodule.exports = createQueryBuilder","const isTaggedTemplate = ([strings]) => Array.isArray(strings) && strings.raw\n\nconst buildTaggedTemplate = (ctx, [strings, ...args]) => {\n  let txt = strings[0]\n  for (let i = 0; i < args.length; ++i) {\n    txt += ctx.build(args[i]) + strings[i + 1]\n  }\n  return txt\n}\n\nmodule.exports = {\n  isTaggedTemplate,\n  buildTaggedTemplate\n}","const { isTaggedTemplate, buildTaggedTemplate } = require('./tagged_template')\n\nconst isObject = arg => arg && arg.constructor.prototype === Object.prototype\n\nconst buildCall = callbackfn => (ctx, args) =>\n  isTaggedTemplate(args)\n    ? buildTaggedTemplate(ctx, args)\n    : callbackfn(ctx, args)\n\nconst mapJoin = (callbackfn, separator = ', ') => (ctx, args) => {\n  let txt = ''\n  for (let i = 0; i < args.length; ++i) {\n    if (i !== 0) txt += separator\n    txt += callbackfn(ctx, args[i])\n  }\n  return txt\n}\n\nconst mapJoinWrap = (callbackfn, separator = ', ', open = '(', close = ')') => (\n  ctx,\n  args\n) => {\n  let txt = open\n  for (let i = 0; i < args.length; ++i) {\n    if (i !== 0) txt += separator\n    txt += callbackfn(ctx, args[i])\n  }\n  return txt + close\n}\n\nconst objectMapJoin = (callbackfn, separator = ', ') => (ctx, object) => {\n  let txt = ''\n  const keys = Object.keys(object)\n  for (let i = 0; i < keys.length; ++i) {\n    if (i !== 0) txt += separator\n    const key = keys[i]\n    txt += callbackfn(ctx, key, object[key])\n  }\n  return txt\n}\n\nmodule.exports = {\n  isObject,\n  buildCall,\n  mapJoin,\n  mapJoinWrap,\n  objectMapJoin\n}","// included to mitigate cost of case conversion\nconst memoize = fn => {\n  const cache = {}\n  return key => cache[key] || (cache[key] = fn(key))\n}\n\nconst normalKey = given_key => given_key.indexOf('(') === -1 ? given_key.toLowerCase().trim().replace(/ /g, '_') : given_key;\n\nmodule.exports = {\n  memoize,\n  normalKey\n}","const buildUtils = require('./build_utils')\nconst changeCase = require('./change_case')\nconst taggedTemplate = require('./tagged_template')\n\nmodule.exports = {\n  ...buildUtils,\n  ...changeCase,\n  ...taggedTemplate\n}","const { isTaggedTemplate } = require('../lib-util')\n\nconst createExpressionCompiler = expressionTable => {\n  const callsCompiler = createCallsCompiler(expressionTable)\n  return (ctx, current) => {\n    const calls = buildCalls(current)\n    const text = callsCompiler(ctx, calls)\n    return {\n      text,\n      args: ctx.params,\n      type: 'expression'\n    }\n  }\n}\n\n// TODO: Performance optimization:\n// inline expression building with this method so at most only one array\n// is allocated in total, no array of object containing arrays nonsense\nconst buildCalls = current => {\n  // get call nodes\n  const calls = []\n  for (; current; current = current.prev) calls.push(current)\n  if (calls.length === 0) throw Error('Error: Empty expression')\n\n  // build expression list\n  let expression = { name: 'arg', args: [] }\n  const expressions = [expression]\n  const last = calls.length - 1\n  for (let i = last; i >= 0; --i) {\n    const { name, args } = calls[i]\n    if (i === last) {\n      if (name) expression.name = name\n      else pushCall(expression.args, args)\n    } else {\n      if (name) expressions.push((expression = { name, args: [undefined] }))\n      else pushCall(expression.args, args)\n    }\n  }\n  return expressions\n}\n\nconst pushCall = (array, args) => {\n  if (isTaggedTemplate(args)) {\n    array.push({ tag: args })\n  } else {\n    if (args.length === 0)\n      throw Error('Error: Expression call requires at least one argument')\n    for (let i = 0; i < args.length; ++i) {\n      array.push({ arg: args[i] })\n    }\n  }\n}\n\nconst createCallsCompiler = expressionTable => (ctx, calls) => {\n  let exp\n  for (let i = 0; i < calls.length; ++i) {\n    const { name, args } = calls[i]\n    const { build, minArgs, maxArgs } = expressionTable[name]\n    if (i !== 0) args[0] = { exp }\n    const numArgs = args.length\n    if (numArgs < minArgs)\n      throw Error(`Error: ${name} requires at least ${minArgs} arguments`)\n    if (numArgs > maxArgs)\n      throw Error(`Error: ${name} accepts at most ${maxArgs} arguments`)\n    exp = build(ctx, args)\n  }\n  return exp\n}\n\nmodule.exports = createExpressionCompiler\n","const createExpressionCompiler = require('./compile')\nconst { normalKey } = require('../lib-util');\n\nconst aggregator = (op) => (columnName) => `${op}(${normalKey(columnName)})`;\n\nmodule.exports = ({ defaultContext, expression }) => {\n  const { expressions } = expression\n  const newContext = createNewContext(defaultContext)\n  const compile = createExpressionCompiler(expressions)\n  const builder = () => {} // must not be object literal\n  const chain = createChain(builder)\n  Object.defineProperties(builder, {\n    ...builderProperties({ compile, newContext }),\n    ...methodProperties({ expressions, chain }),\n  })\n  const ret = chain();\n  ret.max = aggregator('max');\n  ret.min = aggregator('min');\n  ret.avg = aggregator('avg');\n  ret.count = aggregator('count');\n  ret.sum = aggregator('sum');\n  return ret;\n}\n\nconst builderProperties = ({ compile, newContext }) => ({\n  _build: {\n    value: function(inherit) {\n      return compile(newContext(inherit), this.current)\n    }\n  },\n  query: {\n    get: function() {\n      return this._build()\n    }\n  },\n  unparameterized: {\n    get: function() {\n      return this._build({ unparameterized: true }).text\n    }\n  }\n})\n\nconst createNewContext = defaultContext => {\n  const { build, parameterize, escape, mapKey } = defaultContext\n  return inherit => {\n    const { params = [], unparameterized = false } = inherit || {}\n    return {\n      // EasyQB instance properties\n      build,\n      parameterize,\n      escape,\n      mapKey,\n\n      // inherited properties\n      params,\n      unparameterized\n    }\n  }\n}\n\nconst createChain = prototype => {\n  const chain = current => {\n    const fn = (...args) => chain({ prev: current, args })\n    fn.current = current\n    Object.setPrototypeOf(fn, prototype)\n    return fn\n  }\n  return chain\n}\n\nconst methodProperties = ({ expressions, chain }) => {\n  const properties = {}\n  for (const name in expressions) {\n    properties[name] = {\n      get: function() {\n        return chain({ prev: this.current, name })\n      }\n    }\n  }\n  return properties\n}\n","const createQueryBuilder = require('../builder-sq')\nconst createExpressionBuilder = require('../builder-expression')\nconst { memoize, normalKey } = require('../lib-util')\n\n\n/**\n * Creates a version of EasyQB for the given SQL dialect and database adapter.\n *\n * A dialect is variant of the SQL language,\n * while an adapter is the driver that communicates with the database.\n *\n * This design makes it easy to swap drivers, e.g. mysql vs mysql2 or\n * add new databases just by connecting a new adapter to an existing dialect.\n *\n */\n\nconst createSqorn = ({ dialect }) => (config = {}) => {\n  const { query, expression, parameterize, escape } = dialect\n\n  // 1. Create default context properties passed through build tree\n  const mapKey = memoize(normalKey)\n  const defaultContext = { parameterize, escape, mapKey, build }\n\n  // 2. Create Expression Builder\n  const e = createExpressionBuilder({ defaultContext, expression })\n\n  // 3. Create Query Builder\n  const sq = createQueryBuilder({ defaultContext, query, e, config })\n\n  // 4. TODO: Build Executor, Attach e and execute functions\n\n  // 5. TODO: Return { sq, e, transaction, db }\n  return sq\n}\n\nfunction build(arg) {\n  if (arg === undefined) throw Error('Error: undefined argument')\n  if (typeof arg === 'function') {\n    if (arg._build) {\n      const { type, text } = arg._build(this)\n      if (type === 'expression') return text\n      if (type === 'fragment') return text\n      return `(${text})`\n    }\n    return arg(this)\n  }\n  return this.unparameterized ? this.escape(arg) : this.parameterize(arg)\n}\n\nmodule.exports = createSqorn","const { normalKey } = require('../lib-util')\n\n/** Query building methods */\nconst methods = {\n    with: {\n        updateContext: (ctx, args) => {\n            ctx.with.push(args)\n        }\n    },\n    withRecursive: {\n        updateContext: (ctx, args) => {\n            ctx.recursive = true\n            ctx.with.push(args)\n        }\n    },\n    from: {\n        updateContext: (ctx, args) => {\n            ctx.frm.push({ args, join: ', ' })\n        }\n    },\n    where: {\n        updateContext: (ctx, args) => {\n            ctx.whr.push(args)\n            ctx.target = ctx.whr\n        }\n    },\n    return: {\n        updateContext: (ctx, args) => {\n            ctx.ret.push(Array.isArray(args) ? args.map(normalKey) : args)\n        }\n    },\n    distinct: {\n        getter: true,\n        updateContext: ctx => {\n            ctx.distinct = []\n        }\n    },\n    groupBy: {\n        updateContext: (ctx, args) => {\n            ctx.grp.push(args)\n        }\n    },\n    having: {\n        updateContext: (ctx, args) => {\n            ctx.hav.push(args)\n            ctx.target = ctx.hav\n        }\n    },\n    union: {\n        updateContext: (ctx, args) => {\n            ctx.setop.push({ type: 'union', args })\n        }\n    },\n    unionAll: {\n        updateContext: (ctx, args) => {\n            ctx.setop.push({ type: 'union all', args })\n        }\n    },\n    intersect: {\n        updateContext: (ctx, args) => {\n            ctx.setop.push({ type: 'intersect', args })\n        }\n    },\n    intersectAll: {\n        updateContext: (ctx, args) => {\n            ctx.setop.push({ type: 'intersect all', args })\n        }\n    },\n    except: {\n        updateContext: (ctx, args) => {\n            ctx.setop.push({ type: 'except', args })\n        }\n    },\n    exceptAll: {\n        updateContext: (ctx, args) => {\n            ctx.setop.push({ type: 'except all', args })\n        }\n    },\n    orderBy: {\n        updateContext: (ctx, args) => {\n            ctx.ord.push(args)\n        }\n    },\n    limit: {\n        updateContext: (ctx, args) => {\n            ctx.limit = args\n        }\n    },\n    offset: {\n        updateContext: (ctx, args) => {\n            ctx.offset = args\n        }\n    },\n    join: {\n        updateContext: (ctx, args) => {\n            ctx.frm.push((ctx.join = { args, join: ' join ' }))\n        }\n    },\n    leftJoin: {\n        updateContext: (ctx, args) => {\n            ctx.frm.push((ctx.join = { args, join: ' left join ' }))\n        }\n    },\n    rightJoin: {\n        updateContext: (ctx, args) => {\n            ctx.frm.push((ctx.join = { args, join: ' right join ' }))\n        }\n    },\n    fullJoin: {\n        updateContext: (ctx, args) => {\n            ctx.frm.push((ctx.join = { args, join: ' full join ' }))\n        }\n    },\n    crossJoin: {\n        updateContext: (ctx, args) => {\n            ctx.frm.push((ctx.join = { args, join: ' cross join ' }))\n        }\n    },\n    naturalJoin: {\n        updateContext: (ctx, args) => {\n            ctx.frm.push((ctx.join = { args, join: ' natural join ' }))\n        }\n    },\n    naturalLeftJoin: {\n        updateContext: (ctx, args) => {\n            ctx.frm.push((ctx.join = { args, join: ' natural left join ' }))\n        }\n    },\n    naturalRightJoin: {\n        updateContext: (ctx, args) => {\n            ctx.frm.push((ctx.join = { args, join: ' natural right join ' }))\n        }\n    },\n    naturalFullJoin: {\n        updateContext: (ctx, args) => {\n            ctx.frm.push((ctx.join = { args, join: ' natural full join ' }))\n        }\n    },\n    on: {\n        updateContext: (ctx, args) => {\n            const { join } = ctx\n            if (join.on) {\n                join.on.push(args)\n            } else {\n                ctx.target = join.on = [args]\n            }\n        }\n    },\n    using: {\n        updateContext: (ctx, args) => {\n            const { join } = ctx\n            if (join.using) {\n                join.using.push(args)\n            } else {\n                join.using = [args]\n            }\n        }\n    },\n    delete: {\n        // getter: true,\n        updateContext: ctx => {\n            ctx.type = 'delete'\n        }\n    },\n    insert: {\n        updateContext: (ctx, args) => {\n            ctx.type = 'insert'\n            ctx.insert = args\n        }\n    },\n    set: {\n        updateContext: (ctx, args) => {\n            ctx.type = 'update'\n            ctx.set.push(args)\n        }\n    },\n    express: {\n        updateContext: (ctx, args, count) => {\n            if (count.id === 0) {\n                count.id++\n                ctx.frm.push((ctx.join = { type: 'from', args, join: ', ' }))\n            } else if (count.id === 1) {\n                count.id++\n                ctx.whr.push(args)\n            } else if (count.id === 2) {\n                count.id++\n                ctx.ret.push(args)\n            } else throw Error('Invalid express call')\n        }\n    }\n}\n\nmodule.exports = methods;","const { mapJoin } = require('../../lib-util')\n\nmodule.exports = (ctx, array) => {\n  const keys = uniqueKeys(array)\n  return {\n    columns: columns(ctx, keys),\n    values: values(ctx, array, keys)\n  }\n}\n\n// gets unique keys in object array\nconst uniqueKeys = array => {\n  const keys = {}\n  for (const object of array) {\n    for (const key in object) {\n      keys[key] = true\n    }\n  }\n  return Object.keys(keys)\n}\n\n// gets column string from unique keys of object array\nconst columns = mapJoin((ctx, arg) => ctx.mapKey(arg))\n\n// gets values string of object array\nconst values = (ctx, source, keys) => {\n  let txt = 'values '\n  for (let i = 0; i < source.length; ++i) {\n    if (i !== 0) txt += ', '\n    txt += '('\n    const object = source[i]\n    for (let j = 0; j < keys.length; ++j) {\n      if (j !== 0) txt += ', '\n      txt += value(ctx, object[keys[j]])\n    }\n    txt += ')'\n  }\n  return txt\n}\n\nconst value = (ctx, arg) => {\n  if (arg === undefined) return 'default'\n  return ctx.build(arg)\n}\n","const {\n  isObject,\n  buildCall,\n  mapJoin,\n  objectMapJoin\n} = require('../../lib-util')\nconst valuesArray = require('../common/values_array')\n\nmodule.exports = ctx => {\n  if (ctx.with.length === 0) return\n  const txt = calls(ctx, ctx.with)\n  return txt && `with ${ctx.recursive ? 'recursive ' : ''}${txt}`\n}\n\nconst buildArg = (ctx, arg) => {\n  if (isObject(arg)) return buildObject(ctx, arg)\n  throw Error('Invalid with argument:', arg)\n}\n\nconst buildProperty = (ctx, key, value) => {\n  if (typeof value === 'function') {\n    return `${ctx.mapKey(key)} ${ctx.build(value)}`\n  }\n  if (Array.isArray(value)) {\n    const { columns, values } = valuesArray(ctx, value)\n    return `${ctx.mapKey(key)}(${columns}) (${values})`\n  }\n  throw Error(`Error: Invalid .with argument`)\n}\n\nconst buildObject = objectMapJoin(buildProperty)\nconst calls = mapJoin(buildCall(mapJoin(buildArg)))\n","const {\n  isObject,\n  buildCall,\n  mapJoin,\n  objectMapJoin\n} = require('../../lib-util')\n\nconst buildArg = (ctx, arg) => {\n  if (typeof arg === 'string') return arg\n  if (isObject(arg)) return buildObject(ctx, arg)\n  return ctx.build(arg)\n}\n\nconst buildProperty = (ctx, key, value) => {\n  const expression = typeof value === 'string' ? value : ctx.build(value)\n  return `${expression} ${ctx.mapKey(key)}`\n}\n\nconst buildObject = objectMapJoin(buildProperty)\nmodule.exports = mapJoin(buildCall(mapJoin(buildArg)))\n","const expressions = require('../common/expressions')\n\nmodule.exports = ctx =>\n  `select ${buildDistinct(ctx)}${expressions(ctx, ctx.ret) || '*'}`\n\nconst buildDistinct = ctx =>\n  ctx.distinct\n    ? ctx.distinct.length\n      ? // TODO: expressions shouldn't be aliasable here\n        `distinct on (${expressions(ctx, ctx.distinct)})`\n      : 'distinct'\n    : ''\n","const {\n  isTaggedTemplate,\n  buildTaggedTemplate,\n  isObject,\n  mapJoin,\n  objectMapJoin\n} = require('../../lib-util')\n\nconst buildCall = callbackfn => (ctx, args) =>\n  isTaggedTemplate(args)\n    ? `(${buildTaggedTemplate(ctx, args)})`\n    : callbackfn(ctx, args)\n\nconst buildArg = (ctx, arg) =>\n  isObject(arg) ? buildObject(ctx, arg) : ctx.build(arg)\n\nconst valuesList = mapJoin((ctx, arg) => ctx.build(arg))\n\nconst buildProperty = (ctx, key, value) => {\n  const name = ctx.mapKey(key)\n  if (value === null) return `(${name} is null)`\n  if (Array.isArray(value)) return `(${name} in (${valuesList(ctx, value)}))`\n  return `(${name} = ${ctx.build(value)})`\n}\n\nconst buildObject = objectMapJoin(buildProperty, ' and ')\nmodule.exports = mapJoin(buildCall(mapJoin(buildArg, ' and ')), ' and ')\n","const {\n  isObject,\n  buildCall,\n  mapJoin,\n  objectMapJoin\n} = require('../../lib-util')\nconst conditions = require('./conditions')\nconst valuesArray = require('./values_array')\n\nmodule.exports = (ctx, items, start = 0, end = items.length) => {\n  if (end > items.length) end = items.length\n  let txt = ''\n  for (let i = start; i < end; ++i) {\n    const item = items[i]\n    if (i !== start) txt += item.join\n    txt += fromItem(ctx, item.args)\n    if (item.on) txt += ` on ${conditions(ctx, item.on)}`\n    else if (item.using) txt += ` using (${using(ctx, item.using)})`\n  }\n  return txt\n}\n\nconst usingArg = (ctx, arg) => {\n  if (typeof arg === 'string') return arg\n  if (typeof arg === 'function') return ctx.build(arg)\n  throw Error('Error: Invalid .using arg')\n}\nconst using = mapJoin(buildCall(mapJoin(usingArg)))\n\nconst fromArg = (ctx, arg) => {\n  if (typeof arg === 'string') return arg\n  if (typeof arg === 'function') return ctx.build(arg)\n  if (isObject(arg)) return buildObject(ctx, arg)\n  throw Error('Error: Invalid .from argument:', arg)\n}\n\nconst buildProperty = (ctx, key, value) => {\n  if (typeof value === 'string') return `${value} ${ctx.mapKey(key)}`\n  if (typeof value === 'function')\n    return `${ctx.build(value)} ${ctx.mapKey(key)}`\n  if (Array.isArray(value)) {\n    const { columns, values } = valuesArray(ctx, value)\n    return `(${values}) ${ctx.mapKey(key)}(${columns})`\n  }\n  throw Error('Error: Invalid .from argument')\n}\n\nconst buildObject = objectMapJoin(buildProperty)\nconst fromItem = buildCall(mapJoin(fromArg))\n","const fromItems = require('../common/from_items')\n\nmodule.exports = ctx => {\n  const txt = fromItems(ctx, ctx.frm)\n  return txt && `from ${txt}`\n}\n","const conditions = require('../common/conditions')\n\nmodule.exports = ctx => {\n  if (ctx.whr.length === 0) return\n  const txt = conditions(ctx, ctx.whr)\n  return txt && 'where ' + txt\n}\n","const { isObject, buildCall, mapJoin, mapJoinWrap } = require('../../lib-util')\n\nmodule.exports = ctx => {\n  if (ctx.grp.length === 0) return\n  const txt = calls(ctx, ctx.grp)\n  return txt && `group by ${txt}`\n}\n\nconst buildArg = (ctx, arg) => {\n  if (typeof arg === 'string') return arg\n  if (typeof arg === 'function') return ctx.build(arg)\n  if (Array.isArray(arg)) return buildArrayArg(ctx, arg)\n  if (isObject(arg)) return buildObject(ctx, arg)\n  throw Error('Invalid order by argument:', arg)\n}\n\nconst buildArrayArg = mapJoinWrap(buildArg)\n\n// postgres only\n// clone of buildArg() without support for object args\nconst buildCubeOrRollupArg = (ctx, arg) => {\n  if (typeof arg === 'string') return arg\n  if (typeof arg === 'function') return ctx.build(arg)\n  if (Array.isArray(arg)) return buildCubeOrRollupArrayArg(ctx, arg)\n  throw Error('Invalid cube/rollup argument')\n}\n\n// postgres only\n// clone of buildArrayArg() without support for object args\nconst buildCubeOrRollupArrayArg = mapJoinWrap(buildCubeOrRollupArg)\n\n// postgres only\nconst buildObject = (ctx, obj) => {\n  const { type, args } = obj\n  if (type === 'rollup') {\n    return `rollup ${buildCubeOrRollupArg(ctx, args)}`\n  }\n  if (type === 'cube') {\n    return `cube ${buildCubeOrRollupArg(ctx, args)}`\n  }\n  if (type === 'grouping sets') {\n    return `grouping sets ${buildArg(ctx, args)}`\n  }\n  throw Error('Invalid group by argument')\n}\n\nconst calls = mapJoin(buildCall(mapJoin(buildArg)))\n","const conditions = require('../common/conditions')\n\nmodule.exports = ctx => {\n  if (ctx.hav.length === 0) return\n  const txt = conditions(ctx, ctx.hav)\n  return txt && 'having ' + txt\n}\n","module.exports = ctx => {\n  if (ctx.setop.length === 0) return\n  let txt = ''\n  let first = true\n  const { setop } = ctx\n  for (let i = 0; i < setop.length; ++i) {\n    const { type, args } = ctx.setop[i]\n    for (let j = 0; j < args.length; ++j) {\n      if (!first) {\n        txt += ' '\n      } else {\n        first = false\n      }\n      txt += `${type} ${ctx.build(args[j])}`\n    }\n  }\n  return txt\n}\n","const { isObject, buildCall, mapJoin } = require('../../lib-util')\n\nmodule.exports = ctx => {\n  if (ctx.ord.length === 0) return\n  const txt = calls(ctx, ctx.ord)\n  return txt && `order by ${txt}`\n}\n\nconst buildArg = (ctx, arg) => {\n  if (typeof arg === 'string') return arg\n  if (typeof arg === 'function') return ctx.build(arg)\n  if (isObject(arg)) return buildObject(ctx, arg)\n  throw Error('Invalid order by argument:', arg)\n}\n\nconst buildObject = (ctx, obj) => {\n  let txt = ''\n  const { by, sort, using, nulls } = obj\n  // by\n  if (typeof by === 'string') txt += by\n  else if (typeof by === 'function') txt += ctx.build(by)\n  else throw Error('Invalid order by property \"by\"')\n  // sort\n  if (sort) {\n    if (sort === 'desc') txt += ' desc'\n    else if (sort === 'asc') txt += ' asc'\n    else if (typeof sort === 'string') txt += ` using ${sort}`\n    else throw Error('Invalid order by property \"sort\"')\n  } else if (using) {\n    if (typeof using === 'string') txt += ` using ${using}`\n    else throw Error('Invalid order by property \"using\"')\n  }\n  // nulls\n  if (nulls === undefined);\n  else if (nulls === 'last') txt += ' nulls last'\n  else if (nulls === 'first') txt += ' nulls first'\n  else throw Error('Invalid order by property \"nulls\"')\n  // return\n  return txt\n}\n\nconst calls = mapJoin(buildCall(mapJoin(buildArg)))\n","const { isTaggedTemplate, buildTaggedTemplate } = require('../../lib-util')\n\nmodule.exports = (ctx, args) => {\n  if (isTaggedTemplate(args)) return buildTaggedTemplate(ctx, args)\n  const arg = args[0]\n  if (typeof arg === 'number') return ctx.parameterize(arg)\n  if (typeof arg === 'function') return ctx.build(arg)\n  throw Error('Error: Invalid limit/offset argument')\n}\n","const limitOffset = require('../common/limit_offset')\n\nmodule.exports = ctx => ctx.limit && `limit ${limitOffset(ctx, ctx.limit)}`\n","const limitOffset = require('../common/limit_offset')\n\nmodule.exports = ctx => ctx.offset && `offset ${limitOffset(ctx, ctx.offset)}`\n","const fromItems = require('../common/from_items')\n\nmodule.exports = ctx => {\n  const txt = fromItems(ctx, ctx.frm)\n  return txt && `delete from ${txt}`\n}\n","const expressions = require('../common/expressions')\n\nmodule.exports = ctx => {\n  if (!ctx.ret) return\n  const txt = expressions(ctx, ctx.ret)\n  return txt && `returning ${txt}`\n}\n","const { isTaggedTemplate, buildTaggedTemplate } = require('../../lib-util')\nconst fromItems = require('../common/from_items')\nconst valuesArray = require('../common/values_array')\n\nmodule.exports = ctx => {\n  const table = fromItems(ctx, ctx.frm)\n  const values = buildCall(ctx, ctx.insert)\n  return `insert into ${table}${values}`\n}\n\nconst buildCall = (ctx, args) => {\n  if (isTaggedTemplate(args)) return ' ' + buildTaggedTemplate(ctx, args)\n  if (args.length === 1 && args[0] === undefined) return ' default values'\n  if (Array.isArray(args[0])) return buildValuesArray(ctx, args[0])\n  if (typeof args[0] === 'function') return ' ' + ctx.build(args[0])\n  return buildValuesArray(ctx, args)\n}\n\nconst buildValuesArray = (ctx, array) => {\n  const { values, columns } = valuesArray(ctx, array)\n  return `(${columns}) ${values}`\n}\n","const fromItems = require('../common/from_items')\n\nmodule.exports = ctx => {\n  const txt = fromItems(ctx, ctx.frm)\n  return txt && `update ${txt}`\n}\n","const { buildCall, mapJoin, objectMapJoin } = require('../../lib-util')\n\nmodule.exports = ctx => {\n  if (!ctx.set) return\n  const txt = calls(ctx, ctx.set)\n  return txt && 'set ' + txt\n}\n\nconst buildProperty = (ctx, key, value) =>\n  `${ctx.mapKey(key)} = ${ctx.build(value)}`\n\nconst calls = mapJoin(buildCall(mapJoin(objectMapJoin(buildProperty))))\n","module.exports = {\n  wth: require('./with'),\n  select: require('./select'),\n  from: require('./from'),\n  where: require('./where'),\n  group: require('./group'),\n  having: require('./having'),\n  setop: require('./setop'),\n  order: require('./order'),\n  limit: require('./limit'),\n  offset: require('./offset'),\n  del: require('./delete'),\n  returning: require('./returning'),\n  insert: require('./insert'),\n  update: require('./update'),\n  set: require('./set')\n}\n","const {\n    wth,\n    select,\n    from,\n    where,\n    group,\n    having,\n    setop,\n    order,\n    limit,\n    offset,\n    del,\n    returning,\n    insert,\n    update,\n    set,\n} = require('./clauses')\n\nconst query = (...clauses) => ctx => {\n    let text = ''\n    for (const clause of clauses) {\n        const str = clause && clause(ctx)\n        if (str) {\n            if (text) text += ctx.separator\n            text += str\n        }\n    }\n    return { text, args: ctx.params, type: ctx.userType || ctx.type }\n}\n\nconst queries = {\n    select: query(\n        wth,\n        select,\n        from,\n        where,\n        group,\n        having,\n        setop,\n        order,\n        limit,\n        offset\n    ),\n    update: query(wth, update, set, where, returning),\n    delete: query(wth, del, where, returning),\n    insert: query(wth, insert, returning)\n}\n\nmodule.exports = { query, queries }","const conditions = require('./conditions')\nconst expressions = require('./expressions')\nconst fromItems = require('./from_items')\nconst limitOffset = require('./limit_offset')\nconst valuesArray = require('./values_array')\n\nmodule.exports = {\n  conditions,\n  expressions,\n  fromItems,\n  limitOffset,\n  valuesArray\n}\n","const methods = require('./methods')\nconst { query, queries } = require('./query')\nconst clauses = require('./clauses')\nconst common = require('./common')\n\nmodule.exports = {\n  methods,\n  query,\n  queries,\n  clauses,\n  common\n}","const { methods, queries, query, clauses, common } = require('../lib-sq')\n\nconst { fromItems, expressions } = common\nconst {\n  wth,\n  from,\n  where,\n  group,\n  having,\n  setop,\n  order,\n  limit,\n  offset,\n  returning,\n  set\n} = clauses\n\nconst postgresMethods = {\n  distinctOn: {\n    updateContext: (ctx, args) => {\n      if (ctx.distinct) {\n        ctx.distinct.push(args)\n      } else {\n        ctx.distinct = [args]\n      }\n    }\n  }\n}\n\n// SELECT supports .distinctOn(...expressions)\nconst select = ctx => {\n  let txt = 'select '\n  if (ctx.distinct) {\n    txt += 'distinct '\n    if (ctx.distinct.length) {\n      txt += `on (${expressions(ctx, ctx.distinct)}) `\n    }\n  }\n  txt += expressions(ctx, ctx.ret) || '*'\n  return txt\n}\n// DELETE: first .from call is used in the DELETE clause\n// subsequent .from calls are used in the USING clause\nconst del = ctx => {\n  const txt = fromItems(ctx, ctx.frm, 0, 1)\n  return txt && `delete from ${txt}`\n}\nconst using = ctx => {\n  const txt = fromItems(ctx, ctx.frm, 1)\n  return txt && `using ${txt}`\n}\n// UPDATE: first .from call is used in the UPDATE clause\n// subsequent .from calls are used in the FROM clause\nconst update = ctx => {\n  const txt = fromItems(ctx, ctx.frm, 0, 1)\n  return txt && `update ${txt}`\n}\nconst updateFrom = ctx => {\n  const txt = fromItems(ctx, ctx.frm, 1)\n  return txt && `from ${txt}`\n}\n\nmodule.exports = {\n  methods: { ...methods, ...postgresMethods },\n  queries: {\n    ...queries,\n    select: query(\n      wth,\n      select,\n      from,\n      where,\n      group,\n      having,\n      setop,\n      order,\n      limit,\n      offset\n    ),\n    delete: query(wth, del, using, where, returning),\n    update: query(wth, update, set, updateFrom, where, returning)\n  },\n  properties: {\n    rollup: {\n      value: (...args) => {\n        return {\n          type: 'rollup',\n          args\n        }\n      }\n    },\n    cube: {\n      value: (...args) => {\n        return {\n          type: 'cube',\n          args\n        }\n      }\n    },\n    groupingSets: {\n      value: (...args) => {\n        return {\n          type: 'grouping sets',\n          args\n        }\n      }\n    }\n  }\n}","const { buildTaggedTemplate } = require('../lib-util')\n\nconst dateToYYYYMMDD = d => [\n    d.getFullYear(),\n    ('0' + (d.getMonth() + 1)).slice(-2),\n    ('0' + d.getDate()).slice(-2)\n].join('-');\n\nconst build = (ctx, arg) => {\n    // compiled expression string\n    if (arg.exp) return arg.exp\n    // tagged template argument\n    if (arg.tag) return buildTaggedTemplate(ctx, arg.tag)\n    // expression, subquery or fragment argument\n    return ctx.build(arg.arg)\n}\n\nconst unaryPre = op => ({\n    minArgs: 1,\n    maxArgs: 1,\n    build: (ctx, args) => `(${op} ${build(ctx, args[0])})`\n})\n\nconst unaryPost = op => ({\n    minArgs: 1,\n    maxArgs: 1,\n    build: (ctx, args) => `(${build(ctx, args[0])} ${op})`\n})\n\nconst unaryFunction = op => ({\n    minArgs: 1,\n    maxArgs: 1,\n    build: (ctx, args) => `${op}(${build(ctx, args[0])})`\n})\n\nconst binary = op => ({\n    minArgs: 2,\n    maxArgs: 2,\n    build: (ctx, args) => `(${build(ctx, args[0])} ${op} ${build(ctx, args[1])})`\n})\n\nconst dateBinary = op => ({\n    minArgs: 2,\n    maxArgs: 2,\n    build: (ctx, args) => {\n        const inDate = args[1].arg;\n        if (typeof inDate.getMonth === 'function') {\n            args[1].arg = dateToYYYYMMDD(inDate);\n        }\n        return `date(${build(ctx, args[0])}, 'YYYY-MM-DD') ${op} ${build(ctx, args[1])}`\n    }\n})\n\n\nconst ternary = (op1, op2) => ({\n    minArgs: 3,\n    maxArgs: 3,\n    build: (ctx, args) =>\n        `(${build(ctx, args[0])} ${op1} ${build(ctx, args[1])} ${op2} ${build(\n            ctx,\n            args[2]\n        )})`\n})\n\nconst nary = op => ({\n    minArgs: 1,\n    maxArgs: Number.MAX_SAFE_INTEGER,\n    build: (ctx, args) => {\n        if (args.length === 1) return build(ctx, args[0])\n        let txt = '('\n        for (let i = 0; i < args.length; ++i) {\n            if (i !== 0) txt += ` ${op} `\n            txt += build(ctx, args[i])\n        }\n        return txt + ')'\n    }\n})\n\nconst naryFunction = fn => ({\n    minArgs: 1,\n    maxArgs: Number.MAX_SAFE_INTEGER,\n    build: (ctx, args) => {\n        let txt = `${fn}(`\n        for (let i = 0; i < args.length; ++i) {\n            if (i !== 0) txt += `, `\n            txt += build(ctx, args[i])\n        }\n        return txt + ')'\n    }\n})\n\nconst oneValue = {\n    minArgs: 1,\n    maxArgs: 1,\n    build: (ctx, args) => build(ctx, args[0])\n}\n\nconst compositeValue = {\n    minArgs: 1,\n    maxArgs: Number.MAX_SAFE_INTEGER,\n    build: (ctx, args) => {\n        if (args.length === 1) return build(ctx, args[0])\n        let txt = ''\n        for (let i = 0; i < args.length; ++i) {\n            if (i !== 0) txt += ', '\n            txt += build(ctx, args[i])\n        }\n        return args.length > 1 ? `(${txt})` : txt\n    }\n}\n\nconst buildValuesList = (ctx, values) => {\n    if (values.length === 0) throw Error('Error: .in operation values list empty')\n    let txt = '('\n    for (let i = 0; i < values.length; ++i) {\n        if (i !== 0) txt += ', '\n        txt += ctx.build(values[i])\n    }\n    return txt + ')'\n}\n\nconst membership = op => ({\n    minArgs: 2,\n    maxArgs: 2,\n    build: (ctx, [arg1, arg2]) =>\n        `(${build(ctx, arg1)} ${op} ${Array.isArray(arg2.arg)\n            ? buildValuesList(ctx, arg2.arg)\n            : build(ctx, arg2)\n        })`\n})\n\nconst quantifiedComparison = op => ({\n    minArgs: 2,\n    maxArgs: 2,\n    build: (ctx, args) => `(${build(ctx, args[0])} ${op}(${build(ctx, args[1])}))`\n})\n\nmodule.exports = {\n    build,\n    unaryFunction,\n    unaryPre,\n    unaryPost,\n    binary,\n    ternary,\n    nary,\n    naryFunction,\n    oneValue,\n    compositeValue,\n    membership,\n    quantifiedComparison,\n    dateBinary\n}\n","const {\n    unaryPre,\n    unaryPost,\n    unaryFunction,\n    binary,\n    ternary,\n    nary,\n    naryFunction,\n    oneValue,\n    compositeValue,\n    membership,\n    quantifiedComparison,\n    dateBinary\n} = require('./util')\n\n// value\nconst value = {\n    arg: compositeValue,\n    row: compositeValue,\n    unknown: oneValue,\n    boolean: oneValue,\n    number: oneValue,\n    string: oneValue,\n    array: oneValue,\n    json: oneValue,\n    table: oneValue\n}\n\n// boolean\nconst boolean = {\n    // logical\n    and: nary('and'),\n    or: nary('or'),\n    not: unaryFunction('not'),\n    // comparison\n    isTrue: unaryPost('is true'),\n    isNotTrue: unaryPost('is not true'),\n    isFalse: unaryPost('is false'),\n    isNotFalse: unaryPost('is not false'),\n    isUnknown: unaryPost('is unknown'),\n    isNotUnknown: unaryPost('is not unknown')\n}\n\n// comparison\nconst comparison = {\n    // binary comparison\n    eq: binary('='),\n    neq: binary('<>'),\n    lt: binary('<'),\n    gt: binary('>'),\n    lte: binary('<='),\n    gte: binary('>='),\n    // misc\n    between: ternary('between', 'and'),\n    isDistinctFrom: binary('is distinct from'),\n    isNotDistinctFrom: binary('is not distinct from'),\n    isNull: unaryPost('is null'),\n    isNotNull: unaryPost('is not null'),\n    in: membership('in'),\n    notIn: membership('not in'),\n    // quantified any\n    eqAny: quantifiedComparison('= any'),\n    neqAny: quantifiedComparison('<> any'),\n    ltAny: quantifiedComparison('< any'),\n    gtAny: quantifiedComparison('> any'),\n    lteAny: quantifiedComparison('<= any'),\n    gteAny: quantifiedComparison('>= any'),\n    // quantified all\n    eqAll: quantifiedComparison('= all'),\n    neqAll: quantifiedComparison('<> all'),\n    ltAll: quantifiedComparison('< all'),\n    gtAll: quantifiedComparison('> all'),\n    lteAll: quantifiedComparison('<= all'),\n    gteAll: quantifiedComparison('>= all')\n}\n\n// dates\nconst dateComparison = {\n    // dateEq: dateBinary('='),\n    // dateNeq: dateBinary('<>'),\n    dateLt: dateBinary('<'),\n    dateGt: dateBinary('>'),\n    dateLte: dateBinary('<='),\n    dateGte: dateBinary('>=')\n}\n\n// math\nconst math = {\n    add: binary('+'),\n    sub: binary('-'),\n    mul: binary('*'),\n    div: binary('/'),\n    mod: binary('%'),\n    exp: binary('%'),\n    sqrt: unaryPre('|/'),\n    cbrt: unaryPre('||/'),\n    fact: unaryPre('!!'),\n    abs: unaryFunction('abs')\n}\n\n// string\nconst string = {\n    like: binary('like'),\n    notLike: binary('not like')\n}\n\nconst array = {\n    unnest: naryFunction('unnest')\n}\n\nmodule.exports = {\n    ...value,\n    ...boolean,\n    ...comparison,\n    ...math,\n    ...array,\n    ...dateComparison,\n    ...string\n}\n","const expressions = require('../lib-expression')\n\nmodule.exports = { expressions }","// parameterizes given argument, function should be attached to ctx\nfunction parameterize(arg) {\n    if (arg === undefined) throw Error('Error: parameter is undefined')\n    return `$${this.params.push(arg)}`\n}\n\n/** Escapes an argument for use in UNPARAMETERIZED queries. NOT SAFE AT ALL. */\nconst escape = arg => {\n    if (arg === undefined) throw Error('Error: parameter is undefined')\n    if (arg === null) return 'null'\n    if (typeof arg === 'string') return escapeLiteral(arg)\n    if (typeof arg === 'number') return '' + arg\n    if (typeof arg === 'boolean') return '' + arg\n    if (typeof arg === 'object') {\n        if (Array.isArray(arg)) {\n            return `array[${arg.map(e => escape(e)).join(', ')}]`\n        } else {\n            return escapeLiteral(JSON.stringify(arg))\n        }\n    }\n    throw Error(`Invalid argument SQL argument of type '${typeof arg}'`, arg)\n}\n\n// from https://github.com/brianc/node-postgres/blob/eb076db5d47a29c19d3212feac26cd7b6d257a95/lib/client.js#L351\nconst escapeLiteral = str => {\n    let hasBackslash = false\n    let escaped = \"'\"\n    for (let i = 0; i < str.length; i++) {\n        const c = str[i]\n        if (c === \"'\") {\n            escaped += c + c\n        } else if (c === '\\\\') {\n            escaped += c + c\n            hasBackslash = true\n        } else {\n            escaped += c\n        }\n    }\n    escaped += \"'\"\n    if (hasBackslash === true) {\n        escaped = ' E' + escaped\n    }\n    return escaped\n}\n\nmodule.exports = {\n    parameterize,\n    escape\n}\n","const query = require('./query')\nconst expression = require('./expression')\nconst { parameterize, escape } = require('./parameterize')\n\nmodule.exports = {\n  query,\n  expression,\n  parameterize,\n  escape\n}","const core = require('./lib-core')\nconst dialect = require('./dialect-postgres')\n\nconst a = core({ dialect });\na.from = undefined;\nmodule.exports = a;\n","import _g from \"./g\";\nimport easyqb from 'EasyQB';\nimport { SQW } from \"EasyQB/types/sq\";\nimport { NewExpression } from \"EasyQB/types/expression\";\nimport authFactory from \"./auth\";\nimport { POST_TYPES, DB_STATUS, Globals, EXECUTE_COUNT } from \"./types\";\n\ninterface IdbFactory {\n    db: (tableName?: string, userAssociatedRecordsOnly?: boolean) => SQW;\n    dbEventListener: (callback: (status?: DB_STATUS, queryType?: string, executeCount?: EXECUTE_COUNT, tableName?: string | null, returned?: any) => void) => () => void;\n    e: NewExpression;\n}\n\nexport default function dbFactory(globals?: Globals): IdbFactory {\n    const g = globals || _g;\n    const { tokenPost } = authFactory(g);\n    let _listenerIndex = 0;\n\n    const _listeners: Record<string, (status?: DB_STATUS, queryType?: string, executeCount?: EXECUTE_COUNT, tableName?: string | null, returned?: any) => void> = {};\n\n    function _runListeners(...params: any[]) {\n        for (const cb of Object.values(_listeners)) {\n            cb(...params)\n        }\n    }\n\n    const dbEventListener = (callback: (status?: DB_STATUS, queryType?: string, executeCount?: EXECUTE_COUNT, tableName?: string | null, returned?: any) => void): () => void => {\n        const currKey = '' + _listenerIndex++;\n        _listeners[currKey] = callback;\n        return () => {\n            delete _listeners[currKey]\n        }\n    }\n\n    const allCallback = async (trx: any, tableName: string, userAssociatedRecordsOnly?: boolean): Promise<Record<string, any>[] | number[]> => {\n        trx.count = \"all\";\n        trx.tableName = tableName;\n        if (userAssociatedRecordsOnly) trx.userAssociatedRecordsOnly = userAssociatedRecordsOnly;\n        _runListeners(DB_STATUS.PENDING, trx.type, EXECUTE_COUNT.ALL, tableName !== \"untable\" ? tableName : null);\n        try {\n            const res = await tokenPost(POST_TYPES.EASY_QB, trx);\n            if (res.success) {\n                _runListeners(DB_STATUS.SUCCESS, trx.type, EXECUTE_COUNT.ALL, tableName !== \"untable\" ? tableName : null, res.data);\n                return res.data;\n            } else {\n                _runListeners(DB_STATUS.ERROR, trx.type, EXECUTE_COUNT.ALL, tableName !== \"untable\" ? tableName : null);\n                return res;\n            }\n        } catch (error) {\n            console.warn(error)\n            _runListeners(DB_STATUS.ERROR, trx.type, EXECUTE_COUNT.ALL, tableName !== \"untable\" ? tableName : null);\n            return [];\n        }\n    }\n\n    const oneCallback = async (trx: any, tableName: string, userAssociatedRecordsOnly?: boolean): Promise<Record<string, any> | number> => {\n        trx.count = \"one\";\n        trx.tableName = tableName;\n        if (userAssociatedRecordsOnly) trx.userAssociatedRecordsOnly = userAssociatedRecordsOnly;\n        _runListeners(DB_STATUS.PENDING, trx.type, EXECUTE_COUNT.ONE, tableName !== \"untable\" ? tableName : null);\n        try {\n            const res = await tokenPost(POST_TYPES.EASY_QB, trx);\n            if (res.success) {\n                _runListeners(DB_STATUS.SUCCESS, trx.type, EXECUTE_COUNT.ONE, tableName !== \"untable\" ? tableName : null, res.data);\n                return res.data;\n            } else {\n                _runListeners(DB_STATUS.ERROR, trx.type, EXECUTE_COUNT.ONE, tableName !== \"untable\" ? tableName : null);\n                return res;\n            }\n        } catch (error) {\n            console.warn(error)\n            _runListeners(DB_STATUS.ERROR, trx.type, EXECUTE_COUNT.ONE, tableName !== \"untable\" ? tableName : null);\n            return {};\n        }\n    }\n\n    const db = (tableName?: string, userAssociatedRecordsOnly?: boolean) => {\n        if (tableName && typeof tableName === \"string\") {\n            return easyqb({ allCallback, oneCallback, userAssociatedRecordsOnly, tableName: tableName.toUpperCase() })(tableName.replace(/[^0-9a-zA-Z]/g, '_').toUpperCase());\n        } else {\n            return easyqb({ allCallback, oneCallback, userAssociatedRecordsOnly, tableName: \"untable\" })(\"untable\");\n        }\n    }\n    \n    return {\n        db,\n        dbEventListener,\n        e: easyqb().e\n    }\n}\n","import {\n    EasybaseProviderProps,\n    FrameConfiguration,\n    POST_TYPES,\n    FileFromURI,\n    ContextValue,\n    AddRecordOptions,\n    StatusResponse,\n    ConfigureFrameOptions,\n    UpdateRecordAttachmentOptions,\n    DeleteRecordOptions\n} from \"./types\";\nimport { gFactory } from \"./g\";\nimport deepEqual from \"fast-deep-equal\";\nimport { Observable } from \"./object-observer\";\nimport imageExtensions from \"./assets/image-extensions.json\";\nimport videoExtensions from \"./assets/video-extensions.json\";\nimport authFactory from \"./auth\";\nimport utilsFactory from \"./utils\";\nimport tableFactory from \"./table\";\nimport dbFactory from './db';\n\nexport default function EasybaseProvider({ ebconfig, options }: EasybaseProviderProps): ContextValue {\n\n    const g = gFactory();\n\n    const {\n        tokenPost,\n        tokenPostAttachment,\n        signUp,\n        setUserAttribute,\n        getUserAttributes,\n        isUserSignedIn,\n        signIn,\n        signOut,\n        resetUserPassword,\n        forgotPassword,\n        forgotPasswordConfirm\n    } = authFactory(g);\n\n    const {\n        Query,\n        fullTableSize,\n        tableTypes\n    } = tableFactory(g);\n\n    const {\n        db,\n        dbEventListener,\n        e\n    } = dbFactory(g);\n\n    const { log } = utilsFactory(g);\n\n    if (typeof ebconfig !== 'object' || ebconfig === null || ebconfig === undefined) {\n        console.error(\"No ebconfig object passed. do `import ebconfig from \\\"./ebconfig.js\\\"` and pass it to the Easybase provider\");\n        return;\n    } else if (!ebconfig.integration) {\n        console.error(\"Invalid ebconfig object passed. Download ebconfig.js from Easybase.io and try again.\");\n        return;\n    }\n\n    // eslint-disable-next-line dot-notation\n    const isIE = typeof document !== 'undefined' && !!document['documentMode'];\n\n    if (isIE) {\n        console.error(\"EASYBASE — easybasejs does not support Internet Explorer. Please use a different browser.\");\n    }\n\n    g.options = { ...options };\n    g.integrationID = ebconfig.integration;\n    g.ebconfig = ebconfig;\n    if (g.ebconfig.tt && g.ebconfig.integration.split(\"-\")[0].toUpperCase() !== \"PROJECT\") {\n        g.mounted = false;\n    } else {\n        g.mounted = true;\n    }\n    g.instance = \"Node\";\n\n    let _isFrameInitialized = true;\n    let _frameConfiguration: FrameConfiguration = {\n        offset: 0,\n        limit: 0\n    };\n    const _observedChangeStack: Record<string, any>[] = [];\n    let _recordIdMap: WeakMap<Record<string, any>, \"string\"> = new WeakMap();\n    let _observableFrame = {\n        observe: (_) => { },\n        unobserve: () => { }\n    }\n    let _frame: Record<string, any>[] = [];\n\n    let isSyncing = false;\n\n    function Frame(): Record<string, any>[];\n    function Frame(index: number): Record<string, any>;\n    function Frame(index?: number): Record<string, any>[] | Record<string, any> {\n        if (typeof index === \"number\") {\n            return _observableFrame[index];\n        } else {\n            return _observableFrame;\n        }\n    }\n\n    const _recordIDExists = (record: Record<string, any>): Boolean => !!_recordIdMap.get(record);\n\n    const configureFrame = (options: ConfigureFrameOptions): StatusResponse => {\n        _frameConfiguration = { ..._frameConfiguration };\n\n        if (options.limit !== undefined) _frameConfiguration.limit = options.limit;\n        if (options.offset !== undefined && options.offset >= 0) _frameConfiguration.offset = options.offset;\n        if (options.tableName !== undefined) _frameConfiguration.tableName = options.tableName;\n\n        _isFrameInitialized = false;\n        return {\n            message: \"Successfully configured frame. Run sync() for changes to be shown in frame\",\n            success: true\n        }\n    }\n\n    const currentConfiguration = (): FrameConfiguration => ({ ..._frameConfiguration });\n\n    const deleteRecord = async (options: DeleteRecordOptions): Promise<StatusResponse> => {\n        const _frameRecord = _frame.find(ele => deepEqual(ele, options.record));\n\n        if (_frameRecord && _recordIdMap.get(_frameRecord)) {\n            const res = await tokenPost(POST_TYPES.SYNC_DELETE, {\n                _id: _recordIdMap.get(_frameRecord),\n                tableName: options.tableName\n            });\n            return {\n                success: res.success,\n                message: res.data\n            }\n        } else {\n            try {\n                const res = await tokenPost(POST_TYPES.SYNC_DELETE, {\n                    record: options.record,\n                    tableName: options.tableName\n                });\n                return {\n                    success: res.success,\n                    message: res.data\n                }\n            } catch (error) {\n                console.error(\"Easybase Error: deleteRecord failed \", error);\n                return {\n                    success: false,\n                    message: \"Easybase Error: deleteRecord failed \" + error,\n                    errorCode: error.errorCode || undefined\n                }\n            }\n        }\n    }\n\n    const addRecord = async (options: AddRecordOptions): Promise<StatusResponse> => {\n        const defaultValues: AddRecordOptions = {\n            insertAtEnd: false,\n            newRecord: {},\n            tableName: undefined\n        }\n\n        const fullOptions: AddRecordOptions = { ...defaultValues, ...options };\n\n        try {\n            const res = await tokenPost(POST_TYPES.SYNC_INSERT, fullOptions);\n            return {\n                message: res.data,\n                success: res.success\n            }\n        } catch (error) {\n            console.error(\"Easybase Error: addRecord failed \", error);\n            return {\n                message: \"Easybase Error: addRecord failed \" + error,\n                success: false,\n                errorCode: error.errorCode || undefined\n            }\n        }\n    }\n\n    // Only allow the deletion of one element at a time\n    // First handle shifting of the array size. Then iterate\n    const sync = async (): Promise<StatusResponse> => {\n        const _realignFrames = (newData: Record<string, any>[]) => {\n            let isNewDataTheSame = true;\n\n            if (newData.length !== _frame.length) {\n                isNewDataTheSame = false;\n            } else {\n                for (let i = 0; i < newData.length; i++) {\n                    const newDataNoId = { ...newData[i] };\n                    delete newDataNoId._id;\n                    if (!deepEqual(newDataNoId, _frame[i])) {\n                        isNewDataTheSame = false;\n                        break;\n                    }\n                }\n            }\n\n            if (!isNewDataTheSame) {\n                const oldframe = [..._frame];\n                oldframe.length = newData.length;\n                _recordIdMap = new WeakMap();\n                for (let i = 0; i < newData.length; i++) {\n                    const currNewEle = newData[i];\n                    _recordIdMap.set(currNewEle, currNewEle._id);\n                    delete currNewEle._id;\n                    oldframe[i] = currNewEle;\n                }\n                _frame = oldframe;\n                _observableFrame.unobserve();\n                _observableFrame = Observable.from(_frame);\n\n                _observableFrame.observe((allChanges: any[]) => {\n                    allChanges.forEach((change: any) => {\n                        _observedChangeStack.push({\n                            type: change.type,\n                            path: change.path,\n                            value: change.value,\n                            _id: _recordIdMap.get(_frame[Number(change.path[0])])\n                            // Not bringing change.object or change.oldValue\n                        });\n                        log(JSON.stringify({\n                            type: change.type,\n                            path: change.path,\n                            value: change.value,\n                            _id: _recordIdMap.get(_frame[Number(change.path[0])])\n                            // Not bringing change.object or change.oldValue\n                        }))\n                    });\n                });\n            }\n        }\n\n        if (isSyncing) {\n            return {\n                success: false,\n                message: \"Easybase Error: the provider is currently syncing, use 'await sync()' before calling sync() again\"\n            };\n        }\n\n        isSyncing = true;\n\n        if (_isFrameInitialized) {\n            if (_observedChangeStack.length > 0) {\n                log(\"Stack change: \", _observedChangeStack);\n                const res = await tokenPost(POST_TYPES.SYNC_STACK, {\n                    stack: _observedChangeStack,\n                    ..._frameConfiguration\n                });\n                if (res.success) {\n                    _observedChangeStack.length = 0;\n                }\n            }\n        }\n\n        try {\n            const res = await tokenPost(POST_TYPES.GET_FRAME, _frameConfiguration);\n\n            // Check if the array recieved from db is the same as frame\n            // If not, update it and send useFrameEffect\n\n            if (res.success === false) {\n                console.error(res.data);\n                isSyncing = false;\n                return {\n                    success: false,\n                    message: \"\" + res.data\n                }\n            } else {\n                _isFrameInitialized = true;\n                _realignFrames(res.data);\n                isSyncing = false;\n                return {\n                    message: 'Success. Call frame for data',\n                    success: true\n                }\n            }\n        } catch (error) {\n            console.error(\"Easybase Error: get failed \", error);\n            isSyncing = false;\n            return {\n                success: false,\n                message: \"Easybase Error: get failed \" + error,\n                errorCode: error.errorCode || undefined\n            }\n        }\n    }\n\n    const updateRecordImage = async (options: UpdateRecordAttachmentOptions): Promise<StatusResponse> => {\n        const res = await _updateRecordAttachment(options, \"image\");\n        return res;\n    }\n    const updateRecordVideo = async (options: UpdateRecordAttachmentOptions): Promise<StatusResponse> => {\n        const res = await _updateRecordAttachment(options, \"video\");\n        return res;\n    }\n    const updateRecordFile = async (options: UpdateRecordAttachmentOptions): Promise<StatusResponse> => {\n        const res = await _updateRecordAttachment(options, \"file\");\n        return res;\n    }\n\n    const _updateRecordAttachment = async (options: UpdateRecordAttachmentOptions, type: string): Promise<StatusResponse> => {\n        const _frameRecord: Record<string, any> | undefined = _frame.find(ele => deepEqual(ele, options.record));\n\n        if (_frameRecord === undefined || !_recordIDExists(_frameRecord)) {\n            log(\"Attempting to add attachment to a new record that has not been synced. Please sync() before trying to add attachment.\");\n            return {\n                success: false,\n                message: \"Attempting to add attachment to a new record that has not been synced. Please sync() before trying to add attachment.\"\n            }\n        }\n\n        const ext: string = options.attachment.name.split(\".\").pop()!.toLowerCase();\n\n        log(ext);\n\n        if (type === \"image\" && !imageExtensions.includes(ext)) {\n            return {\n                success: false,\n                message: \"Image files must have a proper image extension in the file name\"\n            };\n        }\n\n        if (type === \"video\" && !videoExtensions.includes(ext)) {\n            return {\n                success: false,\n                message: \"Video files must have a proper video extension in the file name\"\n            };\n        }\n\n        function isFileFromURI(f: File | FileFromURI): f is FileFromURI {\n            return (f as FileFromURI).uri !== undefined;\n        }\n\n        const formData = new FormData();\n\n        if (isFileFromURI(options.attachment)) {\n            formData.append(\"file\", options.attachment as any);\n            formData.append(\"name\", options.attachment.name);\n        } else {\n            formData.append(\"file\", options.attachment);\n            formData.append(\"name\", options.attachment.name);\n        }\n\n        const customHeaders = {\n            'Eb-upload-type': type,\n            'Eb-column-name': options.columnName,\n            'Eb-record-id': _recordIdMap.get(_frameRecord),\n            'Eb-table-name': options.tableName\n        }\n\n        const res = await tokenPostAttachment(formData, customHeaders);\n\n        await sync();\n\n        return {\n            message: res.data,\n            success: res.success\n        };\n    }\n\n    const c: ContextValue = {\n        /** +++ Will be deprecated */\n        configureFrame,\n        addRecord,\n        deleteRecord,\n        sync,\n        Frame,\n        currentConfiguration,\n        /** --- */\n        updateRecordImage,\n        updateRecordVideo,\n        updateRecordFile,\n        fullTableSize,\n        tableTypes,\n        Query,\n        isUserSignedIn,\n        signIn,\n        signOut,\n        signUp,\n        resetUserPassword,\n        setUserAttribute,\n        getUserAttributes,\n        db,\n        dbEventListener,\n        e,\n        forgotPassword,\n        forgotPasswordConfirm\n    }\n\n    return c;\n}\n","import fetch from 'cross-fetch';\n\nexport { default as EasybaseProvider } from \"./EasybaseProvider/EasybaseProvider\";\n\nconst generateBareUrl = (type, integrationID) => `https://api.easybase.io/${type}/${integrationID}`;\nconst isBadInt = (my_int) => my_int !== undefined && my_int !== null && Math.floor(my_int) !== my_int;\nconst isBadString = (my_string) => my_string !== undefined && my_string !== null && typeof my_string !== \"string\";\nconst isBadIntegrationID = (my_string) => my_string === undefined || my_string === null || typeof my_string !== \"string\";\nconst isBadObject = (my_obj) => my_obj !== undefined && my_obj !== null && typeof my_obj !== \"object\";\nconst isBadBool = (my_bool) => my_bool !== undefined && my_bool !== null && typeof my_bool !== \"boolean\";\n\ninterface GetOptions {\n    /** EasyBase integration ID. Can be found by expanding the integration menu. This id is automatically generated.  */\n    integrationID: string;\n    /** Edit starting index from which records will be retrieved from. Useful for paging. */\n    offset?: number;\n    /** Limit the amount of records to be retrieved. Can be used in combination with offset. */\n    limit?: number;\n    /** Custom authentication string. Can be set in integration menu. If it is set, it is required to access integration. This acts as an extra layer of security and extensibility. */\n    authentication?: string;\n    /** This object can be set to overwrite the query values as set in the integration menu. If your query is setup to find records where 'age' >= 0, passing in { age: 50 } will query where 'age' >= 50. */\n    customQuery?: Record<string, unknown>;\n}\n\n/**\n * \n * @param {GetOptions} options GetOptions.\n * @returns {Promise<Array>} Array of records.\n * \n */\nexport function get(options: GetOptions): Promise<Array<Record<string, unknown>>> {\n\n    const defaultOptions: GetOptions = {\n        integrationID: \"\",\n        offset: undefined,\n        limit: undefined,\n        authentication: undefined,\n        customQuery: undefined\n    }\n    const { integrationID, offset, limit, authentication, customQuery } = { ...defaultOptions, ...options };\n\n    if (isBadIntegrationID(integrationID)) throw new Error(\"integrationID is required and must be a string\");\n    if (isBadInt(offset)) throw new Error(\"offset must be an integer\");\n    if (isBadInt(limit)) throw new Error(\"limit must be an integer\");\n    if (isBadString(authentication)) throw new Error(\"authentication must be a string or null\");\n    if (isBadObject(customQuery)) throw new Error(\"customQuery must be an object or null\");\n\n    return new Promise((resolve, reject) => {\n        try {\n            let fetch_body: any = {};\n            if (typeof customQuery === \"object\") fetch_body = { ...customQuery };\n            if (offset !== undefined) fetch_body.offset = offset;\n            if (limit !== undefined) fetch_body.limit = limit;\n            if (authentication !== undefined) fetch_body.authentication = authentication;\n\n            fetch(generateBareUrl('get', integrationID), {\n                method: \"POST\",\n                body: JSON.stringify(fetch_body),\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                }\n            })\n                .then(res => res.json())\n                .then(resData => {\n                    if ({}.hasOwnProperty.call(resData, 'ErrorCode')) {\n                        console.error(resData.message);\n                        resolve([resData.message]);\n                    } else resolve(resData);\n                });\n        }\n        catch (err) { reject(err); }\n    });\n}\n\n\n\ninterface PostOptions {\n    /** EasyBase integration ID. Can be found by expanding the integration menu. This id is automatically generated.  */\n    integrationID: string;\n    /** Values to post to EasyBase collection. Format is { column name: value } */\n    newRecord: Record<string, unknown>;\n    /** Custom authentication string. Can be set in integration menu. If it is set, it is required to access integration. This acts as an extra layer of security and extensibility. */\n    authentication?: string;\n    /** If true, record will be inserted at the end of the collection rather than the front. */\n    insertAtEnd?: boolean;\n}\n\n/**\n * \n * @param {PostOptions} options PostOptions\n * @returns {Promise<String>} Post status.\n * \n */\nexport function post(options: PostOptions): Promise<string> {\n\n    const defaultValues: PostOptions = {\n        integrationID: \"\",\n        newRecord: undefined,\n        authentication: undefined,\n        insertAtEnd: undefined\n    }\n\n    const { integrationID, newRecord, authentication, insertAtEnd } = { ...defaultValues, ...options };\n\n    if (isBadIntegrationID(integrationID)) throw new Error(\"integrationID is required and must be a string\");\n    if (isBadObject(newRecord)) throw new Error(\"newRecord is required and must be a string\");\n    if (isBadString(authentication)) throw new Error(\"authentication must be a string or null\");\n    if (isBadBool(insertAtEnd)) throw new Error(\"insertAtEnd must be a boolean or null\");\n\n    return new Promise((resolve, reject) => {\n        try {\n            const fetch_body: any = { ...newRecord };\n            if (authentication !== undefined) fetch_body.authentication = authentication;\n            if (insertAtEnd !== undefined) fetch_body.insertAtEnd = insertAtEnd;\n\n            fetch(generateBareUrl('post', integrationID), {\n                method: \"POST\",\n                body: JSON.stringify(fetch_body),\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                }\n            })\n                .then(res => res.json())\n                .then(resData => {\n                    if ({}.hasOwnProperty.call(resData, 'ErrorCode')) console.error(resData.message);\n                    resolve(resData);\n                });\n        }\n        catch (err) { reject(err); }\n    });\n}\n\n\ninterface UpdateOptions {\n    /** EasyBase integration ID. Can be found by expanding the integration menu. This id is automatically generated.  */\n    integrationID: string;\n    /** Values to update records with. Format is { column_name: new value } */\n    updateValues: Record<string, unknown>;\n    /** Custom authentication string. Can be set in integration menu. If it is set, it is required to access integration. This acts as an extra layer of security and extensibility. */\n    authentication?: string;\n    /** This object can be set to overwrite the query values as set in the integration menu. If your query is setup to find records where 'age' >= 0, passing in { age: 50 } will query where 'age' >= 50. */\n    customQuery?: Record<string, unknown>;\n}\n\n/**\n * \n * @param {UpdateOptions} options UpdateOptions\n * @returns {Promise<String>} Update status.\n */\nexport function update(options: UpdateOptions): Promise<string> {\n    const defaultValues: UpdateOptions = {\n        integrationID: \"\",\n        updateValues: undefined,\n        authentication: undefined,\n        customQuery: undefined\n    }\n\n    const { integrationID, updateValues, authentication, customQuery } = { ...defaultValues, ...options };\n\n    if (isBadIntegrationID(integrationID)) throw new Error(\"integrationID is required and must be a string\");\n    if (isBadObject(updateValues) || updateValues === undefined) throw new Error(\"updateValues is required and must be a string\");\n    if (isBadString(authentication)) throw new Error(\"authentication must be a string or null\");\n    if (isBadObject(customQuery)) throw new Error(\"customQuery must be an object or null\");\n\n    return new Promise((resolve, reject) => {\n        try {\n            const fetch_body: any = { updateValues, ...customQuery };\n            if (authentication !== undefined) fetch_body.authentication = authentication;\n\n            fetch(generateBareUrl('update', integrationID), {\n                method: \"POST\",\n                body: JSON.stringify(fetch_body),\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                }\n            })\n                .then(res => res.json())\n                .then(resData => {\n                    if ({}.hasOwnProperty.call(resData, 'ErrorCode')) console.error(resData.message);\n                    resolve(resData.message);\n                });\n        }\n        catch (err) { reject(err); }\n    });\n}\n\ninterface DeleteOptions {\n    /** EasyBase integration ID. Can be found by expanding the integration menu. This id is automatically generated.  */\n    integrationID: string;\n    /** Custom authentication string. Can be set in integration menu. If it is set, it is required to access integration. This acts as an extra layer of security and extensibility. */\n    authentication?: string;\n    /** This object can be set to overwrite the query values as set in the integration menu. If your query is setup to find records where 'age' >= 0, passing in { age: 50 } will query where 'age' >= 50. */\n    customQuery?: Record<string, unknown>;\n}\n\n\n/**\n * \n * @param {DeleteOptions} options DeleteOptions\n * @return {Promise<String>} Delete status.\n */\nexport function Delete(options: DeleteOptions): Promise<string> {\n\n    const defaultValues: DeleteOptions = {\n        integrationID: \"\",\n        authentication: undefined,\n        customQuery: undefined\n    }\n\n    const { integrationID, authentication, customQuery } = { ...defaultValues, ...options };\n\n    if (isBadIntegrationID(integrationID)) throw new Error(\"integrationID is required and must be a string\");\n    if (isBadString(authentication)) throw new Error(\"authentication must be a string or null\");\n    if (isBadObject(customQuery)) throw new Error(\"customQuery must be an object or null\");\n\n    return new Promise((resolve, reject) => {\n        try {\n            const fetch_body: any = { ...customQuery };\n            if (authentication !== undefined) fetch_body.authentication = authentication;\n\n            fetch(generateBareUrl('delete', integrationID), {\n                method: \"POST\",\n                body: JSON.stringify(fetch_body),\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                }\n            })\n                .then(res => res.json())\n                .then(resData => {\n                    if ({}.hasOwnProperty.call(resData, 'ErrorCode')) console.error(resData.message);\n                    resolve(resData.message);\n                });\n        }\n        catch (err) { reject(err); }\n    });\n}\n\n/**\n * @async\n * Call a cloud function, created in Easybase interface.\n * @param {string} route Route as detailed in Easybase. Found under 'Deploy'. Will be in the form of ####...####-function-name.\n * @param {Record<string, any>} postBody Optional object to pass as the body of the POST request. This object will available in your cloud function's event.body.\n * @return {Promise<string>} Response from your cloud function. Detailed with a call to 'return context.succeed(\"RESPONSE\")'.\n */\nexport async function callFunction(route: string, postBody?: Record<string, any>): Promise<string> {\n\n    const res = await fetch(generateBareUrl('function', route.split(\"/\").pop()), {\n        method: \"POST\",\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(postBody) || \"\"\n    });\n\n    const rawDataText = await res.text();\n    return rawDataText;\n}"],"names":["POST_TYPES","DB_STATUS","EXECUTE_COUNT","GlobalNamespace","_g","gFactory","INSERT","UPDATE","DELETE","REVERSE","SHUFFLE","oMetaKey","Symbol","validObservableOptionKeys","async","validObserverOptionKeys","path","pathsOf","pathsFrom","processObserveOptions","options","result","undefined","Error","split","filter","n","invalidOptions","Object","keys","option","hasOwnProperty","length","join","observe","observer","oMeta","observers","some","o","opts","push","console","warn","unobserve","ol","al","arguments","i","splice","propertiesBluePrint","value","prepareObject","source","target","defineProperties","key","getObservedOf","prepareArray","l","Array","prepareTypedArray","filterChanges","changes","oPath","change","oPathsOf","type","oPathsFrom","startsWith","callObserverSafe","listener","e","error","callObserversFromMT","batches","callObservers","currentObservable","relevantChanges","newPath","tmp","queueMicrotask","bind","rb","find","b","prototype","apply","tmpa","parent","ownKey","oldValue","object","item","isArray","ArrayOMeta","proxy","ArrayBuffer","isView","TypedArrayOMeta","Date","ObjectOMeta","proxiedPop","poppedIndex","popResult","pop","tmpObserved","detach","proxiedPush","pushContent","initialLength","pushResult","Reflect","proxiedShift","shiftResult","shift","proxiedUnshift","unshiftContent","unshiftResult","unshift","proxiedReverse","reverse","proxiedSort","comparator","sort","proxiedFill","filVal","start","end","tarLen","prev","slice","Math","max","min","fill","tmpTarget","proxiedCopyWithin","dest","len","copyWithin","nItem","oItem","proxiedSplice","splLen","spliceContent","startIndex","removed","inserted","spliceResult","newTarLen","index","proxiedTypedArraySet","offset","souLen","set","proxiedArrayMethods","proxiedTypedArrayMethods","OMetaBase","properties","cloningFunction","targetClone","revocable","Proxy","processOptions","assign","newValue","deleteProperty","get","Observable","from","isObservable","input","freeze","utilsFactory","globals","g","generateBareUrl","integrationID","generateAuthBody","stamp","now","token","token_time","session","log","logging","authFactory","_clearTokens","refreshToken","newTokenCallback","getUserAttributes","tokenPost","USER_ATTRIBUTES","attrsRes","data","setUserAttribute","SET_ATTRIBUTE","setAttrsRes","success","message","JSON","stringify","errorCode","forgotPassword","username","emailTemplate","FORGOT_PASSWORD_SEND","forgotPasswordConfirm","code","newPassword","FORGOT_PASSWORD_CONFIRM","signUp","newUserID","password","userAttributes","SIGN_UP","signUpRes","signIn","userID","t1","floor","random","integrationType","ebconfig","integration","toUpperCase","fetch","method","headers","HANDSHAKE","body","version","instance","res","json","resData","mounted","VALID_TOKEN","validTokenRes","elapsed","ErrorCode","resetUserPassword","RESET_PASSWORD","isUserSignedIn","signOut","initAuth","tt","postType","_auth","call","REQUEST_TOKEN","req_res","err","tokenPostAttachment","formData","customHeaders","regularAuthbody","attachmentAuth","UPLOAD_ATTACHMENT","tableFactory","tableTypes","tableName","COLUMN_TYPES","fullTableSize","TABLE_SIZE","Query","defaultOptions","queryName","fullOptions","GET_QUERY","createNewContext","isTaggedTemplate","buildTaggedTemplate","require$$0","buildUtils","changeCase","taggedTemplate","normalKey","compile","createExpressionCompiler","createChain","builderProperties","methodProperties","memoize","createExpressionBuilder","createQueryBuilder","mapJoin","isObject","buildCall","objectMapJoin","valuesArray","buildArg","buildObject","buildProperty","fromItems","mapJoinWrap","calls","limitOffset","require$$1","require$$2","require$$3","require$$4","require$$5","require$$6","require$$7","require$$8","require$$9","require$$10","require$$11","require$$12","require$$13","require$$14","select","where","group","having","setop","order","limit","returning","insert","update","query","queries","methods","clauses","common","expressions","wth","del","using","build","unaryPre","unaryPost","unaryFunction","binary","ternary","nary","naryFunction","oneValue","compositeValue","membership","quantifiedComparison","dateBinary","parameterize","escape","core","dialect","dbFactory","_listenerIndex","_listeners","_runListeners","values","cb","dbEventListener","callback","currKey","allCallback","trx","userAssociatedRecordsOnly","count","PENDING","ALL","EASY_QB","SUCCESS","ERROR","oneCallback","ONE","db","easyqb","replace","EasybaseProvider","isIE","document","_isFrameInitialized","_frameConfiguration","_observedChangeStack","_recordIdMap","WeakMap","_observableFrame","_","_frame","isSyncing","Frame","_recordIDExists","record","configureFrame","currentConfiguration","deleteRecord","_frameRecord","ele","deepEqual","SYNC_DELETE","_id","addRecord","defaultValues","insertAtEnd","newRecord","SYNC_INSERT","sync","GET_FRAME","_realignFrames","newData","isNewDataTheSame","newDataNoId","oldframe","currNewEle","allChanges","forEach","Number","SYNC_STACK","stack","updateRecordImage","_updateRecordAttachment","updateRecordVideo","updateRecordFile","isFileFromURI","f","uri","ext","attachment","name","toLowerCase","imageExtensions","includes","videoExtensions","FormData","append","columnName","c","callFunction","route","postBody","text","isBadInt","my_int","isBadString","my_string","isBadIntegrationID","isBadObject","my_obj","isBadBool","my_bool","authentication","customQuery","Promise","resolve","reject","fetch_body","then","post","updateValues","Delete"],"mappings":"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"}