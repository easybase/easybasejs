{"version":3,"file":"index.modern.js","sources":["../src/EasybaseProvider/types.ts","../src/EasybaseProvider/g.ts","../src/EasybaseProvider/object-observer.js","../src/EasybaseProvider/utils.ts","../src/EasybaseProvider/auth.ts","../src/EasybaseProvider/EasybaseProvider.ts","../src/index.ts"],"sourcesContent":["export interface ConfigureFrameOptions {\n    /** Edit starting index from which records will be retrieved from. Useful for paging. */\n    offset?: number;\n    /** Limit the amount of records to be retrieved. Set to -1 or null to return all records. Can be used in combination with offset. */\n    limit?: number | null;\n}\n\nexport interface EasybaseProviderPropsOptions {\n    /** Custom authentication string. Can be set in integration menu. If it is set, it is required to access integration. This acts as an extra layer of security and extensibility. */\n    authentication?: string;\n    /** Log Easybase react status and events to console. */\n    logging?: boolean;\n}\n\nexport interface EasybaseProviderProps {\n    /** EasyBase ebconfig object. Can be downloaded in the integration drawer next to 'React Token'. This is automatically generated.  */\n    ebconfig: Ebconfig;\n    /** Optional configuration parameters. */\n    options?: EasybaseProviderPropsOptions\n}\n\nexport interface FrameConfiguration {\n    /** Edit starting index from which records will be retrieved from. Useful for paging. */\n    offset: number;\n    /** Limit the amount of records to be retrieved. Set to -1 or null to return all records. Can be used in combination with offset. */\n    limit: number | null;\n}\n\nexport interface Ebconfig {\n    tt: string,\n    integration: string,\n    version: string\n}\n\nexport interface AddRecordOptions {\n    /** If true, record will be inserted at the end of the collection rather than the front. Overwrites absoluteIndex. */\n    insertAtEnd?: boolean;\n    /** Values to post to EasyBase collection. Format is { column name: value } */\n    newRecord: Record<string, any>;\n}\n\nexport interface QueryOptions {\n    /** Name of the query saved in Easybase's Visual Query Builder */\n    queryName: string;\n    /** If you would like to sort the order of your query by a column. Pass the name of that column here */\n    sortBy?: string;\n    /** By default, columnToSortBy will sort your query by ascending value (1, 2, 3...). To sort by descending set this to true */\n    descending?: boolean;\n    /** Edit starting index from which records will be retrieved from. Useful for paging. */\n    offset?: number;\n    /** Limit the amount of records to be retrieved. Can be used in combination with offset. */\n    limit?: number;\n    /** This object can be set to overwrite the query values as set in the integration menu. If your query is setup to find records where 'age' >= 0, passing in { age: 50 } will query where 'age' >= 50. Read more: https://easybase.io/about/2020/09/15/Customizing-query-values/ */\n    customQuery?: Record<string, any>;\n}\n\nexport interface FileFromURI {\n    /** Path on local device to the attachment. Usually received from react-native-image-picker or react-native-document-picker */\n    uri: string,\n    /** Name of the file with proper extension */\n    name: string,\n    /** File MIME type */\n    type: string\n}\n\nexport interface UpdateRecordAttachmentOptions {\n    /** EasyBase Record to attach this attachment to */\n    record: Record<string, any>;\n    /** The name of the column that is of type file/image/video */\n    columnName: string;\n    /** Either an HTML File element containing the correct type of attachment or a FileFromURI object for React Native instances.\n     * For React Native use libraries such as react-native-image-picker and react-native-document-picker.\n     * The file name must have a proper file extension corresponding to the attachment. \n     */\n    attachment: File | FileFromURI;\n}\n\nexport interface StatusResponse {\n    /** Returns true if the operation was successful */\n    success: boolean;\n    /** Readable description of the the operation's status */\n    message: string;\n    /** Will represent a corresponding error if an error was thrown during the operation. */\n    error?: Error;\n}\n\nexport enum POST_TYPES {\n    UPLOAD_ATTACHMENT = \"upload_attachment\",\n    HANDSHAKE = \"handshake\",\n    VALID_TOKEN = \"valid_token\",\n    GET_FRAME = \"get_frame\",\n    TABLE_SIZE = \"table_size\",\n    COLUMN_TYPES = \"column_types\",\n    SYNC_STACK = \"sync_stack\",\n    SYNC_DELETE = \"sync_delete\",\n    SYNC_INSERT = \"sync_insert\",\n    GET_QUERY = \"get_query\"\n}\n\nexport interface AuthPostResponse {\n    success: boolean;\n    data: any;\n}\n\nexport interface ContextValue {\n    /**\n     * Configure the current frame size. Set the offset and amount of records to retreive assume you don't want to receive\n     * your entire collection. This is useful for paging.\n     * @abstract\n     * @param {ConfigureFrameOptions} options ConfigureFrameOptions\n     * @return {StatusResponse} StatusResponse\n     */\n    configureFrame(options: ConfigureFrameOptions): StatusResponse;\n    /**\n     * Manually add a record to your collection regardless of your current frame. You must call sync() after this to see updated response.\n     * @abstract\n     * @async\n     * @param {AddRecordOptions} options AddRecordOptions\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    addRecord(options: AddRecordOptions): Promise<StatusResponse>;\n    /**\n     * Manually delete a record from your collection regardless of your current frame. You must call sync() after this to see updated response.\n     * @abstract\n     * @async\n     * @param {Record<string, any>} record Individual Record from frame\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    deleteRecord(record: Record<string, any>): Promise<StatusResponse>;\n    /**\n     * Call this method to syncronize your current changes with your database. Delections, additions, and changes will all be reflected by your \n     * backend after calling this method. Call Frame() after this to get a normalized array of the freshest data.\n     * @abstract\n     * @async\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    sync(): Promise<StatusResponse>;\n    /**\n     * Upload an image to your backend and attach it to a specific record. columnName must reference a column of type 'image'.\n     * The file must have an extension of an image. \n     * Call sync() for fresh data with propery attachment links to cloud hosting.\n     * @abstract\n     * @async\n     * @param {UpdateRecordAttachmentOptions} options UpdateRecordAttachmentOptions\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    updateRecordImage(options: UpdateRecordAttachmentOptions): Promise<StatusResponse>;\n    /**\n     * Upload a video to your backend and attach it to a specific record. columnName must reference a column of type 'video'. \n     * The file must have an extension of a video.\n     * Call sync() for fresh data with propery attachment links to cloud hosting.\n     * @abstract\n     * @async\n     * @param {UpdateRecordAttachmentOptions} options UpdateRecordAttachmentOptions\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    updateRecordVideo(options: UpdateRecordAttachmentOptions): Promise<StatusResponse>;\n    /**\n     * Upload a file to your backend and attach it to a specific record. columnName must reference a column of type 'file'. \n     * Call sync() for fresh data with propery attachment links to cloud hosting.\n     * @abstract\n     * @async\n     * @param {UpdateRecordAttachmentOptions} options UpdateRecordAttachmentOptions\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    updateRecordFile(options: UpdateRecordAttachmentOptions): Promise<StatusResponse>;\n    /**\n     * This function is how you access your current frame. This function does not get new data or push changes to EasyBase. If you \n     * want to syncronize your frame and EasyBase, call sync() then Frame().\n     * @abstract\n     * @return {Record<string, any>[]} Array of records corresponding to the current frame. Call sync() to push changes that you have made to this array.\n     * \n     */\n    Frame(): Record<string, any>[];\n    /**\n     * This function is how you access a single object your current frame. This function does not get new data or push changes to EasyBase. If you \n     * want to syncronize your frame and EasyBase, call sync() then Frame().\n     * @abstract\n     * @param {number} [index] Passing an index will only return the object at that index in your Frame, rather than the entire array. This is useful for editing single objects based on an index.\n     * @return {Record<string, any>} Single record corresponding to that object within the current frame. Call sync() to push changes that you have made to this object.\n     * \n     */\n    Frame(index: number): Record<string, any>;\n    /**\n     * Gets the number of records in your table.\n     * @async\n     * @returns {Promise<number>} The the number of records in your table.\n     */\n    fullTableSize(): Promise<number>;\n    /**\n     * @async\n     * Retrieve an object detailing the columns in your table mapped to their corresponding type.\n     * @returns {Promise<Record<string, any>>} Object detailing the columns in your table mapped to their corresponding type.\n     */\n    tableTypes(): Promise<Record<string, any>>;\n    /**\n     * View your frames current configuration\n     * @returns {Record<string, any>} Object contains the `offset` and `length` of your current frame.\n     */\n    currentConfiguration(): FrameConfiguration;\n    /**\n     * @async\n     * View a query by name. This returns an isolated array that has no effect on your frame or frame configuration. sync() and Frame() have no \n     * relationship with a Query(). An edited Query cannot be synced with your database, use Frame() for realtime \n     * database array features.\n     * @param {QueryOptions} options QueryOptions\n     * @return {Promise<Record<string, any>[]>} Isolated array of records in the same form as Frame(). Editing this array has no effect and cannot be synced with your database. Use Frame() for realtime database features.\n     */\n    Query(options: QueryOptions): Promise<Record<string, any>[]>;\n}\n\nexport interface Globals {\n    ebconfig: Ebconfig;\n    token: {};\n    integrationID: string;\n    session: number;\n    options: EasybaseProviderPropsOptions;\n}\n","import { Ebconfig, EasybaseProviderPropsOptions, Globals } from \"./types\";\n\nnamespace GlobalNamespace {\n    export let ebconfig: Ebconfig;\n    export let token: {};\n    export let integrationID: string;\n    export let session: number;\n    export let options: EasybaseProviderPropsOptions;\n    export let isReactNative: boolean;\n};\n\nconst _g: Globals = { ...GlobalNamespace };\n\nexport default _g;\n \nexport function gFactory(): Globals {\n    return { ...GlobalNamespace } as Globals;\n}\n","const\n\tINSERT = 'insert',\n\tUPDATE = 'update',\n\tDELETE = 'delete',\n\tREVERSE = 'reverse',\n\tSHUFFLE = 'shuffle',\n\toMetaKey = Symbol('observable-meta-key'),\n\tvalidObservableOptionKeys = { async: 1 },\n\tvalidObserverOptionKeys = { path: 1, pathsOf: 1, pathsFrom: 1 },\n\tprocessObserveOptions = function processObserveOptions(options) {\n\t\tconst result = {};\n\t\tif (options.path !== undefined) {\n\t\t\tif (typeof options.path !== 'string' || options.path === '') {\n\t\t\t\tthrow new Error('\"path\" option, if/when provided, MUST be a non-empty string');\n\t\t\t}\n\t\t\tresult.path = options.path;\n\t\t}\n\t\tif (options.pathsOf !== undefined) {\n\t\t\tif (options.path) {\n\t\t\t\tthrow new Error('\"pathsOf\" option MAY NOT be specified together with \"path\" option');\n\t\t\t}\n\t\t\tif (typeof options.pathsOf !== 'string') {\n\t\t\t\tthrow new Error('\"pathsOf\" option, if/when provided, MUST be a string (MAY be empty)');\n\t\t\t}\n\t\t\tresult.pathsOf = options.pathsOf.split('.').filter(n => n);\n\t\t}\n\t\tif (options.pathsFrom !== undefined) {\n\t\t\tif (options.path || options.pathsOf) {\n\t\t\t\tthrow new Error('\"pathsFrom\" option MAY NOT be specified together with \"path\"/\"pathsOf\"  option/s');\n\t\t\t}\n\t\t\tif (typeof options.pathsFrom !== 'string' || options.pathsFrom === '') {\n\t\t\t\tthrow new Error('\"pathsFrom\" option, if/when provided, MUST be a non-empty string');\n\t\t\t}\n\t\t\tresult.pathsFrom = options.pathsFrom;\n\t\t}\n\t\tconst invalidOptions = Object.keys(options).filter(option => !validObserverOptionKeys.hasOwnProperty(option));\n\t\tif (invalidOptions.length) {\n\t\t\tthrow new Error(`'${invalidOptions.join(', ')}' is/are not a valid observer option/s`);\n\t\t}\n\t\treturn result;\n\t},\n\tobserve = function observe(observer, options) {\n\t\tif (typeof observer !== 'function') {\n\t\t\tthrow new Error(`observer MUST be a function, got '${observer}'`);\n\t\t}\n\n\t\tconst\n\t\t\toMeta = this[oMetaKey],\n\t\t\tobservers = oMeta.observers;\n\t\tif (!observers.some(o => o[0] === observer)) {\n\t\t\tlet opts;\n\t\t\tif (options) {\n\t\t\t\topts = processObserveOptions(options);\n\t\t\t} else {\n\t\t\t\topts = {};\n\t\t\t}\n\t\t\tobservers.push([observer, opts]);\n\t\t} else {\n\t\t\tconsole.warn('observer may be bound to an observable only once; will NOT rebind');\n\t\t}\n\t},\n\tunobserve = function unobserve() {\n\t\tconst oMeta = this[oMetaKey];\n\t\tconst observers = oMeta.observers;\n\t\tlet ol = observers.length;\n\t\tif (ol) {\n\t\t\tlet al = arguments.length;\n\t\t\tif (al) {\n\t\t\t\twhile (al--) {\n\t\t\t\t\tlet i = ol;\n\t\t\t\t\twhile (i--) {\n\t\t\t\t\t\tif (observers[i][0] === arguments[al]) {\n\t\t\t\t\t\t\tobservers.splice(i, 1);\n\t\t\t\t\t\t\tol--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tobservers.splice(0);\n\t\t\t}\n\t\t}\n\t},\n\tpropertiesBluePrint = { [oMetaKey]: { value: null }, observe: { value: observe }, unobserve: { value: unobserve } },\n\tprepareObject = function prepareObject(source, oMeta) {\n\t\tpropertiesBluePrint[oMetaKey].value = oMeta;\n\t\tconst target = Object.defineProperties({}, propertiesBluePrint);\n\t\tfor (const key of Object.keys(source)) {\n\t\t\ttarget[key] = getObservedOf(source[key], key, oMeta);\n\t\t}\n\t\treturn target;\n\t},\n\tprepareArray = function prepareArray(source, oMeta) {\n\t\tlet i = 0, l = source.length;\n\t\tpropertiesBluePrint[oMetaKey].value = oMeta;\n\t\tconst target = Object.defineProperties(new Array(l), propertiesBluePrint);\n\t\tfor (; i < l; i++) {\n\t\t\ttarget[i] = getObservedOf(source[i], i, oMeta);\n\t\t}\n\t\treturn target;\n\t},\n\tprepareTypedArray = function prepareTypedArray(source, oMeta) {\n\t\tpropertiesBluePrint[oMetaKey].value = oMeta;\n\t\tObject.defineProperties(source, propertiesBluePrint);\n\t\treturn source;\n\t},\n\tfilterChanges = function filterChanges(options, changes) {\n\t\tlet result = changes;\n\t\tif (options.path) {\n\t\t\tconst oPath = options.path;\n\t\t\tresult = changes.filter(change =>\n\t\t\t\tchange.path.join('.') === oPath\n\t\t\t);\n\t\t} else if (options.pathsOf) {\n\t\t\tconst oPathsOf = options.pathsOf;\n\t\t\tresult = changes.filter(change =>\n\t\t\t\tchange.path.length === oPathsOf.length + 1 ||\n\t\t\t\t(change.path.length === oPathsOf.length && (change.type === REVERSE || change.type === SHUFFLE))\n\t\t\t);\n\t\t} else if (options.pathsFrom) {\n\t\t\tconst oPathsFrom = options.pathsFrom;\n\t\t\tresult = changes.filter(change =>\n\t\t\t\tchange.path.join('.').startsWith(oPathsFrom)\n\t\t\t);\n\t\t}\n\t\treturn result;\n\t},\n\tcallObserverSafe = function callObserverSafe(listener, changes) {\n\t\ttry {\n\t\t\tlistener(changes);\n\t\t} catch (e) {\n\t\t\tconsole.error(`failed to notify listener ${listener} with ${changes}`, e);\n\t\t}\n\t},\n\tcallObserversFromMT = function callObserversFromMT() {\n\t\tconst batches = this.batches;\n\t\tthis.batches = null;\n\t\tfor (const [listener, options] of batches) {\n\t\t\tcallObserverSafe(listener, options);\n\t\t}\n\t},\n\tcallObservers = function callObservers(oMeta, changes) {\n\t\tlet currentObservable = oMeta;\n\t\tlet observers, target, options, relevantChanges, i, newPath, tmp;\n\t\tconst l = changes.length;\n\t\tdo {\n\t\t\tobservers = currentObservable.observers;\n\t\t\ti = observers.length;\n\t\t\twhile (i--) {\n\t\t\t\t[target, options] = observers[i];\n\t\t\t\trelevantChanges = filterChanges(options, changes);\n\n\t\t\t\tif (relevantChanges.length) {\n\t\t\t\t\tif (currentObservable.options.async) {\n\t\t\t\t\t\t//\tthis is the async dispatch handling\n\t\t\t\t\t\tif (!currentObservable.batches) {\n\t\t\t\t\t\t\tcurrentObservable.batches = [];\n\t\t\t\t\t\t\tqueueMicrotask(callObserversFromMT.bind(currentObservable));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet rb = currentObservable.batches.find(b => b[0] === target);\n\t\t\t\t\t\tif (!rb) {\n\t\t\t\t\t\t\trb = [target, []];\n\t\t\t\t\t\t\tcurrentObservable.batches.push(rb);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tArray.prototype.push.apply(rb[1], relevantChanges);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//\tthis is the naive straight forward synchronous dispatch\n\t\t\t\t\t\tcallObserverSafe(target, relevantChanges);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet tmpa;\n\t\t\tif (currentObservable.parent) {\n\t\t\t\ttmpa = new Array(l);\n\t\t\t\tfor (let i = 0; i < l; i++) {\n\t\t\t\t\ttmp = changes[i];\n\t\t\t\t\tnewPath = [currentObservable.ownKey, ...tmp.path];\n\t\t\t\t\ttmpa[i] = {\n\t\t\t\t\t\ttype: tmp.type,\n\t\t\t\t\t\tpath: newPath,\n\t\t\t\t\t\tvalue: tmp.value,\n\t\t\t\t\t\toldValue: tmp.oldValue,\n\t\t\t\t\t\tobject: tmp.object\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tchanges = tmpa;\n\t\t\t\tcurrentObservable = currentObservable.parent;\n\t\t\t} else {\n\t\t\t\tcurrentObservable = null;\n\t\t\t}\n\t\t} while (currentObservable);\n\t},\n\tgetObservedOf = function getObservedOf(item, key, parent) {\n\t\tif (!item || typeof item !== 'object') {\n\t\t\treturn item;\n\t\t} else if (Array.isArray(item)) {\n\t\t\treturn new ArrayOMeta({ target: item, ownKey: key, parent: parent }).proxy;\n\t\t} else if (ArrayBuffer.isView(item)) {\n\t\t\treturn new TypedArrayOMeta({ target: item, ownKey: key, parent: parent }).proxy;\n\t\t} else if (item instanceof Date || item instanceof Error) {\n\t\t\treturn item;\n\t\t} else {\n\t\t\treturn new ObjectOMeta({ target: item, ownKey: key, parent: parent }).proxy;\n\t\t}\n\t},\n\tproxiedPop = function proxiedPop() {\n\t\tconst oMeta = this[oMetaKey],\n\t\t\ttarget = oMeta.target,\n\t\t\tpoppedIndex = target.length - 1;\n\n\t\tlet popResult = target.pop();\n\t\tif (popResult && typeof popResult === 'object') {\n\t\t\tconst tmpObserved = popResult[oMetaKey];\n\t\t\tif (tmpObserved) {\n\t\t\t\tpopResult = tmpObserved.detach();\n\t\t\t}\n\t\t}\n\n\t\tconst changes = [{ type: DELETE, path: [poppedIndex], oldValue: popResult, object: this }];\n\t\tcallObservers(oMeta, changes);\n\n\t\treturn popResult;\n\t},\n\tproxiedPush = function proxiedPush() {\n\t\tconst\n\t\t\toMeta = this[oMetaKey],\n\t\t\ttarget = oMeta.target,\n\t\t\tl = arguments.length,\n\t\t\tpushContent = new Array(l),\n\t\t\tinitialLength = target.length;\n\n\t\tfor (let i = 0; i < l; i++) {\n\t\t\tpushContent[i] = getObservedOf(arguments[i], initialLength + i, oMeta);\n\t\t}\n\t\tconst pushResult = Reflect.apply(target.push, target, pushContent);\n\n\t\tconst changes = [];\n\t\tfor (let i = initialLength, l = target.length; i < l; i++) {\n\t\t\tchanges[i - initialLength] = { type: INSERT, path: [i], value: target[i], object: this };\n\t\t}\n\t\tcallObservers(oMeta, changes);\n\n\t\treturn pushResult;\n\t},\n\tproxiedShift = function proxiedShift() {\n\t\tconst\n\t\t\toMeta = this[oMetaKey],\n\t\t\ttarget = oMeta.target;\n\t\tlet shiftResult, i, l, item, tmpObserved;\n\n\t\tshiftResult = target.shift();\n\t\tif (shiftResult && typeof shiftResult === 'object') {\n\t\t\ttmpObserved = shiftResult[oMetaKey];\n\t\t\tif (tmpObserved) {\n\t\t\t\tshiftResult = tmpObserved.detach();\n\t\t\t}\n\t\t}\n\n\t\t//\tupdate indices of the remaining items\n\t\tfor (i = 0, l = target.length; i < l; i++) {\n\t\t\titem = target[i];\n\t\t\tif (item && typeof item === 'object') {\n\t\t\t\ttmpObserved = item[oMetaKey];\n\t\t\t\tif (tmpObserved) {\n\t\t\t\t\ttmpObserved.ownKey = i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst changes = [{ type: DELETE, path: [0], oldValue: shiftResult, object: this }];\n\t\tcallObservers(oMeta, changes);\n\n\t\treturn shiftResult;\n\t},\n\tproxiedUnshift = function proxiedUnshift() {\n\t\tconst\n\t\t\toMeta = this[oMetaKey],\n\t\t\ttarget = oMeta.target,\n\t\t\tal = arguments.length,\n\t\t\tunshiftContent = new Array(al);\n\n\t\tfor (let i = 0; i < al; i++) {\n\t\t\tunshiftContent[i] = getObservedOf(arguments[i], i, oMeta);\n\t\t}\n\t\tconst unshiftResult = Reflect.apply(target.unshift, target, unshiftContent);\n\n\t\tfor (let i = 0, l = target.length, item; i < l; i++) {\n\t\t\titem = target[i];\n\t\t\tif (item && typeof item === 'object') {\n\t\t\t\tconst tmpObserved = item[oMetaKey];\n\t\t\t\tif (tmpObserved) {\n\t\t\t\t\ttmpObserved.ownKey = i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//\tpublish changes\n\t\tconst l = unshiftContent.length;\n\t\tconst changes = new Array(l);\n\t\tfor (let i = 0; i < l; i++) {\n\t\t\tchanges[i] = { type: INSERT, path: [i], value: target[i], object: this };\n\t\t}\n\t\tcallObservers(oMeta, changes);\n\n\t\treturn unshiftResult;\n\t},\n\tproxiedReverse = function proxiedReverse() {\n\t\tconst\n\t\t\toMeta = this[oMetaKey],\n\t\t\ttarget = oMeta.target;\n\t\tlet i, l, item;\n\n\t\ttarget.reverse();\n\t\tfor (i = 0, l = target.length; i < l; i++) {\n\t\t\titem = target[i];\n\t\t\tif (item && typeof item === 'object') {\n\t\t\t\tconst tmpObserved = item[oMetaKey];\n\t\t\t\tif (tmpObserved) {\n\t\t\t\t\ttmpObserved.ownKey = i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst changes = [{ type: REVERSE, path: [], object: this }];\n\t\tcallObservers(oMeta, changes);\n\n\t\treturn this;\n\t},\n\tproxiedSort = function proxiedSort(comparator) {\n\t\tconst\n\t\t\toMeta = this[oMetaKey],\n\t\t\ttarget = oMeta.target;\n\t\tlet i, l, item;\n\n\t\ttarget.sort(comparator);\n\t\tfor (i = 0, l = target.length; i < l; i++) {\n\t\t\titem = target[i];\n\t\t\tif (item && typeof item === 'object') {\n\t\t\t\tconst tmpObserved = item[oMetaKey];\n\t\t\t\tif (tmpObserved) {\n\t\t\t\t\ttmpObserved.ownKey = i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst changes = [{ type: SHUFFLE, path: [], object: this }];\n\t\tcallObservers(oMeta, changes);\n\n\t\treturn this;\n\t},\n\tproxiedFill = function proxiedFill(filVal, start, end) {\n\t\tconst\n\t\t\toMeta = this[oMetaKey],\n\t\t\ttarget = oMeta.target,\n\t\t\tchanges = [],\n\t\t\ttarLen = target.length,\n\t\t\tprev = target.slice(0);\n\t\tstart = start === undefined ? 0 : (start < 0 ? Math.max(tarLen + start, 0) : Math.min(start, tarLen));\n\t\tend = end === undefined ? tarLen : (end < 0 ? Math.max(tarLen + end, 0) : Math.min(end, tarLen));\n\n\t\tif (start < tarLen && end > start) {\n\t\t\ttarget.fill(filVal, start, end);\n\n\t\t\tlet tmpObserved;\n\t\t\tfor (let i = start, item, tmpTarget; i < end; i++) {\n\t\t\t\titem = target[i];\n\t\t\t\ttarget[i] = getObservedOf(item, i, oMeta);\n\t\t\t\tif (prev.hasOwnProperty(i)) {\n\t\t\t\t\ttmpTarget = prev[i];\n\t\t\t\t\tif (tmpTarget && typeof tmpTarget === 'object') {\n\t\t\t\t\t\ttmpObserved = tmpTarget[oMetaKey];\n\t\t\t\t\t\tif (tmpObserved) {\n\t\t\t\t\t\t\ttmpTarget = tmpObserved.detach();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tchanges.push({ type: UPDATE, path: [i], value: target[i], oldValue: tmpTarget, object: this });\n\t\t\t\t} else {\n\t\t\t\t\tchanges.push({ type: INSERT, path: [i], value: target[i], object: this });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcallObservers(oMeta, changes);\n\t\t}\n\n\t\treturn this;\n\t},\n\tproxiedCopyWithin = function proxiedCopyWithin(dest, start, end) {\n\t\tconst\n\t\t\toMeta = this[oMetaKey],\n\t\t\ttarget = oMeta.target,\n\t\t\ttarLen = target.length;\n\t\tdest = dest < 0 ? Math.max(tarLen + dest, 0) : dest;\n\t\tstart = start === undefined ? 0 : (start < 0 ? Math.max(tarLen + start, 0) : Math.min(start, tarLen));\n\t\tend = end === undefined ? tarLen : (end < 0 ? Math.max(tarLen + end, 0) : Math.min(end, tarLen));\n\t\tconst len = Math.min(end - start, tarLen - dest);\n\n\t\tif (dest < tarLen && dest !== start && len > 0) {\n\t\t\tconst\n\t\t\t\tprev = target.slice(0),\n\t\t\t\tchanges = [];\n\n\t\t\ttarget.copyWithin(dest, start, end);\n\n\t\t\tfor (let i = dest, nItem, oItem, tmpObserved; i < dest + len; i++) {\n\t\t\t\t//\tupdate newly placed observables, if any\n\t\t\t\tnItem = target[i];\n\t\t\t\tif (nItem && typeof nItem === 'object') {\n\t\t\t\t\tnItem = getObservedOf(nItem, i, oMeta);\n\t\t\t\t\ttarget[i] = nItem;\n\t\t\t\t}\n\n\t\t\t\t//\tdetach overridden observables, if any\n\t\t\t\toItem = prev[i];\n\t\t\t\tif (oItem && typeof oItem === 'object') {\n\t\t\t\t\ttmpObserved = oItem[oMetaKey];\n\t\t\t\t\tif (tmpObserved) {\n\t\t\t\t\t\toItem = tmpObserved.detach();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (typeof nItem !== 'object' && nItem === oItem) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tchanges.push({ type: UPDATE, path: [i], value: nItem, oldValue: oItem, object: this });\n\t\t\t}\n\n\t\t\tcallObservers(oMeta, changes);\n\t\t}\n\n\t\treturn this;\n\t},\n\tproxiedSplice = function proxiedSplice() {\n\t\tconst\n\t\t\toMeta = this[oMetaKey],\n\t\t\ttarget = oMeta.target,\n\t\t\tsplLen = arguments.length,\n\t\t\tspliceContent = new Array(splLen),\n\t\t\ttarLen = target.length;\n\n\t\t//\tobservify the newcomers\n\t\tfor (let i = 0; i < splLen; i++) {\n\t\t\tspliceContent[i] = getObservedOf(arguments[i], i, oMeta);\n\t\t}\n\n\t\t//\tcalculate pointers\n\t\tconst\n\t\t\tstartIndex = splLen === 0 ? 0 : (spliceContent[0] < 0 ? tarLen + spliceContent[0] : spliceContent[0]),\n\t\t\tremoved = splLen < 2 ? tarLen - startIndex : spliceContent[1],\n\t\t\tinserted = Math.max(splLen - 2, 0),\n\t\t\tspliceResult = Reflect.apply(target.splice, target, spliceContent),\n\t\t\tnewTarLen = target.length;\n\n\t\t//\treindex the paths\n\t\tlet tmpObserved;\n\t\tfor (let i = 0, item; i < newTarLen; i++) {\n\t\t\titem = target[i];\n\t\t\tif (item && typeof item === 'object') {\n\t\t\t\ttmpObserved = item[oMetaKey];\n\t\t\t\tif (tmpObserved) {\n\t\t\t\t\ttmpObserved.ownKey = i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//\tdetach removed objects\n\t\tlet i, l, item;\n\t\tfor (i = 0, l = spliceResult.length; i < l; i++) {\n\t\t\titem = spliceResult[i];\n\t\t\tif (item && typeof item === 'object') {\n\t\t\t\ttmpObserved = item[oMetaKey];\n\t\t\t\tif (tmpObserved) {\n\t\t\t\t\tspliceResult[i] = tmpObserved.detach();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst changes = [];\n\t\tlet index;\n\t\tfor (index = 0; index < removed; index++) {\n\t\t\tif (index < inserted) {\n\t\t\t\tchanges.push({ type: UPDATE, path: [startIndex + index], value: target[startIndex + index], oldValue: spliceResult[index], object: this });\n\t\t\t} else {\n\t\t\t\tchanges.push({ type: DELETE, path: [startIndex + index], oldValue: spliceResult[index], object: this });\n\t\t\t}\n\t\t}\n\t\tfor (; index < inserted; index++) {\n\t\t\tchanges.push({ type: INSERT, path: [startIndex + index], value: target[startIndex + index], object: this });\n\t\t}\n\t\tcallObservers(oMeta, changes);\n\n\t\treturn spliceResult;\n\t},\n\tproxiedTypedArraySet = function proxiedTypedArraySet(source, offset) {\n\t\tconst\n\t\t\toMeta = this[oMetaKey],\n\t\t\ttarget = oMeta.target,\n\t\t\tsouLen = source.length,\n\t\t\tprev = target.slice(0);\n\t\toffset = offset || 0;\n\n\t\ttarget.set(source, offset);\n\t\tconst changes = new Array(souLen);\n\t\tfor (let i = offset; i < (souLen + offset); i++) {\n\t\t\tchanges[i - offset] = { type: UPDATE, path: [i], value: target[i], oldValue: prev[i], object: this };\n\t\t}\n\n\t\tcallObservers(oMeta, changes);\n\t},\n\tproxiedArrayMethods = {\n\t\tpop: proxiedPop,\n\t\tpush: proxiedPush,\n\t\tshift: proxiedShift,\n\t\tunshift: proxiedUnshift,\n\t\treverse: proxiedReverse,\n\t\tsort: proxiedSort,\n\t\tfill: proxiedFill,\n\t\tcopyWithin: proxiedCopyWithin,\n\t\tsplice: proxiedSplice\n\t},\n\tproxiedTypedArrayMethods = {\n\t\treverse: proxiedReverse,\n\t\tsort: proxiedSort,\n\t\tfill: proxiedFill,\n\t\tcopyWithin: proxiedCopyWithin,\n\t\tset: proxiedTypedArraySet\n\t};\n\nclass OMetaBase {\n\tconstructor(properties, cloningFunction) {\n\t\tconst { target, parent, ownKey } = properties;\n\t\tif (parent && ownKey !== undefined) {\n\t\t\tthis.parent = parent;\n\t\t\tthis.ownKey = ownKey;\n\t\t} else {\n\t\t\tthis.parent = null;\n\t\t\tthis.ownKey = null;\n\t\t}\n\t\tconst targetClone = cloningFunction(target, this);\n\t\tthis.observers = [];\n\t\tthis.revocable = Proxy.revocable(targetClone, this);\n\t\tthis.proxy = this.revocable.proxy;\n\t\tthis.target = targetClone;\n\t\tthis.options = this.processOptions(properties.options);\n\t}\n\n\tprocessOptions(options) {\n\t\tif (options) {\n\t\t\tif (typeof options !== 'object') {\n\t\t\t\tthrow new Error(`Observable options if/when provided, MAY only be an object, got '${options}'`);\n\t\t\t}\n\t\t\tconst invalidOptions = Object.keys(options).filter(option => !validObservableOptionKeys.hasOwnProperty(option));\n\t\t\tif (invalidOptions.length) {\n\t\t\t\tthrow new Error(`'${invalidOptions.join(', ')}' is/are not a valid Observable option/s`);\n\t\t\t}\n\t\t\treturn Object.assign({}, options);\n\t\t} else {\n\t\t\treturn {};\n\t\t}\n\t}\n\n\tdetach() {\n\t\tthis.parent = null;\n\t\treturn this.target;\n\t}\n\n\tset(target, key, value) {\n\t\tlet oldValue = target[key];\n\n\t\tif (value !== oldValue) {\n\t\t\tconst newValue = getObservedOf(value, key, this);\n\t\t\ttarget[key] = newValue;\n\n\t\t\tif (oldValue && typeof oldValue === 'object') {\n\t\t\t\tconst tmpObserved = oldValue[oMetaKey];\n\t\t\t\tif (tmpObserved) {\n\t\t\t\t\toldValue = tmpObserved.detach();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst changes = oldValue === undefined\n\t\t\t\t? [{ type: INSERT, path: [key], value: newValue, object: this.proxy }]\n\t\t\t\t: [{ type: UPDATE, path: [key], value: newValue, oldValue: oldValue, object: this.proxy }];\n\t\t\tcallObservers(this, changes);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tdeleteProperty(target, key) {\n\t\tlet oldValue = target[key];\n\n\t\tdelete target[key];\n\n\t\tif (oldValue && typeof oldValue === 'object') {\n\t\t\tconst tmpObserved = oldValue[oMetaKey];\n\t\t\tif (tmpObserved) {\n\t\t\t\toldValue = tmpObserved.detach();\n\t\t\t}\n\t\t}\n\n\t\tconst changes = [{ type: DELETE, path: [key], oldValue: oldValue, object: this.proxy }];\n\t\tcallObservers(this, changes);\n\n\t\treturn true;\n\t}\n}\n\nclass ObjectOMeta extends OMetaBase {\n\tconstructor(properties) {\n\t\tsuper(properties, prepareObject);\n\t}\n}\n\nclass ArrayOMeta extends OMetaBase {\n\tconstructor(properties) {\n\t\tsuper(properties, prepareArray);\n\t}\n\n\tget(target, key) {\n\t\tif (proxiedArrayMethods.hasOwnProperty(key)) {\n\t\t\treturn proxiedArrayMethods[key];\n\t\t} else {\n\t\t\treturn target[key];\n\t\t}\n\t}\n}\n\nclass TypedArrayOMeta extends OMetaBase {\n\tconstructor(properties) {\n\t\tsuper(properties, prepareTypedArray);\n\t}\n\n\tget(target, key) {\n\t\tif (proxiedTypedArrayMethods.hasOwnProperty(key)) {\n\t\t\treturn proxiedTypedArrayMethods[key];\n\t\t} else {\n\t\t\treturn target[key];\n\t\t}\n\t}\n}\n\nclass Observable {\n\tconstructor() {\n\t\tthrow new Error('Observable MAY NOT be created via constructor, see \"Observable.from\" API');\n\t}\n\n\tstatic from(target, options) {\n\t\tif (!target || typeof target !== 'object') {\n\t\t\tthrow new Error('observable MAY ONLY be created from a non-null object');\n\t\t} else if (target[oMetaKey]) {\n\t\t\treturn target;\n\t\t} else if (Array.isArray(target)) {\n\t\t\treturn new ArrayOMeta({ target: target, ownKey: null, parent: null, options: options }).proxy;\n\t\t} else if (ArrayBuffer.isView(target)) {\n\t\t\treturn new TypedArrayOMeta({ target: target, ownKey: null, parent: null, options: options }).proxy;\n\t\t} else if (target instanceof Date || target instanceof Error) {\n\t\t\tthrow new Error(`${target} found to be one of a on-observable types`);\n\t\t} else {\n\t\t\treturn new ObjectOMeta({ target: target, ownKey: null, parent: null, options: options }).proxy;\n\t\t}\n\t}\n\n\tstatic isObservable(input) {\n\t\treturn !!(input && input[oMetaKey]);\n\t}\n}\n\nObject.freeze(Observable);\n\nexport { Observable };","import _g from \"./g\";\n\nexport default function utilsFactory(globals?: any): any {\n    const g = globals || _g;\n\n    const generateBareUrl = (type: string, integrationID: string): string => `https://api.easybase.io/${type}/${integrationID}`;\n\n    const generateAuthBody = (): any => {\n        const stamp = Date.now();\n        return {\n            token: g.token,\n            token_time: ~~(g.session / (stamp % 64)),\n            now: stamp\n        }\n    }\n    \n    function log(...params: any): void {\n        if (g.options.logging) {\n            console.log(\"EASYBASE — \", ...params);\n        }\n    }\n\n    return {\n        generateAuthBody,\n        generateBareUrl,\n        log\n    }\n}\n","import axios from \"axios\";\nimport { POST_TYPES, AuthPostResponse, Globals } from \"./types\";\nimport _g from \"./g\";\nimport utilsFactory from \"./utils\";\n\nexport default function authFactory(globals?: Globals): any {\n    const { generateBareUrl, generateAuthBody, log } = utilsFactory(globals);\n\n    const g = globals || _g;\n\n    const initAuth = async (): Promise<boolean> => {\n        g.session = Math.floor(100000000 + Math.random() * 900000000);\n    \n        log(`Handshaking on instance`);\n    \n        try {\n            const res = await axios.post(generateBareUrl(\"REACT\", g.integrationID), {\n                version: g.ebconfig.version,\n                tt: g.ebconfig.tt,\n                session: g.session,\n                isNode: true\n            }, { headers: { 'Eb-Post-Req': POST_TYPES.HANDSHAKE } });\n    \n            if (res.data.token) {\n                g.token = res.data.token;\n                return true;\n            } else {\n                return false;\n            }\n        } catch (error) {\n            console.error(error);\n            return false;\n        }\n    }\n    \n    const tokenPost = async (postType: POST_TYPES, body?: {}): Promise<AuthPostResponse> => {\n        try {\n            const res = await axios.post(generateBareUrl(\"REACT\", g.integrationID), {\n                _auth: generateAuthBody(),\n                ...body\n            }, { headers: { 'Eb-Post-Req': postType } });\n    \n            if ({}.hasOwnProperty.call(res.data, 'ErrorCode') || {}.hasOwnProperty.call(res.data, 'code')) {\n                if (res.data.code === \"JWT EXPIRED\") {\n                    await initAuth();\n                    return tokenPost(postType, body);\n                }\n    \n                return {\n                    success: false,\n                    data: res.data.body\n                }\n            } else {\n                return {\n                    success: res.data.success,\n                    data: res.data.body\n                }\n            }\n        } catch (error) {\n            return {\n                success: false,\n                data: error\n            }\n        }\n    }\n    \n    const tokenPostAttachment = async (formData: FormData, customHeaders: {}): Promise<AuthPostResponse> => {\n        const regularAuthbody = generateAuthBody();\n    \n        const attachmentAuth = {\n            'Eb-token': regularAuthbody.token,\n            'Eb-token-time': regularAuthbody.token_time,\n            'Eb-now': regularAuthbody.now\n        };\n    \n        try {\n            const res = await axios.post(generateBareUrl(\"REACT\", g.integrationID), formData, {\n                headers: {\n                    'Eb-Post-Req': POST_TYPES.UPLOAD_ATTACHMENT,\n                    'Content-Type': 'multipart/form-data',\n                    ...customHeaders,\n                    ...attachmentAuth\n                }\n            });\n    \n            if ({}.hasOwnProperty.call(res.data, 'ErrorCode') || {}.hasOwnProperty.call(res.data, 'code')) {\n                if (res.data.code === \"JWT EXPIRED\") {\n                    await initAuth();\n                    return tokenPostAttachment(formData, customHeaders);\n                }\n    \n                return {\n                    success: false,\n                    data: res.data.body\n                }\n            } else {\n                return {\n                    success: res.data.success,\n                    data: res.data.body\n                }\n            }\n        } catch (error) {\n            return {\n                success: false,\n                data: error\n            }\n        }\n    }\n    \n    return {\n        initAuth,\n        tokenPost,\n        tokenPostAttachment\n    }\n}\n","import {\n    EasybaseProviderProps,\n    FrameConfiguration,\n    POST_TYPES,\n    FileFromURI,\n    ContextValue,\n    QueryOptions,\n    AddRecordOptions,\n    StatusResponse,\n    ConfigureFrameOptions,\n    UpdateRecordAttachmentOptions,\n    AuthPostResponse\n} from \"./types\";\nimport { gFactory } from \"./g\";\nimport deepEqual from \"fast-deep-equal\";\nimport { Observable } from \"./object-observer\";\nimport imageExtensions from \"./assets/image-extensions.json\";\nimport videoExtensions from \"./assets/video-extensions.json\";\nimport authFactory from \"./auth\";\nimport utilsFactory from \"./utils\";\n\nexport default function EasybaseProvider({ ebconfig, options }: EasybaseProviderProps): ContextValue {\n\n    const g = gFactory();\n\n    const {\n        initAuth,\n        tokenPost: tokenPostGeneric,\n        tokenPostAttachment: tokenPostAttachmentGeneric\n    } = authFactory(g);\n\n    const tokenPost = async (postType: POST_TYPES, body?: {}): Promise<AuthPostResponse> => {\n        if (!_mounted) {\n            await mount();\n        }\n        return tokenPostGeneric(postType, body);\n    }\n\n    const tokenPostAttachment = async (formData: FormData, customHeaders: {}): Promise<AuthPostResponse> => {\n        if (!_mounted) {\n            await mount();\n        }\n        return tokenPostAttachmentGeneric(formData, customHeaders);\n    }\n\n    const { log } = utilsFactory(g);\n\n    let _mounted = false;\n\n    if (typeof ebconfig !== 'object' || ebconfig === null || ebconfig === undefined) {\n        console.error(\"No ebconfig object passed. do `import ebconfig from \\\"ebconfig.json\\\"` and pass it to the Easybase provider\");\n        return;\n    } else if (!ebconfig.integration || !ebconfig.tt) {\n        console.error(\"Invalid ebconfig object passed. Download ebconfig.json from Easybase.io and try again.\");\n        return;\n    }\n\n    // eslint-disable-next-line dot-notation\n    const isIE = typeof document !== 'undefined' && !!document['documentMode'];\n\n    if (isIE) {\n        console.error(\"EASYBASE — easybase-react does not support Internet Explorer. Please use a different browser.\");\n    }\n\n    g.options = { ...options };\n    g.integrationID = ebconfig.integration;\n    g.ebconfig = ebconfig;\n\n    const mount = async () => {\n        const t1 = Date.now();\n        log(\"mounting...\");\n        await initAuth();\n        _mounted = true;\n        const res = await tokenPost(POST_TYPES.VALID_TOKEN);\n        const elapsed = Date.now() - t1;\n        if (res.success) {\n            log(\"Valid auth initiation in \" + elapsed + \"ms\");\n        }\n    }\n\n    let _isFrameInitialized = true;\n    let _frameConfiguration: FrameConfiguration = {\n        offset: 0,\n        limit: 0\n    };\n    const _observedChangeStack: Record<string, any>[] = [];\n    let _recordIdMap: WeakMap<Record<string, any>, \"string\"> = new WeakMap();\n    let _observableFrame = {\n        observe: (_) => { },\n        unobserve: () => { }\n    }\n    let _frame: Record<string, any>[] = [];\n\n    let isSyncing = false;\n\n\n    function Frame(): Record<string, any>[];\n    function Frame(index: number): Record<string, any>;\n    function Frame(index?: number): Record<string, any>[] | Record<string, any> {\n        if (typeof index === \"number\") {\n            return _observableFrame[index];\n        } else {\n            return _observableFrame;\n        }\n    }\n\n    const _recordIDExists = (record: Record<string, any>): Boolean => !!_recordIdMap.get(record);\n\n    const Query = async (options: QueryOptions): Promise<Record<string, any>[]> => {\n        const defaultOptions: QueryOptions = {\n            queryName: \"\"\n        }\n\n        const fullOptions: QueryOptions = { ...defaultOptions, ...options };\n\n        try {\n            const res = await tokenPost(POST_TYPES.GET_QUERY, fullOptions);\n            return res.data\n        } catch (error) {\n            return [];\n        }\n    }\n\n    const configureFrame = (options: ConfigureFrameOptions): StatusResponse => {\n        if (options.limit === _frameConfiguration.limit && options.offset === _frameConfiguration.offset) {\n            return {\n                message: \"Frame parameters are the same as the previous configuration.\",\n                success: true\n            };\n        }\n\n        _frameConfiguration = { ..._frameConfiguration };\n\n        if (options.limit !== undefined) _frameConfiguration.limit = options.limit;\n        if (options.offset !== undefined && options.offset >= 0) _frameConfiguration.offset = options.offset;\n\n        _isFrameInitialized = false;\n        return {\n            message: \"Successfully configured frame. Run sync() for changes to be shown in frame\",\n            success: true\n        }\n    }\n\n    const currentConfiguration = (): FrameConfiguration => ({ ..._frameConfiguration });\n\n    const addRecord = async (options: AddRecordOptions): Promise<StatusResponse> => {\n        const defaultValues: AddRecordOptions = {\n            insertAtEnd: false,\n            newRecord: {}\n        }\n\n        const fullOptions: AddRecordOptions = { ...defaultValues, ...options };\n\n        try {\n            const res = await tokenPost(POST_TYPES.SYNC_INSERT, fullOptions);\n            return {\n                message: res.data,\n                success: res.success\n            }\n        } catch (err) {\n            console.error(\"Easybase Error: addRecord failed \", err);\n            return {\n                message: \"Easybase Error: addRecord failed \" + err,\n                success: false,\n                error: err\n            }\n        }\n    }\n\n    const deleteRecord = async (record: Record<string, any> | {}): Promise<StatusResponse> => {\n        const _frameRecord = _frame.find(ele => deepEqual(ele, record));\n\n        if (_frameRecord && _recordIdMap.get(_frameRecord)) {\n            const res = await tokenPost(POST_TYPES.SYNC_DELETE, {\n                _id: _recordIdMap.get(_frameRecord)\n            });\n            return {\n                success: res.success,\n                message: res.data\n            }\n        } else {\n            try {\n                const res = await tokenPost(POST_TYPES.SYNC_DELETE, {\n                    record\n                });\n                return {\n                    success: res.success,\n                    message: res.data\n                }\n            } catch (err) {\n                console.error(\"Easybase Error: deleteRecord failed \", err);\n                return {\n                    success: false,\n                    message: \"Easybase Error: deleteRecord failed \" + err,\n                    error: err\n                }\n            }\n        }\n    }\n\n    const fullTableSize = async (): Promise<number> => {\n        const res = await tokenPost(POST_TYPES.TABLE_SIZE, {});\n        if (res.success) {\n            return res.data;\n        } else {\n            return 0;\n        }\n    }\n\n    const tableTypes = async (): Promise<Record<string, any>> => {\n        const res = await tokenPost(POST_TYPES.COLUMN_TYPES, {});\n        if (res.success) {\n            return res.data;\n        } else {\n            return {};\n        }\n    }\n\n    // Only allow the deletion of one element at a time\n    // First handle shifting of the array size. Then iterate\n    const sync = async (): Promise<StatusResponse> => {\n        const _realignFrames = (newData: Record<string, any>[]) => {\n            let isNewDataTheSame = true;\n\n            if (newData.length !== _frame.length) {\n                isNewDataTheSame = false;\n            } else {\n                for (let i = 0; i < newData.length; i++) {\n                    const newDataNoId = { ...newData[i] };\n                    delete newDataNoId._id;\n                    if (!deepEqual(newDataNoId, _frame[i])) {\n                        isNewDataTheSame = false;\n                        break;\n                    }\n                }\n            }\n\n            if (!isNewDataTheSame) {\n                const oldframe = [..._frame];\n                oldframe.length = newData.length;\n                _recordIdMap = new WeakMap();\n                for (let i = 0; i < newData.length; i++) {\n                    const currNewEle = newData[i];\n                    _recordIdMap.set(currNewEle, currNewEle._id);\n                    delete currNewEle._id;\n                    oldframe[i] = currNewEle;\n                }\n                _frame = oldframe;\n                _observableFrame.unobserve();\n                _observableFrame = Observable.from(_frame);\n\n                _observableFrame.observe((allChanges: any[]) => {\n                    allChanges.forEach((change: any) => {\n                        _observedChangeStack.push({\n                            type: change.type,\n                            path: change.path,\n                            value: change.value,\n                            _id: _recordIdMap.get(_frame[Number(change.path[0])])\n                            // Not bringing change.object or change.oldValue\n                        });\n                        log(JSON.stringify({\n                            type: change.type,\n                            path: change.path,\n                            value: change.value,\n                            _id: _recordIdMap.get(_frame[Number(change.path[0])])\n                            // Not bringing change.object or change.oldValue\n                        }))\n                    });\n                });\n            }\n        }\n\n        if (isSyncing) {\n            return {\n                success: false,\n                message: \"Easybase Error: the provider is currently syncing, use 'await sync()' before calling sync() again\"\n            };\n        }\n\n        isSyncing = true;\n\n        const { offset, limit }: ConfigureFrameOptions = _frameConfiguration;\n\n        if (_isFrameInitialized) {\n            if (_observedChangeStack.length > 0) {\n                log(\"Stack change: \", _observedChangeStack);\n                const res = await tokenPost(POST_TYPES.SYNC_STACK, {\n                    stack: _observedChangeStack,\n                    limit,\n                    offset\n                });\n                console.log(res.data);\n                if (res.success) {\n                    _observedChangeStack.length = 0;\n                }\n            }\n        }\n\n        try {\n            const res = await tokenPost(POST_TYPES.GET_FRAME, {\n                offset,\n                limit\n            });\n\n            // Check if the array recieved from db is the same as frame\n            // If not, update it and send useFrameEffect\n\n            if (res.success === false) {\n                console.error(res.data);\n                isSyncing = false;\n                return {\n                    success: false,\n                    message: \"\" + res.data\n                }\n            } else {\n                _isFrameInitialized = true;\n                _realignFrames(res.data);\n                isSyncing = false;\n                return {\n                    message: 'Success. Call frame for data',\n                    success: true\n                }\n            }\n        } catch (err) {\n            console.error(\"Easybase Error: get failed \", err);\n            isSyncing = false;\n            return {\n                success: false,\n                message: \"Easybase Error: get failed \" + err,\n                error: err\n            }\n        }\n    }\n\n    const updateRecordImage = async (options: UpdateRecordAttachmentOptions): Promise<StatusResponse> => {\n        const res = await _updateRecordAttachment(options, \"image\");\n        return res;\n    }\n    const updateRecordVideo = async (options: UpdateRecordAttachmentOptions): Promise<StatusResponse> => {\n        const res = await _updateRecordAttachment(options, \"video\");\n        return res;\n    }\n    const updateRecordFile = async (options: UpdateRecordAttachmentOptions): Promise<StatusResponse> => {\n        const res = await _updateRecordAttachment(options, \"file\");\n        return res;\n    }\n\n    const _updateRecordAttachment = async (options: UpdateRecordAttachmentOptions, type: string): Promise<StatusResponse> => {\n        const _frameRecord: Record<string, any> | undefined = _frame.find(ele => deepEqual(ele, options.record));\n\n        if (_frameRecord === undefined || !_recordIDExists(_frameRecord)) {\n            log(\"Attempting to add attachment to a new record that has not been synced. Please sync() before trying to add attachment.\");\n            return {\n                success: false,\n                message: \"Attempting to add attachment to a new record that has not been synced. Please sync() before trying to add attachment.\"\n            }\n        }\n\n        const ext: string = options.attachment.name.split(\".\").pop()!.toLowerCase();\n\n        log(ext);\n\n        if (type === \"image\" && !imageExtensions.includes(ext)) {\n            return {\n                success: false,\n                message: \"Image files must have a proper image extension in the file name\"\n            };\n        }\n\n        if (type === \"video\" && !videoExtensions.includes(ext)) {\n            return {\n                success: false,\n                message: \"Video files must have a proper video extension in the file name\"\n            };\n        }\n\n        function isFileFromURI(f: File | FileFromURI): f is FileFromURI {\n            return (f as FileFromURI).uri !== undefined;\n        }\n\n        const formData = new FormData();\n\n        if (isFileFromURI(options.attachment)) {\n            formData.append(\"file\", options.attachment as any);\n            formData.append(\"name\", options.attachment.name);\n        } else {\n            formData.append(\"file\", options.attachment);\n            formData.append(\"name\", options.attachment.name);\n        }\n\n        const customHeaders = {\n            'Eb-upload-type': type,\n            'Eb-column-name': options.columnName,\n            'Eb-record-id': _recordIdMap.get(_frameRecord)\n        }\n\n        const res = await tokenPostAttachment(formData, customHeaders);\n\n        await sync();\n\n        return {\n            message: res.data,\n            success: res.success\n        };\n    }\n\n    const c: ContextValue = {\n        configureFrame,\n        addRecord,\n        deleteRecord,\n        sync,\n        updateRecordImage,\n        updateRecordVideo,\n        updateRecordFile,\n        Frame,\n        fullTableSize,\n        tableTypes,\n        currentConfiguration,\n        Query\n    }\n\n    return c;\n\n}","import axios from 'axios';\n\nexport { default as EasybaseProvider} from \"./EasybaseProvider/EasybaseProvider\";\n\nconst generateBareUrl = (type, integrationID) => `https://api.easybase.io/${type}/${integrationID}`;\nconst isBadInt = (my_int) => my_int !== undefined && my_int !== null && Math.floor(my_int) !== my_int;\nconst isBadString = (my_string) => my_string !== undefined && my_string !== null && typeof my_string !== \"string\";\nconst isBadIntegrationID = (my_string) => my_string === undefined || my_string === null || typeof my_string !== \"string\";\nconst isBadObject = (my_obj) => my_obj !== undefined && my_obj !== null && typeof my_obj !== \"object\";\nconst isBadBool = (my_bool) => my_bool !== undefined && my_bool !== null && typeof my_bool !== \"boolean\";\n\ninterface GetOptions {\n    /** EasyBase integration ID. Can be found by expanding the integration menu. This id is automatically generated.  */\n    integrationID: string;\n    /** Edit starting index from which records will be retrieved from. Useful for paging. */\n    offset?: number;\n    /** Limit the amount of records to be retrieved. Can be used in combination with offset. */\n    limit?: number;\n    /** Custom authentication string. Can be set in integration menu. If it is set, it is required to access integration. This acts as an extra layer of security and extensibility. */\n    authentication?: string;\n    /** This object can be set to overwrite the query values as set in the integration menu. If your query is setup to find records where 'age' >= 0, passing in { age: 50 } will query where 'age' >= 50. */\n    customQuery?: Record<string, unknown>;\n}\n\n/**\n * \n * @param {GetOptions} options GetOptions.\n * @returns {Promise<Array>} Array of records.\n * \n */\nexport function get(options: GetOptions): Promise<Array<Record<string, unknown>>> {\n    \n    const defaultOptions: GetOptions = {\n        integrationID: \"\",\n        offset: undefined,\n        limit: undefined,\n        authentication: undefined,\n        customQuery: undefined\n    }\n    const { integrationID, offset, limit, authentication, customQuery } = { ...defaultOptions, ...options };\n\n    if (isBadIntegrationID(integrationID)) throw new Error(\"integrationID is required and must be a string\");\n    if (isBadInt(offset)) throw new Error(\"offset must be an integer\");\n    if (isBadInt(limit)) throw new Error(\"limit must be an integer\");\n    if (isBadString(authentication)) throw new Error(\"authentication must be a string or null\");\n    if (isBadObject(customQuery)) throw new Error(\"customQuery must be an object or null\");\n\n    return new Promise((resolve, reject) => {\n        try {\n            let axios_body: any = {};\n            if (typeof customQuery === \"object\") axios_body = { ...customQuery };\n            if (offset !== undefined) axios_body.offset = offset;\n            if (limit !== undefined) axios_body.limit = limit;\n            if (authentication !== undefined) axios_body.authentication = authentication;\n\n            axios.post(generateBareUrl('get', integrationID), axios_body)\n                .then(res => {\n                    if ({}.hasOwnProperty.call(res.data, 'ErrorCode')) {\n                        console.error(res.data.message);\n                        resolve([ res.data.message ]);\n                    } else resolve(res.data);\n                })\n        }\n        catch (err) { reject(err); }\n    });\n}\n\n\n\ninterface PostOptions {\n    /** EasyBase integration ID. Can be found by expanding the integration menu. This id is automatically generated.  */\n    integrationID: string;\n    /** Values to post to EasyBase collection. Format is { column name: value } */\n    newRecord: Record<string, unknown>;\n    /** Custom authentication string. Can be set in integration menu. If it is set, it is required to access integration. This acts as an extra layer of security and extensibility. */\n    authentication?: string;\n    /** If true, record will be inserted at the end of the collection rather than the front. */\n    insertAtEnd?: boolean;\n}\n\n/**\n * \n * @param {PostOptions} options PostOptions\n * @returns {Promise<String>} Post status.\n * \n */\nexport function post(options: PostOptions): Promise<string> {\n\n    const defaultValues: PostOptions = {\n        integrationID: \"\",\n        newRecord: undefined,\n        authentication: undefined,\n        insertAtEnd: undefined\n    }\n\n    const { integrationID, newRecord, authentication, insertAtEnd } = { ...defaultValues, ...options };\n\n    if (isBadIntegrationID(integrationID)) throw new Error(\"integrationID is required and must be a string\");\n    if (isBadObject(newRecord)) throw new Error(\"newRecord is required and must be a string\");\n    if (isBadString(authentication)) throw new Error(\"authentication must be a string or null\");\n    if (isBadBool(insertAtEnd)) throw new Error(\"insertAtEnd must be a boolean or null\");\n\n    return new Promise((resolve, reject) => {\n        try {\n            const axios_body: any = { ...newRecord };\n            if (authentication !== undefined) axios_body.authentication = authentication;\n            if (insertAtEnd !== undefined) axios_body.insertAtEnd = insertAtEnd;\n\n            axios.post(generateBareUrl('post', integrationID), axios_body)\n                .then(res => {\n                    if ({}.hasOwnProperty.call(res.data, 'ErrorCode')) console.error(res.data.message);\n                    resolve(res.data.message);\n                })\n        }\n        catch (err) { reject(err); }\n    });\n}\n\n\ninterface UpdateOptions {\n    /** EasyBase integration ID. Can be found by expanding the integration menu. This id is automatically generated.  */\n    integrationID: string;\n    /** Values to update records with. Format is { column_name: new value } */\n    updateValues: Record<string, unknown>;\n    /** Custom authentication string. Can be set in integration menu. If it is set, it is required to access integration. This acts as an extra layer of security and extensibility. */\n    authentication?: string;\n    /** This object can be set to overwrite the query values as set in the integration menu. If your query is setup to find records where 'age' >= 0, passing in { age: 50 } will query where 'age' >= 50. */\n    customQuery?: Record<string, unknown>;\n}\n\n/**\n * \n * @param {UpdateOptions} options UpdateOptions\n * @returns {Promise<String>} Update status.\n */\nexport function update(options: UpdateOptions): Promise<string> {\n    const defaultValues: UpdateOptions = {\n        integrationID: \"\",\n        updateValues: undefined,\n        authentication: undefined,\n        customQuery: undefined\n    }\n\n    const { integrationID, updateValues, authentication, customQuery } = { ...defaultValues, ...options };\n\n    if (isBadIntegrationID(integrationID)) throw new Error(\"integrationID is required and must be a string\");\n    if (isBadObject(updateValues) || updateValues === undefined) throw new Error(\"updateValues is required and must be a string\");\n    if (isBadString(authentication)) throw new Error(\"authentication must be a string or null\");\n    if (isBadObject(customQuery)) throw new Error(\"customQuery must be an object or null\");\n\n    return new Promise((resolve, reject) => {\n        try {\n            const axios_body: any = { updateValues, ...customQuery };\n            if (authentication !== undefined) axios_body.authentication = authentication;\n\n            axios.post(generateBareUrl('update', integrationID), axios_body)\n                .then(res => {\n                    if ({}.hasOwnProperty.call(res.data, 'ErrorCode')) console.error(res.data.message);\n                    resolve(res.data.message);\n                })\n        }\n        catch (err) { reject(err); }\n    });\n}\n\ninterface DeleteOptions {\n    /** EasyBase integration ID. Can be found by expanding the integration menu. This id is automatically generated.  */\n    integrationID: string;\n    /** Custom authentication string. Can be set in integration menu. If it is set, it is required to access integration. This acts as an extra layer of security and extensibility. */\n    authentication?: string;\n    /** This object can be set to overwrite the query values as set in the integration menu. If your query is setup to find records where 'age' >= 0, passing in { age: 50 } will query where 'age' >= 50. */\n    customQuery?: Record<string, unknown>;\n}\n\n\n/**\n * \n * @param {DeleteOptions} options DeleteOptions\n * @return {Promise<String>} Delete status.\n */\nexport function Delete(options: DeleteOptions): Promise<string> {\n\n    const defaultValues: DeleteOptions = {\n        integrationID: \"\",\n        authentication: undefined,\n        customQuery: undefined\n    }\n\n    const { integrationID, authentication, customQuery } = { ...defaultValues, ...options };\n\n    if (isBadIntegrationID(integrationID)) throw new Error(\"integrationID is required and must be a string\");\n    if (isBadString(authentication)) throw new Error(\"authentication must be a string or null\");\n    if (isBadObject(customQuery)) throw new Error(\"customQuery must be an object or null\");\n\n    return new Promise((resolve, reject) => {\n        try {\n            const axios_body: any = { ...customQuery };\n            if (authentication !== undefined) axios_body.authentication = authentication;\n\n            axios.post(generateBareUrl('delete', integrationID), axios_body)\n                .then(res => {\n                    if ({}.hasOwnProperty.call(res.data, 'ErrorCode')) console.error(res.data.message);\n                    resolve(res.data.message);\n                })\n        }\n        catch (err) { reject(err); }\n    });\n}\n"],"names":["POST_TYPES","GlobalNamespace","_g","gFactory","INSERT","UPDATE","DELETE","REVERSE","SHUFFLE","oMetaKey","Symbol","validObservableOptionKeys","async","validObserverOptionKeys","path","pathsOf","pathsFrom","processObserveOptions","options","result","undefined","Error","split","filter","n","invalidOptions","Object","keys","option","hasOwnProperty","length","join","observe","observer","oMeta","observers","some","o","opts","push","console","warn","unobserve","ol","al","arguments","i","splice","propertiesBluePrint","value","prepareObject","source","target","defineProperties","key","getObservedOf","prepareArray","l","Array","prepareTypedArray","filterChanges","changes","oPath","change","oPathsOf","type","oPathsFrom","startsWith","callObserverSafe","listener","e","error","callObserversFromMT","batches","callObservers","currentObservable","relevantChanges","newPath","tmp","queueMicrotask","bind","rb","find","b","prototype","apply","tmpa","parent","ownKey","oldValue","object","item","isArray","ArrayOMeta","proxy","ArrayBuffer","isView","TypedArrayOMeta","Date","ObjectOMeta","proxiedPop","poppedIndex","popResult","pop","tmpObserved","detach","proxiedPush","pushContent","initialLength","pushResult","Reflect","proxiedShift","shiftResult","shift","proxiedUnshift","unshiftContent","unshiftResult","unshift","proxiedReverse","reverse","proxiedSort","comparator","sort","proxiedFill","filVal","start","end","tarLen","prev","slice","Math","max","min","fill","tmpTarget","proxiedCopyWithin","dest","len","copyWithin","nItem","oItem","proxiedSplice","splLen","spliceContent","startIndex","removed","inserted","spliceResult","newTarLen","index","proxiedTypedArraySet","offset","souLen","set","proxiedArrayMethods","proxiedTypedArrayMethods","OMetaBase","constructor","properties","cloningFunction","targetClone","revocable","Proxy","processOptions","assign","newValue","deleteProperty","get","Observable","from","isObservable","input","freeze","utilsFactory","globals","g","generateBareUrl","integrationID","generateAuthBody","stamp","now","token","token_time","session","log","params","logging","authFactory","initAuth","floor","random","res","axios","post","version","ebconfig","tt","isNode","headers","HANDSHAKE","data","tokenPost","postType","body","_auth","call","code","success","tokenPostAttachment","formData","customHeaders","regularAuthbody","attachmentAuth","UPLOAD_ATTACHMENT","EasybaseProvider","tokenPostGeneric","tokenPostAttachmentGeneric","_mounted","mount","integration","isIE","document","t1","VALID_TOKEN","elapsed","_isFrameInitialized","_frameConfiguration","limit","_observedChangeStack","_recordIdMap","WeakMap","_observableFrame","_","_frame","isSyncing","Frame","_recordIDExists","record","Query","defaultOptions","queryName","fullOptions","GET_QUERY","configureFrame","message","currentConfiguration","addRecord","defaultValues","insertAtEnd","newRecord","SYNC_INSERT","err","deleteRecord","_frameRecord","ele","deepEqual","SYNC_DELETE","_id","fullTableSize","TABLE_SIZE","tableTypes","COLUMN_TYPES","sync","_realignFrames","newData","isNewDataTheSame","newDataNoId","oldframe","currNewEle","allChanges","forEach","Number","JSON","stringify","SYNC_STACK","stack","GET_FRAME","updateRecordImage","_updateRecordAttachment","updateRecordVideo","updateRecordFile","ext","attachment","name","toLowerCase","imageExtensions","includes","videoExtensions","isFileFromURI","f","uri","FormData","append","columnName","c","isBadInt","my_int","isBadString","my_string","isBadIntegrationID","isBadObject","my_obj","isBadBool","my_bool","authentication","customQuery","Promise","resolve","reject","axios_body","then","update","updateValues","Delete"],"mappings":"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"}